versions pytest-8.4.2, python-3.11.12.final.0
invocation_dir=/home/remi-gau/github/matlabdomain
cwd=/home/remi-gau/github/matlabdomain
args=('--debug=trace', '--cov=sphinxcontrib.matlab', '--cov=tests', '--cov-report=xml', '--cov-report=html', 'tests/')

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x716ea99eebd0>
    pytest_plugin_registered [hook]
        plugin: <Session  exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        plugin_name: session
        manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x716ea99eebd0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x716ea96e4b90>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x716ea96e5a10>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
          plugin_name: 124720106186384
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x716ea99eebd0>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/mark/__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_cov.plugin' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest_cov/plugin.py'>
          plugin_name: pytest_cov
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='no' _global_capturing=<MultiCapture out=None err=None in_=None _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <pytest_cov.plugin.CovPlugin object at 0x716ea98c3550>
          plugin_name: _cov
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x716ea96e4b90>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x716ea96e5a10>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x716ea94ca0d0>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x716ea94ca010>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
          plugin_name: 124720106186384
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x716ea99eebd0>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/mark/__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_cov.plugin' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest_cov/plugin.py'>
          plugin_name: pytest_cov
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='no' _global_capturing=<MultiCapture out=None err=None in_=None _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <pytest_cov.plugin.CovPlugin object at 0x716ea98c3550>
          plugin_name: _cov
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x716ea96e4b90>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x716ea96e5a10>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x716ea94ca0d0>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x716ea94ca010>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x716ea95120d0>
          plugin_name: funcmanage
          manager: <_pytest.config.PytestPluginManager object at 0x716ea9a02690>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x716ea99eebd0>
          start_path: /home/remi-gau/github/matlabdomain
          startdir: /home/remi-gau/github/matlabdomain
      early skip of rewriting module: email.parser [assertion]
      early skip of rewriting module: email.feedparser [assertion]
      finish pytest_report_header --> [['rootdir: /home/remi-gau/github/matlabdomain', 'configfile: pyproject.toml', 'plugins: cov-7.0.0'], 'cachedir: .tox/py311-sphinxlatest/.pytest_cache', ['using: pytest-8.4.2', 'registered third-party plugins:', '  pytest-cov-7.0.0 at /home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest_cov/plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['tests/'] [collection]
        pytest_collectstart [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument CollectionArgument(path=PosixPath('/home/remi-gau/github/matlabdomain/tests'), parts=[], module_name=None) [collection]
            pytest_collect_directory [hook]
                path: /home/remi-gau/github/matlabdomain
                parent: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> <Dir matlabdomain> [hook]
            pytest_collectstart [hook]
                collector: <Dir matlabdomain>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir matlabdomain>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/.eggs
                  path: /home/remi-gau/github/matlabdomain/.eggs
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/.flake8
                  path: /home/remi-gau/github/matlabdomain/.flake8
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir matlabdomain>
                  file_path: /home/remi-gau/github/matlabdomain/.flake8
                  path: /home/remi-gau/github/matlabdomain/.flake8
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/.git
                  path: /home/remi-gau/github/matlabdomain/.git
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/.github
                  path: /home/remi-gau/github/matlabdomain/.github
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/.gitignore
                  path: /home/remi-gau/github/matlabdomain/.gitignore
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir matlabdomain>
                  file_path: /home/remi-gau/github/matlabdomain/.gitignore
                  path: /home/remi-gau/github/matlabdomain/.gitignore
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/.pre-commit-config.yaml
                  path: /home/remi-gau/github/matlabdomain/.pre-commit-config.yaml
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir matlabdomain>
                  file_path: /home/remi-gau/github/matlabdomain/.pre-commit-config.yaml
                  path: /home/remi-gau/github/matlabdomain/.pre-commit-config.yaml
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/.pytest_cache
                  path: /home/remi-gau/github/matlabdomain/.pytest_cache
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/.ruff_cache
                  path: /home/remi-gau/github/matlabdomain/.ruff_cache
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/.tox
                  path: /home/remi-gau/github/matlabdomain/.tox
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/.venv
                  path: /home/remi-gau/github/matlabdomain/.venv
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/AUTHORS
                  path: /home/remi-gau/github/matlabdomain/AUTHORS
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir matlabdomain>
                  file_path: /home/remi-gau/github/matlabdomain/AUTHORS
                  path: /home/remi-gau/github/matlabdomain/AUTHORS
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/CHANGES.rst
                  path: /home/remi-gau/github/matlabdomain/CHANGES.rst
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir matlabdomain>
                  file_path: /home/remi-gau/github/matlabdomain/CHANGES.rst
                  path: /home/remi-gau/github/matlabdomain/CHANGES.rst
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/CITATION.bib
                  path: /home/remi-gau/github/matlabdomain/CITATION.bib
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir matlabdomain>
                  file_path: /home/remi-gau/github/matlabdomain/CITATION.bib
                  path: /home/remi-gau/github/matlabdomain/CITATION.bib
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/DEVELOPMENT.rst
                  path: /home/remi-gau/github/matlabdomain/DEVELOPMENT.rst
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir matlabdomain>
                  file_path: /home/remi-gau/github/matlabdomain/DEVELOPMENT.rst
                  path: /home/remi-gau/github/matlabdomain/DEVELOPMENT.rst
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/LICENSE
                  path: /home/remi-gau/github/matlabdomain/LICENSE
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir matlabdomain>
                  file_path: /home/remi-gau/github/matlabdomain/LICENSE
                  path: /home/remi-gau/github/matlabdomain/LICENSE
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/MANIFEST.in
                  path: /home/remi-gau/github/matlabdomain/MANIFEST.in
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir matlabdomain>
                  file_path: /home/remi-gau/github/matlabdomain/MANIFEST.in
                  path: /home/remi-gau/github/matlabdomain/MANIFEST.in
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/README.rst
                  path: /home/remi-gau/github/matlabdomain/README.rst
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir matlabdomain>
                  file_path: /home/remi-gau/github/matlabdomain/README.rst
                  path: /home/remi-gau/github/matlabdomain/README.rst
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/build
                  path: /home/remi-gau/github/matlabdomain/build
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/coverage.xml
                  path: /home/remi-gau/github/matlabdomain/coverage.xml
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir matlabdomain>
                  file_path: /home/remi-gau/github/matlabdomain/coverage.xml
                  path: /home/remi-gau/github/matlabdomain/coverage.xml
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/dev-requirements.txt
                  path: /home/remi-gau/github/matlabdomain/dev-requirements.txt
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir matlabdomain>
                  file_path: /home/remi-gau/github/matlabdomain/dev-requirements.txt
                  path: /home/remi-gau/github/matlabdomain/dev-requirements.txt
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/docs
                  path: /home/remi-gau/github/matlabdomain/docs
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/remi-gau/github/matlabdomain/docs
                  parent: <Dir matlabdomain>
              finish pytest_collect_directory --> <Dir docs> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/htmlcov
                  path: /home/remi-gau/github/matlabdomain/htmlcov
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/remi-gau/github/matlabdomain/htmlcov
                  parent: <Dir matlabdomain>
              finish pytest_collect_directory --> <Dir htmlcov> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/pyproject.toml
                  path: /home/remi-gau/github/matlabdomain/pyproject.toml
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir matlabdomain>
                  file_path: /home/remi-gau/github/matlabdomain/pyproject.toml
                  path: /home/remi-gau/github/matlabdomain/pyproject.toml
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/readthedocs.yml
                  path: /home/remi-gau/github/matlabdomain/readthedocs.yml
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir matlabdomain>
                  file_path: /home/remi-gau/github/matlabdomain/readthedocs.yml
                  path: /home/remi-gau/github/matlabdomain/readthedocs.yml
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/rtd-requirements.txt
                  path: /home/remi-gau/github/matlabdomain/rtd-requirements.txt
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir matlabdomain>
                  file_path: /home/remi-gau/github/matlabdomain/rtd-requirements.txt
                  path: /home/remi-gau/github/matlabdomain/rtd-requirements.txt
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/setup.py
                  path: /home/remi-gau/github/matlabdomain/setup.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir matlabdomain>
                  file_path: /home/remi-gau/github/matlabdomain/setup.py
                  path: /home/remi-gau/github/matlabdomain/setup.py
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/sphinxcontrib
                  path: /home/remi-gau/github/matlabdomain/sphinxcontrib
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/remi-gau/github/matlabdomain/sphinxcontrib
                  parent: <Dir matlabdomain>
              finish pytest_collect_directory --> <Package sphinxcontrib> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/sphinxcontrib_matlabdomain.egg-info
                  path: /home/remi-gau/github/matlabdomain/sphinxcontrib_matlabdomain.egg-info
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/remi-gau/github/matlabdomain/sphinxcontrib_matlabdomain.egg-info
                  parent: <Dir matlabdomain>
              finish pytest_collect_directory --> <Dir sphinxcontrib_matlabdomain.egg-info> [hook]
              pytest_collect_directory [hook]
                  path: /home/remi-gau/github/matlabdomain/tests
                  parent: <Dir matlabdomain>
              finish pytest_collect_directory --> <Dir tests> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/tox.ini
                  path: /home/remi-gau/github/matlabdomain/tox.ini
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir matlabdomain>
                  file_path: /home/remi-gau/github/matlabdomain/tox.ini
                  path: /home/remi-gau/github/matlabdomain/tox.ini
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x716ea99eebd0>
                  collection_path: /home/remi-gau/github/matlabdomain/trace
                  path: /home/remi-gau/github/matlabdomain/trace
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir matlabdomain>
                  file_path: /home/remi-gau/github/matlabdomain/trace
                  path: /home/remi-gau/github/matlabdomain/trace
              finish pytest_collect_file --> [] [hook]
            finish pytest_make_collect_report --> <CollectReport '.' lenresult=5 outcome='passed'> [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Dir tests> [collection]
      pytest_collectstart [hook]
          collector: <Dir tests>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir tests>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/__pycache__
            path: /home/remi-gau/github/matlabdomain/tests/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/helper.py
            path: /home/remi-gau/github/matlabdomain/tests/helper.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/helper.py
            path: /home/remi-gau/github/matlabdomain/tests/helper.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots
            path: /home/remi-gau/github/matlabdomain/tests/roots
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots
            parent: <Dir tests>
        finish pytest_collect_directory --> <Dir roots> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_autodoc.py
            path: /home/remi-gau/github/matlabdomain/tests/test_autodoc.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_autodoc.py
            path: /home/remi-gau/github/matlabdomain/tests/test_autodoc.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_autodoc.py
              path: /home/remi-gau/github/matlabdomain/tests/test_autodoc.py
          finish pytest_pycollect_makemodule --> <Module test_autodoc.py> [hook]
        finish pytest_collect_file --> [<Module test_autodoc.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_autodoc_properties.py
            path: /home/remi-gau/github/matlabdomain/tests/test_autodoc_properties.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_autodoc_properties.py
            path: /home/remi-gau/github/matlabdomain/tests/test_autodoc_properties.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_autodoc_properties.py
              path: /home/remi-gau/github/matlabdomain/tests/test_autodoc_properties.py
          finish pytest_pycollect_makemodule --> <Module test_autodoc_properties.py> [hook]
        finish pytest_collect_file --> [<Module test_autodoc_properties.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_autodoc_short_links.py
            path: /home/remi-gau/github/matlabdomain/tests/test_autodoc_short_links.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_autodoc_short_links.py
            path: /home/remi-gau/github/matlabdomain/tests/test_autodoc_short_links.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_autodoc_short_links.py
              path: /home/remi-gau/github/matlabdomain/tests/test_autodoc_short_links.py
          finish pytest_pycollect_makemodule --> <Module test_autodoc_short_links.py> [hook]
        finish pytest_collect_file --> [<Module test_autodoc_short_links.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_classfolder.py
            path: /home/remi-gau/github/matlabdomain/tests/test_classfolder.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_classfolder.py
            path: /home/remi-gau/github/matlabdomain/tests/test_classfolder.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_classfolder.py
              path: /home/remi-gau/github/matlabdomain/tests/test_classfolder.py
          finish pytest_pycollect_makemodule --> <Module test_classfolder.py> [hook]
        finish pytest_collect_file --> [<Module test_classfolder.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_classfolder_class_name.py
            path: /home/remi-gau/github/matlabdomain/tests/test_classfolder_class_name.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_classfolder_class_name.py
            path: /home/remi-gau/github/matlabdomain/tests/test_classfolder_class_name.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_classfolder_class_name.py
              path: /home/remi-gau/github/matlabdomain/tests/test_classfolder_class_name.py
          finish pytest_pycollect_makemodule --> <Module test_classfolder_class_name.py> [hook]
        finish pytest_collect_file --> [<Module test_classfolder_class_name.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data
            path: /home/remi-gau/github/matlabdomain/tests/test_data
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/test_data
            parent: <Dir tests>
        finish pytest_collect_directory --> <Dir test_data> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_docs
            path: /home/remi-gau/github/matlabdomain/tests/test_docs
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/test_docs
            parent: <Dir tests>
        finish pytest_collect_directory --> <Dir test_docs> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule
            path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule
            parent: <Dir tests>
        finish pytest_collect_directory --> <Dir test_docs_automodule> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_duplicated_link.py
            path: /home/remi-gau/github/matlabdomain/tests/test_duplicated_link.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_duplicated_link.py
            path: /home/remi-gau/github/matlabdomain/tests/test_duplicated_link.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_duplicated_link.py
              path: /home/remi-gau/github/matlabdomain/tests/test_duplicated_link.py
          finish pytest_pycollect_makemodule --> <Module test_duplicated_link.py> [hook]
        finish pytest_collect_file --> [<Module test_duplicated_link.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_lexer.py
            path: /home/remi-gau/github/matlabdomain/tests/test_lexer.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_lexer.py
            path: /home/remi-gau/github/matlabdomain/tests/test_lexer.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_lexer.py
              path: /home/remi-gau/github/matlabdomain/tests/test_lexer.py
          finish pytest_pycollect_makemodule --> <Module test_lexer.py> [hook]
        finish pytest_collect_file --> [<Module test_lexer.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_matlabify.py
            path: /home/remi-gau/github/matlabdomain/tests/test_matlabify.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_matlabify.py
            path: /home/remi-gau/github/matlabdomain/tests/test_matlabify.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_matlabify.py
              path: /home/remi-gau/github/matlabdomain/tests/test_matlabify.py
          finish pytest_pycollect_makemodule --> <Module test_matlabify.py> [hook]
        finish pytest_collect_file --> [<Module test_matlabify.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_module_class_names.py
            path: /home/remi-gau/github/matlabdomain/tests/test_module_class_names.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_module_class_names.py
            path: /home/remi-gau/github/matlabdomain/tests/test_module_class_names.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_module_class_names.py
              path: /home/remi-gau/github/matlabdomain/tests/test_module_class_names.py
          finish pytest_pycollect_makemodule --> <Module test_module_class_names.py> [hook]
        finish pytest_collect_file --> [<Module test_module_class_names.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_no_matlab_src_dir.py
            path: /home/remi-gau/github/matlabdomain/tests/test_no_matlab_src_dir.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_no_matlab_src_dir.py
            path: /home/remi-gau/github/matlabdomain/tests/test_no_matlab_src_dir.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_no_matlab_src_dir.py
              path: /home/remi-gau/github/matlabdomain/tests/test_no_matlab_src_dir.py
          finish pytest_pycollect_makemodule --> <Module test_no_matlab_src_dir.py> [hook]
        finish pytest_collect_file --> [<Module test_no_matlab_src_dir.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_numad.py
            path: /home/remi-gau/github/matlabdomain/tests/test_numad.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_numad.py
            path: /home/remi-gau/github/matlabdomain/tests/test_numad.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_numad.py
              path: /home/remi-gau/github/matlabdomain/tests/test_numad.py
          finish pytest_pycollect_makemodule --> <Module test_numad.py> [hook]
        finish pytest_collect_file --> [<Module test_numad.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_package_links.py
            path: /home/remi-gau/github/matlabdomain/tests/test_package_links.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_package_links.py
            path: /home/remi-gau/github/matlabdomain/tests/test_package_links.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_package_links.py
              path: /home/remi-gau/github/matlabdomain/tests/test_package_links.py
          finish pytest_pycollect_makemodule --> <Module test_package_links.py> [hook]
        finish pytest_collect_file --> [<Module test_package_links.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_package_prefix.py
            path: /home/remi-gau/github/matlabdomain/tests/test_package_prefix.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_package_prefix.py
            path: /home/remi-gau/github/matlabdomain/tests/test_package_prefix.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_package_prefix.py
              path: /home/remi-gau/github/matlabdomain/tests/test_package_prefix.py
          finish pytest_pycollect_makemodule --> <Module test_package_prefix.py> [hook]
        finish pytest_collect_file --> [<Module test_package_prefix.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_parse_mfile.py
            path: /home/remi-gau/github/matlabdomain/tests/test_parse_mfile.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_parse_mfile.py
            path: /home/remi-gau/github/matlabdomain/tests/test_parse_mfile.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_parse_mfile.py
              path: /home/remi-gau/github/matlabdomain/tests/test_parse_mfile.py
          finish pytest_pycollect_makemodule --> <Module test_parse_mfile.py> [hook]
        finish pytest_collect_file --> [<Module test_parse_mfile.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_parse_mlappfile.py
            path: /home/remi-gau/github/matlabdomain/tests/test_parse_mlappfile.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_parse_mlappfile.py
            path: /home/remi-gau/github/matlabdomain/tests/test_parse_mlappfile.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_parse_mlappfile.py
              path: /home/remi-gau/github/matlabdomain/tests/test_parse_mlappfile.py
          finish pytest_pycollect_makemodule --> <Module test_parse_mlappfile.py> [hook]
        finish pytest_collect_file --> [<Module test_parse_mlappfile.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_pymat.py
            path: /home/remi-gau/github/matlabdomain/tests/test_pymat.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_pymat.py
            path: /home/remi-gau/github/matlabdomain/tests/test_pymat.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_pymat.py
              path: /home/remi-gau/github/matlabdomain/tests/test_pymat.py
          finish pytest_pycollect_makemodule --> <Module test_pymat.py> [hook]
        finish pytest_collect_file --> [<Module test_pymat.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_pymat_common_root.py
            path: /home/remi-gau/github/matlabdomain/tests/test_pymat_common_root.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_pymat_common_root.py
            path: /home/remi-gau/github/matlabdomain/tests/test_pymat_common_root.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_pymat_common_root.py
              path: /home/remi-gau/github/matlabdomain/tests/test_pymat_common_root.py
          finish pytest_pycollect_makemodule --> <Module test_pymat_common_root.py> [hook]
        finish pytest_collect_file --> [<Module test_pymat_common_root.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_shortest_name.py
            path: /home/remi-gau/github/matlabdomain/tests/test_shortest_name.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_shortest_name.py
            path: /home/remi-gau/github/matlabdomain/tests/test_shortest_name.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_shortest_name.py
              path: /home/remi-gau/github/matlabdomain/tests/test_shortest_name.py
          finish pytest_pycollect_makemodule --> <Module test_shortest_name.py> [hook]
        finish pytest_collect_file --> [<Module test_shortest_name.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_skipping_module_members.py
            path: /home/remi-gau/github/matlabdomain/tests/test_skipping_module_members.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_skipping_module_members.py
            path: /home/remi-gau/github/matlabdomain/tests/test_skipping_module_members.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /home/remi-gau/github/matlabdomain/tests/test_skipping_module_members.py
              path: /home/remi-gau/github/matlabdomain/tests/test_skipping_module_members.py
          finish pytest_pycollect_makemodule --> <Module test_skipping_module_members.py> [hook]
        finish pytest_collect_file --> [<Module test_skipping_module_members.py>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests' lenresult=23 outcome='passed'> [hook]
    genitems <Dir roots> [collection]
      pytest_collectstart [hook]
          collector: <Dir roots>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir roots>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc
            parent: <Dir roots>
        finish pytest_collect_directory --> <Dir test_autodoc> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder
            parent: <Dir roots>
        finish pytest_collect_directory --> <Dir test_classfolder> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link
            parent: <Dir roots>
        finish pytest_collect_directory --> <Dir test_duplicate_link> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names
            parent: <Dir roots>
        finish pytest_collect_directory --> <Dir test_module_class_names> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir
            parent: <Dir roots>
        finish pytest_collect_directory --> <Dir test_no_matlab_src_dir> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad
            parent: <Dir roots>
        finish pytest_collect_directory --> <Dir test_numad> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links
            parent: <Dir roots>
        finish pytest_collect_directory --> <Dir test_package_links> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix
            parent: <Dir roots>
        finish pytest_collect_directory --> <Dir test_package_prefix> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat
            parent: <Dir roots>
        finish pytest_collect_directory --> <Dir test_pymat> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root
            parent: <Dir roots>
        finish pytest_collect_directory --> <Dir test_pymat_common_root> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members
            parent: <Dir roots>
        finish pytest_collect_directory --> <Dir test_skipping_module_members> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots' lenresult=11 outcome='passed'> [hook]
    genitems <Dir test_autodoc> [collection]
      pytest_collectstart [hook]
          collector: <Dir test_autodoc>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir test_autodoc>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/BaseClass.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/BaseClass.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_autodoc>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/BaseClass.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/BaseClass.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/Makefile
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_autodoc>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/Makefile
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build
            parent: <Dir test_autodoc>
        finish pytest_collect_directory --> <Dir _build> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/baseFunction.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/baseFunction.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_autodoc>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/baseFunction.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/baseFunction.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/conf.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_autodoc>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/conf.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_autodoc>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_classfolder.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_classfolder.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_autodoc>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_classfolder.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_classfolder.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_package.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_package.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_autodoc>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_package.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_package.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_root.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_root.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_autodoc>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_root.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_root.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_submodule.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_submodule.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_autodoc>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_submodule.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_submodule.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_target.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_target.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_autodoc>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_target.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/index_target.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/make.bat
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_autodoc>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/make.bat
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/readme.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/readme.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_autodoc>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/readme.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/readme.txt
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target
            parent: <Dir test_autodoc>
        finish pytest_collect_directory --> <Dir target> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_autodoc' lenresult=2 outcome='passed'> [hook]
    genitems <Dir _build> [collection]
      pytest_collectstart [hook]
          collector: <Dir _build>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _build>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir doctrees> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir html> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_autodoc/_build' lenresult=2 outcome='passed'> [hook]
    genitems <Dir doctrees> [collection]
      pytest_collectstart [hook]
          collector: <Dir doctrees>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir doctrees>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/environment.pickle
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/environment.pickle
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index.doctree
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_classfolder.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_classfolder.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_classfolder.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_classfolder.doctree
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_package.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_package.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_package.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_package.doctree
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_root.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_root.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_root.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_root.doctree
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_submodule.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_submodule.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_submodule.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_submodule.doctree
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_target.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_target.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_target.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/doctrees/index_target.doctree
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_autodoc/_build/doctrees' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_autodoc/_build/doctrees' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir html> [collection]
      pytest_collectstart [hook]
          collector: <Dir html>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir html>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/.buildinfo
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/.buildinfo
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _sources> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _static> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/genindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/genindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_classfolder.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_classfolder.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_classfolder.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_classfolder.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_package.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_package.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_package.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_package.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_root.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_root.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_root.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_root.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_submodule.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_submodule.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_submodule.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_submodule.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_target.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_target.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_target.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/index_target.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/mat-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/mat-modindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/mat-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/mat-modindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/objects.inv
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/objects.inv
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/search.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/search.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/searchindex.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/searchindex.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_autodoc/_build/html' lenresult=2 outcome='passed'> [hook]
    genitems <Dir _sources> [collection]
      pytest_collectstart [hook]
          collector: <Dir _sources>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _sources>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index.rst.txt
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_classfolder.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_classfolder.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_classfolder.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_classfolder.rst.txt
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_package.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_package.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_package.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_package.rst.txt
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_root.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_root.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_root.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_root.rst.txt
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_submodule.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_submodule.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_submodule.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_submodule.rst.txt
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_target.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_target.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_target.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_sources/index_target.rst.txt
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_autodoc/_build/html/_sources' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_autodoc/_build/html/_sources' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir _static> [collection]
      pytest_collectstart [hook]
          collector: <Dir _static>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _static>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/_sphinx_javascript_frameworks_compat.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/_sphinx_javascript_frameworks_compat.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/_sphinx_javascript_frameworks_compat.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/_sphinx_javascript_frameworks_compat.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/alabaster.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/alabaster.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/basic.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/basic.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/custom.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/custom.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/doctools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/doctools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/documentation_options.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/documentation_options.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/file.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/file.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/jquery-3.5.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/jquery-3.5.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/jquery-3.6.0.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/jquery-3.6.0.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/jquery-3.6.0.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/jquery-3.6.0.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/jquery.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/jquery.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/language_data.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/language_data.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/minus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/minus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/plus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/plus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/pygments.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/pygments.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/searchtools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/searchtools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/sphinx_highlight.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/sphinx_highlight.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/underscore-1.13.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/underscore-1.13.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/underscore.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/_build/html/_static/underscore.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_autodoc/_build/html/_static' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_autodoc/_build/html/_static' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_autodoc/_build/html' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_autodoc/_build' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir target> [collection]
      pytest_collectstart [hook]
          collector: <Dir target>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir target>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/+package
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/+package
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/+package
            parent: <Dir target>
        finish pytest_collect_directory --> <Dir +package> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/@ClassFolder
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/@ClassFolder
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/@ClassFolder
            parent: <Dir target>
        finish pytest_collect_directory --> <Dir @ClassFolder> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/ClassExample.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/ClassExample.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir target>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/ClassExample.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/ClassExample.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/readme.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/readme.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir target>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/readme.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/readme.txt
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/submodule
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/submodule
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/submodule
            parent: <Dir target>
        finish pytest_collect_directory --> <Dir submodule> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_autodoc/target' lenresult=3 outcome='passed'> [hook]
    genitems <Dir +package> [collection]
      pytest_collectstart [hook]
          collector: <Dir +package>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir +package>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/+package/ClassBar.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/+package/ClassBar.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir +package>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/+package/ClassBar.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/+package/ClassBar.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/+package/funcFoo.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/+package/funcFoo.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir +package>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/+package/funcFoo.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/+package/funcFoo.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_autodoc/target/+package' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_autodoc/target/+package' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir @ClassFolder> [collection]
      pytest_collectstart [hook]
          collector: <Dir @ClassFolder>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir @ClassFolder>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/@ClassFolder/ClassFolder.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/@ClassFolder/ClassFolder.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir @ClassFolder>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/@ClassFolder/ClassFolder.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/@ClassFolder/ClassFolder.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/@ClassFolder/a_static_func.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/@ClassFolder/a_static_func.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir @ClassFolder>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/@ClassFolder/a_static_func.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/@ClassFolder/a_static_func.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/@ClassFolder/classMethod.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/@ClassFolder/classMethod.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir @ClassFolder>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/@ClassFolder/classMethod.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/@ClassFolder/classMethod.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_autodoc/target/@ClassFolder' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_autodoc/target/@ClassFolder' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir submodule> [collection]
      pytest_collectstart [hook]
          collector: <Dir submodule>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir submodule>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/submodule/ClassMeow.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/submodule/ClassMeow.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/submodule/ClassMeow.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/submodule/ClassMeow.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/submodule/funcMeow.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/submodule/funcMeow.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/submodule/funcMeow.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_autodoc/target/submodule/funcMeow.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_autodoc/target/submodule' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_autodoc/target/submodule' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_autodoc/target' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_autodoc' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir test_classfolder> [collection]
      pytest_collectstart [hook]
          collector: <Dir test_classfolder>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir test_classfolder>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First
            parent: <Dir test_classfolder>
        finish pytest_collect_directory --> <Dir @First> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/Makefile
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_classfolder>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/Makefile
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build
            parent: <Dir test_classfolder>
        finish pytest_collect_directory --> <Dir _build> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/conf.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_classfolder>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/conf.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/index.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_classfolder>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/index.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/index_first.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/index_first.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_classfolder>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/index_first.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/index_first.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/index_second.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/index_second.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_classfolder>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/index_second.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/index_second.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/index_third.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/index_third.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_classfolder>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/index_third.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/index_third.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/make.bat
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_classfolder>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/make.bat
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/readme.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/readme.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_classfolder>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/readme.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/readme.txt
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src
            parent: <Dir test_classfolder>
        finish pytest_collect_directory --> <Dir src> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_classfolder' lenresult=3 outcome='passed'> [hook]
    genitems <Dir @First> [collection]
      pytest_collectstart [hook]
          collector: <Dir @First>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir @First>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/First.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/First.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir @First>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/First.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/First.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/dlls
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/dlls
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/dlls
            parent: <Dir @First>
        finish pytest_collect_directory --> <Dir dlls> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/method_in_folder.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/method_in_folder.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir @First>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/method_in_folder.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/method_in_folder.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/private
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/private
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/private
            parent: <Dir @First>
        finish pytest_collect_directory --> <Dir private> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_classfolder/@First' lenresult=2 outcome='passed'> [hook]
    genitems <Dir dlls> [collection]
      pytest_collectstart [hook]
          collector: <Dir dlls>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir dlls>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/dlls/mexfunction.dll
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/dlls/mexfunction.dll
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir dlls>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/dlls/mexfunction.dll
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/dlls/mexfunction.dll
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/dlls/mexfunction.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/dlls/mexfunction.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir dlls>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/dlls/mexfunction.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/dlls/mexfunction.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_classfolder/@First/dlls' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_classfolder/@First/dlls' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir private> [collection]
      pytest_collectstart [hook]
          collector: <Dir private>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir private>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/private/method_in_private.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/private/method_in_private.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir private>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/private/method_in_private.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/@First/private/method_in_private.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_classfolder/@First/private' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_classfolder/@First/private' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_classfolder/@First' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir _build> [collection]
      pytest_collectstart [hook]
          collector: <Dir _build>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _build>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir doctrees> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir html> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_classfolder/_build' lenresult=2 outcome='passed'> [hook]
    genitems <Dir doctrees> [collection]
      pytest_collectstart [hook]
          collector: <Dir doctrees>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir doctrees>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/environment.pickle
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/environment.pickle
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/index.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/index.doctree
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/index_first.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/index_first.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/index_first.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/index_first.doctree
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/index_second.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/index_second.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/index_second.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/index_second.doctree
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/index_third.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/index_third.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/index_third.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/doctrees/index_third.doctree
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_classfolder/_build/doctrees' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_classfolder/_build/doctrees' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir html> [collection]
      pytest_collectstart [hook]
          collector: <Dir html>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir html>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/.buildinfo
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/.buildinfo
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _sources> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _static> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/genindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/genindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/index.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/index.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/index_first.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/index_first.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/index_first.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/index_first.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/index_second.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/index_second.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/index_second.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/index_second.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/index_third.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/index_third.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/index_third.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/index_third.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/objects.inv
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/objects.inv
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/search.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/search.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/searchindex.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/searchindex.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_classfolder/_build/html' lenresult=2 outcome='passed'> [hook]
    genitems <Dir _sources> [collection]
      pytest_collectstart [hook]
          collector: <Dir _sources>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _sources>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources/index.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources/index.rst.txt
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources/index_first.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources/index_first.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources/index_first.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources/index_first.rst.txt
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources/index_second.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources/index_second.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources/index_second.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources/index_second.rst.txt
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources/index_third.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources/index_third.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources/index_third.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_sources/index_third.rst.txt
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_classfolder/_build/html/_sources' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_classfolder/_build/html/_sources' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir _static> [collection]
      pytest_collectstart [hook]
          collector: <Dir _static>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _static>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/alabaster.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/alabaster.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/basic.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/basic.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/custom.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/custom.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/doctools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/doctools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/documentation_options.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/documentation_options.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/file.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/file.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/jquery-3.5.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/jquery-3.5.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/jquery.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/jquery.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/language_data.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/language_data.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/minus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/minus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/plus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/plus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/pygments.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/pygments.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/searchtools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/searchtools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/sphinx_highlight.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/sphinx_highlight.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/underscore-1.13.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/underscore-1.13.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/underscore.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/_build/html/_static/underscore.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_classfolder/_build/html/_static' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_classfolder/_build/html/_static' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_classfolder/_build/html' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_classfolder/_build' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir src> [collection]
      pytest_collectstart [hook]
          collector: <Dir src>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir src>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/+pkg
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/+pkg
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/+pkg
            parent: <Dir src>
        finish pytest_collect_directory --> <Dir +pkg> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/@Second
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/@Second
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/@Second
            parent: <Dir src>
        finish pytest_collect_directory --> <Dir @Second> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_classfolder/src' lenresult=2 outcome='passed'> [hook]
    genitems <Dir +pkg> [collection]
      pytest_collectstart [hook]
          collector: <Dir +pkg>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir +pkg>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/+pkg/@Third
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/+pkg/@Third
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/+pkg/@Third
            parent: <Dir +pkg>
        finish pytest_collect_directory --> <Dir @Third> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_classfolder/src/+pkg' lenresult=1 outcome='passed'> [hook]
    genitems <Dir @Third> [collection]
      pytest_collectstart [hook]
          collector: <Dir @Third>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir @Third>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/+pkg/@Third/Third.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/+pkg/@Third/Third.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir @Third>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/+pkg/@Third/Third.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/+pkg/@Third/Third.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/+pkg/@Third/method_in_folder.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/+pkg/@Third/method_in_folder.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir @Third>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/+pkg/@Third/method_in_folder.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/+pkg/@Third/method_in_folder.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_classfolder/src/+pkg/@Third' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_classfolder/src/+pkg/@Third' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_classfolder/src/+pkg' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir @Second> [collection]
      pytest_collectstart [hook]
          collector: <Dir @Second>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir @Second>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/@Second/Second.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/@Second/Second.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir @Second>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/@Second/Second.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/@Second/Second.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/@Second/method_in_folder.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/@Second/method_in_folder.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir @Second>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/@Second/method_in_folder.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_classfolder/src/@Second/method_in_folder.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_classfolder/src/@Second' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_classfolder/src/@Second' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_classfolder/src' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_classfolder' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir test_duplicate_link> [collection]
      pytest_collectstart [hook]
          collector: <Dir test_duplicate_link>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir test_duplicate_link>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/.gitignore
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/.gitignore
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_duplicate_link>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/.gitignore
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/.gitignore
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/Makefile
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_duplicate_link>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/Makefile
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build
            parent: <Dir test_duplicate_link>
        finish pytest_collect_directory --> <Dir _build> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src
            parent: <Dir test_duplicate_link>
        finish pytest_collect_directory --> <Dir _src> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/base.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/base.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_duplicate_link>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/base.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/base.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/conf.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_duplicate_link>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/conf.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/groups.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/groups.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_duplicate_link>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/groups.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/groups.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/index.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_duplicate_link>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/index.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/make.bat
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_duplicate_link>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/make.bat
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_duplicate_link' lenresult=2 outcome='passed'> [hook]
    genitems <Dir _build> [collection]
      pytest_collectstart [hook]
          collector: <Dir _build>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _build>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir doctrees> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir html> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_duplicate_link/_build' lenresult=2 outcome='passed'> [hook]
    genitems <Dir doctrees> [collection]
      pytest_collectstart [hook]
          collector: <Dir doctrees>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir doctrees>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees/base.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees/base.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees/base.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees/base.doctree
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees/environment.pickle
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees/environment.pickle
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees/groups.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees/groups.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees/groups.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees/groups.doctree
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees/index.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/doctrees/index.doctree
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_duplicate_link/_build/doctrees' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_duplicate_link/_build/doctrees' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir html> [collection]
      pytest_collectstart [hook]
          collector: <Dir html>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir html>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/.buildinfo
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/.buildinfo
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_sources
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_sources
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_sources
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _sources> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _static> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/base.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/base.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/base.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/base.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/genindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/genindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/groups.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/groups.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/groups.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/groups.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/index.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/index.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/mat-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/mat-modindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/mat-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/mat-modindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/objects.inv
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/objects.inv
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/search.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/search.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/searchindex.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/searchindex.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_duplicate_link/_build/html' lenresult=2 outcome='passed'> [hook]
    genitems <Dir _sources> [collection]
      pytest_collectstart [hook]
          collector: <Dir _sources>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _sources>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_sources/base.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_sources/base.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_sources/base.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_sources/base.rst.txt
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_sources/groups.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_sources/groups.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_sources/groups.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_sources/groups.rst.txt
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_sources/index.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_sources/index.rst.txt
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_duplicate_link/_build/html/_sources' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_duplicate_link/_build/html/_sources' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir _static> [collection]
      pytest_collectstart [hook]
          collector: <Dir _static>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _static>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/alabaster.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/alabaster.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/basic.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/basic.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/custom.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/custom.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/doctools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/doctools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/documentation_options.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/documentation_options.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/file.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/file.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/jquery-3.5.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/jquery-3.5.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/jquery.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/jquery.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/language_data.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/language_data.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/minus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/minus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/plus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/plus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/pygments.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/pygments.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/searchtools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/searchtools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/sphinx_highlight.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/sphinx_highlight.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/underscore-1.13.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/underscore-1.13.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/underscore.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_build/html/_static/underscore.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_duplicate_link/_build/html/_static' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_duplicate_link/_build/html/_static' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_duplicate_link/_build/html' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_duplicate_link/_build' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir _src> [collection]
      pytest_collectstart [hook]
          collector: <Dir _src>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _src>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab
            parent: <Dir _src>
        finish pytest_collect_directory --> <Dir +replab> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_duplicate_link/_src' lenresult=1 outcome='passed'> [hook]
    genitems <Dir +replab> [collection]
      pytest_collectstart [hook]
          collector: <Dir +replab>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir +replab>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/Domain.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/Domain.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir +replab>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/Domain.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/Domain.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/FiniteGroup.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/FiniteGroup.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir +replab>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/FiniteGroup.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/FiniteGroup.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/Group.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/Group.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir +replab>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/Group.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/Group.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/Monoid.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/Monoid.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir +replab>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/Monoid.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/Monoid.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/NiceFiniteGroup.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/NiceFiniteGroup.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir +replab>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/NiceFiniteGroup.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_duplicate_link/_src/+replab/NiceFiniteGroup.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_duplicate_link/_src/+replab' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_duplicate_link/_src/+replab' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_duplicate_link/_src' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_duplicate_link' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir test_module_class_names> [collection]
      pytest_collectstart [hook]
          collector: <Dir test_module_class_names>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir test_module_class_names>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/Makefile
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_module_class_names>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/Makefile
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/Myclass
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/Myclass
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/Myclass
            parent: <Dir test_module_class_names>
        finish pytest_collect_directory --> <Dir Myclass> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/YourClass.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/YourClass.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_module_class_names>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/YourClass.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/YourClass.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build
            parent: <Dir test_module_class_names>
        finish pytest_collect_directory --> <Dir _build> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/conf.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_module_class_names>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/conf.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/index.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_module_class_names>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/index.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/make.bat
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_module_class_names>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/make.bat
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/readme.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/readme.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_module_class_names>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/readme.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/readme.txt
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_module_class_names' lenresult=2 outcome='passed'> [hook]
    genitems <Dir Myclass> [collection]
      pytest_collectstart [hook]
          collector: <Dir Myclass>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir Myclass>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/Myclass/MyOtherClass
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/Myclass/MyOtherClass
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/Myclass/MyOtherClass
            parent: <Dir Myclass>
        finish pytest_collect_directory --> <Dir MyOtherClass> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/Myclass/Myclass.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/Myclass/Myclass.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir Myclass>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/Myclass/Myclass.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/Myclass/Myclass.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_module_class_names/Myclass' lenresult=1 outcome='passed'> [hook]
    genitems <Dir MyOtherClass> [collection]
      pytest_collectstart [hook]
          collector: <Dir MyOtherClass>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir MyOtherClass>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/Myclass/MyOtherClass/MyOtherClass.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/Myclass/MyOtherClass/MyOtherClass.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir MyOtherClass>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/Myclass/MyOtherClass/MyOtherClass.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/Myclass/MyOtherClass/MyOtherClass.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_module_class_names/Myclass/MyOtherClass' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_module_class_names/Myclass/MyOtherClass' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_module_class_names/Myclass' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir _build> [collection]
      pytest_collectstart [hook]
          collector: <Dir _build>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _build>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/doctrees
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/doctrees
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/doctrees
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir doctrees> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir html> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_module_class_names/_build' lenresult=2 outcome='passed'> [hook]
    genitems <Dir doctrees> [collection]
      pytest_collectstart [hook]
          collector: <Dir doctrees>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir doctrees>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/doctrees/environment.pickle
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/doctrees/environment.pickle
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/doctrees/index.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/doctrees/index.doctree
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_module_class_names/_build/doctrees' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_module_class_names/_build/doctrees' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir html> [collection]
      pytest_collectstart [hook]
          collector: <Dir html>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir html>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/.buildinfo
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/.buildinfo
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_sources
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_sources
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_sources
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _sources> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _static> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/genindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/genindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/index.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/index.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/mat-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/mat-modindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/mat-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/mat-modindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/objects.inv
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/objects.inv
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/search.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/search.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/searchindex.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/searchindex.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_module_class_names/_build/html' lenresult=2 outcome='passed'> [hook]
    genitems <Dir _sources> [collection]
      pytest_collectstart [hook]
          collector: <Dir _sources>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _sources>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_sources/index.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_sources/index.rst.txt
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_module_class_names/_build/html/_sources' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_module_class_names/_build/html/_sources' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir _static> [collection]
      pytest_collectstart [hook]
          collector: <Dir _static>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _static>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/basic.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/basic.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/classic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/classic.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/classic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/classic.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/default.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/default.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/default.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/default.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/doctools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/doctools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/documentation_options.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/documentation_options.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/file.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/file.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/jquery-3.5.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/jquery-3.5.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/jquery.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/jquery.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/language_data.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/language_data.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/minus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/minus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/plus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/plus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/pygments.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/pygments.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/searchtools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/searchtools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/sidebar.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/sidebar.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/sidebar.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/sidebar.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/sphinx_highlight.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/sphinx_highlight.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/underscore-1.13.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/underscore-1.13.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/underscore.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_module_class_names/_build/html/_static/underscore.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_module_class_names/_build/html/_static' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_module_class_names/_build/html/_static' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_module_class_names/_build/html' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_module_class_names/_build' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_module_class_names' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir test_no_matlab_src_dir> [collection]
      pytest_collectstart [hook]
          collector: <Dir test_no_matlab_src_dir>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir test_no_matlab_src_dir>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/Makefile
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_no_matlab_src_dir>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/Makefile
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build
            parent: <Dir test_no_matlab_src_dir>
        finish pytest_collect_directory --> <Dir _build> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/conf.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_no_matlab_src_dir>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/conf.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/index.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_no_matlab_src_dir>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/index.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/make.bat
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_no_matlab_src_dir>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/make.bat
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/readme.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/readme.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_no_matlab_src_dir>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/readme.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/readme.txt
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_no_matlab_src_dir' lenresult=1 outcome='passed'> [hook]
    genitems <Dir _build> [collection]
      pytest_collectstart [hook]
          collector: <Dir _build>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _build>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/doctrees
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/doctrees
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/doctrees
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir doctrees> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir html> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_no_matlab_src_dir/_build' lenresult=2 outcome='passed'> [hook]
    genitems <Dir doctrees> [collection]
      pytest_collectstart [hook]
          collector: <Dir doctrees>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir doctrees>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/doctrees/environment.pickle
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/doctrees/environment.pickle
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/doctrees/index.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/doctrees/index.doctree
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_no_matlab_src_dir/_build/doctrees' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_no_matlab_src_dir/_build/doctrees' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir html> [collection]
      pytest_collectstart [hook]
          collector: <Dir html>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir html>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/.buildinfo
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/.buildinfo
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_sources
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_sources
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_sources
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _sources> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _static> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/genindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/genindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/index.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/index.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/objects.inv
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/objects.inv
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/search.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/search.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/searchindex.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/searchindex.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_no_matlab_src_dir/_build/html' lenresult=2 outcome='passed'> [hook]
    genitems <Dir _sources> [collection]
      pytest_collectstart [hook]
          collector: <Dir _sources>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _sources>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_sources/index.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_sources/index.rst.txt
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_no_matlab_src_dir/_build/html/_sources' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_no_matlab_src_dir/_build/html/_sources' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir _static> [collection]
      pytest_collectstart [hook]
          collector: <Dir _static>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _static>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/alabaster.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/alabaster.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/basic.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/basic.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/custom.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/custom.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/doctools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/doctools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/documentation_options.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/documentation_options.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/file.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/file.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/jquery-3.5.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/jquery-3.5.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/jquery.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/jquery.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/language_data.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/language_data.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/minus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/minus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/plus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/plus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/pygments.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/pygments.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/searchtools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/searchtools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/sphinx_highlight.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/sphinx_highlight.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/underscore-1.13.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/underscore-1.13.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/underscore.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_no_matlab_src_dir/_build/html/_static/underscore.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_no_matlab_src_dir/_build/html/_static' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_no_matlab_src_dir/_build/html/_static' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_no_matlab_src_dir/_build/html' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_no_matlab_src_dir/_build' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_no_matlab_src_dir' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir test_numad> [collection]
      pytest_collectstart [hook]
          collector: <Dir test_numad>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir test_numad>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/Makefile
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_numad>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/Makefile
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build
            parent: <Dir test_numad>
        finish pytest_collect_directory --> <Dir _build> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/conf.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_numad>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/conf.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/index.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_numad>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/index.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/index_first.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/index_first.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_numad>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/index_first.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/index_first.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/index_second.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/index_second.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_numad>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/index_second.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/index_second.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/make.bat
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_numad>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/make.bat
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/readme.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/readme.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_numad>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/readme.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/readme.txt
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/target
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/target
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/target
            parent: <Dir test_numad>
        finish pytest_collect_directory --> <Dir target> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_numad' lenresult=2 outcome='passed'> [hook]
    genitems <Dir _build> [collection]
      pytest_collectstart [hook]
          collector: <Dir _build>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _build>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir doctrees> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir html> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_numad/_build' lenresult=2 outcome='passed'> [hook]
    genitems <Dir doctrees> [collection]
      pytest_collectstart [hook]
          collector: <Dir doctrees>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir doctrees>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees/environment.pickle
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees/environment.pickle
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees/index.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees/index.doctree
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees/index_first.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees/index_first.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees/index_first.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees/index_first.doctree
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees/index_second.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees/index_second.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees/index_second.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/doctrees/index_second.doctree
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_numad/_build/doctrees' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_numad/_build/doctrees' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir html> [collection]
      pytest_collectstart [hook]
          collector: <Dir html>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir html>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/.buildinfo
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/.buildinfo
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_sources
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_sources
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_sources
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _sources> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _static> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/genindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/genindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/index.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/index.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/index_first.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/index_first.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/index_first.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/index_first.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/index_second.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/index_second.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/index_second.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/index_second.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/mat-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/mat-modindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/mat-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/mat-modindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/objects.inv
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/objects.inv
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/search.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/search.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/searchindex.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/searchindex.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_numad/_build/html' lenresult=2 outcome='passed'> [hook]
    genitems <Dir _sources> [collection]
      pytest_collectstart [hook]
          collector: <Dir _sources>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _sources>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_sources/index.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_sources/index.rst.txt
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_sources/index_first.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_sources/index_first.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_sources/index_first.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_sources/index_first.rst.txt
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_sources/index_second.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_sources/index_second.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_sources/index_second.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_sources/index_second.rst.txt
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_numad/_build/html/_sources' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_numad/_build/html/_sources' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir _static> [collection]
      pytest_collectstart [hook]
          collector: <Dir _static>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _static>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/alabaster.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/alabaster.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/basic.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/basic.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/custom.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/custom.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/doctools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/doctools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/documentation_options.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/documentation_options.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/file.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/file.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/jquery-3.5.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/jquery-3.5.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/jquery.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/jquery.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/language_data.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/language_data.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/minus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/minus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/plus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/plus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/pygments.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/pygments.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/searchtools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/searchtools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/sphinx_highlight.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/sphinx_highlight.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/underscore-1.13.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/underscore-1.13.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/underscore.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/_build/html/_static/underscore.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_numad/_build/html/_static' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_numad/_build/html/_static' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_numad/_build/html' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_numad/_build' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir target> [collection]
      pytest_collectstart [hook]
          collector: <Dir target>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir target>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/target/FirstClass.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/target/FirstClass.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir target>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/target/FirstClass.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/target/FirstClass.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/target/SecondClass.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/target/SecondClass.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir target>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/target/SecondClass.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/target/SecondClass.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/target/readme.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/target/readme.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir target>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/target/readme.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_numad/target/readme.txt
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_numad/target' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_numad/target' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_numad' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir test_package_links> [collection]
      pytest_collectstart [hook]
          collector: <Dir test_package_links>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir test_package_links>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/+replab
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/+replab
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/+replab
            parent: <Dir test_package_links>
        finish pytest_collect_directory --> <Dir +replab> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/Makefile
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_package_links>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/Makefile
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build
            parent: <Dir test_package_links>
        finish pytest_collect_directory --> <Dir _build> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/conf.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_package_links>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/conf.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/contents.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/contents.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_package_links>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/contents.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/contents.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/make.bat
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_package_links>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/make.bat
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_package_links' lenresult=2 outcome='passed'> [hook]
    genitems <Dir +replab> [collection]
      pytest_collectstart [hook]
          collector: <Dir +replab>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir +replab>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/+replab/Action.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/+replab/Action.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir +replab>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/+replab/Action.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/+replab/Action.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/+replab/Str.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/+replab/Str.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir +replab>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/+replab/Str.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/+replab/Str.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_package_links/+replab' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_package_links/+replab' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir _build> [collection]
      pytest_collectstart [hook]
          collector: <Dir _build>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _build>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/doctrees
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/doctrees
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/doctrees
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir doctrees> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir html> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_package_links/_build' lenresult=2 outcome='passed'> [hook]
    genitems <Dir doctrees> [collection]
      pytest_collectstart [hook]
          collector: <Dir doctrees>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir doctrees>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/doctrees/contents.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/doctrees/contents.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/doctrees/contents.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/doctrees/contents.doctree
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/doctrees/environment.pickle
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/doctrees/environment.pickle
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_package_links/_build/doctrees' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_package_links/_build/doctrees' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir html> [collection]
      pytest_collectstart [hook]
          collector: <Dir html>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir html>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/.buildinfo
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/.buildinfo
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_sources
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_sources
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_sources
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _sources> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _static> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/contents.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/contents.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/contents.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/contents.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/genindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/genindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/mat-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/mat-modindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/mat-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/mat-modindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/objects.inv
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/objects.inv
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/search.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/search.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/searchindex.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/searchindex.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_package_links/_build/html' lenresult=2 outcome='passed'> [hook]
    genitems <Dir _sources> [collection]
      pytest_collectstart [hook]
          collector: <Dir _sources>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _sources>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_sources/contents.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_sources/contents.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_sources/contents.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_sources/contents.rst.txt
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_package_links/_build/html/_sources' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_package_links/_build/html/_sources' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir _static> [collection]
      pytest_collectstart [hook]
          collector: <Dir _static>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _static>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/alabaster.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/alabaster.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/basic.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/basic.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/custom.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/custom.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/doctools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/doctools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/documentation_options.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/documentation_options.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/file.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/file.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/jquery-3.5.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/jquery-3.5.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/jquery.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/jquery.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/language_data.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/language_data.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/minus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/minus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/plus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/plus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/pygments.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/pygments.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/searchtools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/searchtools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/sphinx_highlight.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/sphinx_highlight.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/underscore-1.13.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/underscore-1.13.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/underscore.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_links/_build/html/_static/underscore.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_package_links/_build/html/_static' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_package_links/_build/html/_static' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_package_links/_build/html' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_package_links/_build' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_package_links' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir test_package_prefix> [collection]
      pytest_collectstart [hook]
          collector: <Dir test_package_prefix>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir test_package_prefix>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/+package
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/+package
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/+package
            parent: <Dir test_package_prefix>
        finish pytest_collect_directory --> <Dir +package> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/Makefile
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_package_prefix>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/Makefile
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build
            parent: <Dir test_package_prefix>
        finish pytest_collect_directory --> <Dir _build> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/conf.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_package_prefix>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/conf.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/index.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_package_prefix>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/index.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/make.bat
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_package_prefix>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/make.bat
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_package_prefix' lenresult=2 outcome='passed'> [hook]
    genitems <Dir +package> [collection]
      pytest_collectstart [hook]
          collector: <Dir +package>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir +package>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/+package/+subpkg
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/+package/+subpkg
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/+package/+subpkg
            parent: <Dir +package>
        finish pytest_collect_directory --> <Dir +subpkg> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/+package/func.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/+package/func.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir +package>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/+package/func.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/+package/func.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_package_prefix/+package' lenresult=1 outcome='passed'> [hook]
    genitems <Dir +subpkg> [collection]
      pytest_collectstart [hook]
          collector: <Dir +subpkg>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir +subpkg>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/+package/+subpkg/func.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/+package/+subpkg/func.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir +subpkg>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/+package/+subpkg/func.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/+package/+subpkg/func.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_package_prefix/+package/+subpkg' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_package_prefix/+package/+subpkg' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_package_prefix/+package' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir _build> [collection]
      pytest_collectstart [hook]
          collector: <Dir _build>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _build>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/doctrees
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/doctrees
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/doctrees
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir doctrees> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir html> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_package_prefix/_build' lenresult=2 outcome='passed'> [hook]
    genitems <Dir doctrees> [collection]
      pytest_collectstart [hook]
          collector: <Dir doctrees>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir doctrees>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/doctrees/environment.pickle
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/doctrees/environment.pickle
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/doctrees/index.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/doctrees/index.doctree
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_package_prefix/_build/doctrees' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_package_prefix/_build/doctrees' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir html> [collection]
      pytest_collectstart [hook]
          collector: <Dir html>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir html>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/.buildinfo
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/.buildinfo
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_sources
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_sources
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_sources
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _sources> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _static> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/genindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/genindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/index.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/index.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/mat-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/mat-modindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/mat-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/mat-modindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/objects.inv
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/objects.inv
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/search.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/search.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/searchindex.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/searchindex.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_package_prefix/_build/html' lenresult=2 outcome='passed'> [hook]
    genitems <Dir _sources> [collection]
      pytest_collectstart [hook]
          collector: <Dir _sources>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _sources>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_sources/index.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_sources/index.rst.txt
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_package_prefix/_build/html/_sources' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_package_prefix/_build/html/_sources' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir _static> [collection]
      pytest_collectstart [hook]
          collector: <Dir _static>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _static>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/alabaster.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/alabaster.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/basic.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/basic.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/custom.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/custom.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/doctools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/doctools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/documentation_options.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/documentation_options.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/file.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/file.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/jquery-3.5.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/jquery-3.5.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/jquery.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/jquery.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/language_data.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/language_data.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/minus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/minus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/plus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/plus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/pygments.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/pygments.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/searchtools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/searchtools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/sphinx_highlight.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/sphinx_highlight.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/underscore-1.13.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/underscore-1.13.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/underscore.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_package_prefix/_build/html/_static/underscore.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_package_prefix/_build/html/_static' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_package_prefix/_build/html/_static' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_package_prefix/_build/html' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_package_prefix/_build' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_package_prefix' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir test_pymat> [collection]
      pytest_collectstart [hook]
          collector: <Dir test_pymat>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir test_pymat>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/Makefile
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_pymat>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/Makefile
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build
            parent: <Dir test_pymat>
        finish pytest_collect_directory --> <Dir _build> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/conf.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_pymat>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/conf.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/index.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_pymat>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/index.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/make.bat
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_pymat>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/make.bat
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/matsrc
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/matsrc
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/matsrc
            parent: <Dir test_pymat>
        finish pytest_collect_directory --> <Dir matsrc> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/pysrc
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/pysrc
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/pysrc
            parent: <Dir test_pymat>
        finish pytest_collect_directory --> <Dir pysrc> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_pymat' lenresult=3 outcome='passed'> [hook]
    genitems <Dir _build> [collection]
      pytest_collectstart [hook]
          collector: <Dir _build>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _build>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/doctrees
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/doctrees
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/doctrees
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir doctrees> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir html> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_pymat/_build' lenresult=2 outcome='passed'> [hook]
    genitems <Dir doctrees> [collection]
      pytest_collectstart [hook]
          collector: <Dir doctrees>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir doctrees>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/doctrees/environment.pickle
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/doctrees/environment.pickle
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/doctrees/index.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/doctrees/index.doctree
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_pymat/_build/doctrees' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_pymat/_build/doctrees' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir html> [collection]
      pytest_collectstart [hook]
          collector: <Dir html>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir html>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/.buildinfo
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/.buildinfo
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_sources
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_sources
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_sources
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _sources> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _static> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/genindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/genindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/index.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/index.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/mat-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/mat-modindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/mat-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/mat-modindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/objects.inv
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/objects.inv
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/py-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/py-modindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/py-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/py-modindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/search.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/search.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/searchindex.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/searchindex.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_pymat/_build/html' lenresult=2 outcome='passed'> [hook]
    genitems <Dir _sources> [collection]
      pytest_collectstart [hook]
          collector: <Dir _sources>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _sources>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_sources/index.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_sources/index.rst.txt
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_pymat/_build/html/_sources' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_pymat/_build/html/_sources' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir _static> [collection]
      pytest_collectstart [hook]
          collector: <Dir _static>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _static>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/alabaster.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/alabaster.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/basic.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/basic.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/custom.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/custom.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/doctools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/doctools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/documentation_options.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/documentation_options.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/file.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/file.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/jquery-3.5.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/jquery-3.5.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/jquery.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/jquery.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/language_data.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/language_data.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/minus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/minus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/plus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/plus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/pygments.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/pygments.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/searchtools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/searchtools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/sphinx_highlight.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/sphinx_highlight.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/underscore-1.13.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/underscore-1.13.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/underscore.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/_build/html/_static/underscore.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_pymat/_build/html/_static' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_pymat/_build/html/_static' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_pymat/_build/html' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_pymat/_build' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir matsrc> [collection]
      pytest_collectstart [hook]
          collector: <Dir matsrc>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir matsrc>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/matsrc/func.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/matsrc/func.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir matsrc>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/matsrc/func.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/matsrc/func.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_pymat/matsrc' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_pymat/matsrc' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir pysrc> [collection]
      pytest_collectstart [hook]
          collector: <Dir pysrc>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir pysrc>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/pysrc/__pycache__
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/pysrc/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/pysrc/func.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/pysrc/func.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir pysrc>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/pysrc/func.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat/pysrc/func.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_pymat/pysrc' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_pymat/pysrc' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_pymat' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir test_pymat_common_root> [collection]
      pytest_collectstart [hook]
          collector: <Dir test_pymat_common_root>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir test_pymat_common_root>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/Makefile
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_pymat_common_root>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/Makefile
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build
            parent: <Dir test_pymat_common_root>
        finish pytest_collect_directory --> <Dir _build> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/base
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/base
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/base
            parent: <Dir test_pymat_common_root>
        finish pytest_collect_directory --> <Package base> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/conf.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_pymat_common_root>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/conf.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/index.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_pymat_common_root>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/index.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/make.bat
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_pymat_common_root>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/make.bat
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_pymat_common_root' lenresult=2 outcome='passed'> [hook]
    genitems <Dir _build> [collection]
      pytest_collectstart [hook]
          collector: <Dir _build>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _build>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/doctrees
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/doctrees
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/doctrees
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir doctrees> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir html> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_pymat_common_root/_build' lenresult=2 outcome='passed'> [hook]
    genitems <Dir doctrees> [collection]
      pytest_collectstart [hook]
          collector: <Dir doctrees>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir doctrees>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/doctrees/environment.pickle
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/doctrees/environment.pickle
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/doctrees/index.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/doctrees/index.doctree
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_pymat_common_root/_build/doctrees' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_pymat_common_root/_build/doctrees' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir html> [collection]
      pytest_collectstart [hook]
          collector: <Dir html>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir html>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/.buildinfo
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/.buildinfo
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_sources
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_sources
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_sources
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _sources> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _static> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/genindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/genindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/index.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/index.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/mat-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/mat-modindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/mat-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/mat-modindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/objects.inv
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/objects.inv
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/py-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/py-modindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/py-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/py-modindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/search.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/search.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/searchindex.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/searchindex.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_pymat_common_root/_build/html' lenresult=2 outcome='passed'> [hook]
    genitems <Dir _sources> [collection]
      pytest_collectstart [hook]
          collector: <Dir _sources>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _sources>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_sources/index.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_sources/index.rst.txt
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_pymat_common_root/_build/html/_sources' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_pymat_common_root/_build/html/_sources' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir _static> [collection]
      pytest_collectstart [hook]
          collector: <Dir _static>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _static>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/alabaster.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/alabaster.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/basic.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/basic.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/custom.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/custom.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/doctools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/doctools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/documentation_options.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/documentation_options.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/file.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/file.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/jquery-3.5.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/jquery-3.5.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/jquery.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/jquery.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/language_data.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/language_data.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/minus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/minus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/plus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/plus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/pygments.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/pygments.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/searchtools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/searchtools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/sphinx_highlight.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/sphinx_highlight.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/underscore-1.13.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/underscore-1.13.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/underscore.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/_build/html/_static/underscore.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_pymat_common_root/_build/html/_static' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_pymat_common_root/_build/html/_static' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_pymat_common_root/_build/html' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_pymat_common_root/_build' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package base> [collection]
      pytest_collectstart [hook]
          collector: <Package base>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package base>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/base/__init__.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/base/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package base>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/base/__init__.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/base/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/base/MatlabClass.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/base/MatlabClass.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package base>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/base/MatlabClass.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/base/MatlabClass.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/base/PythonClass.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/base/PythonClass.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package base>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/base/PythonClass.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/base/PythonClass.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/base/__pycache__
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_pymat_common_root/base/__pycache__
        finish pytest_ignore_collect --> True [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_pymat_common_root/base' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_pymat_common_root/base' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_pymat_common_root' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir test_skipping_module_members> [collection]
      pytest_collectstart [hook]
          collector: <Dir test_skipping_module_members>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir test_skipping_module_members>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/Makefile
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_skipping_module_members>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/Makefile
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build
            parent: <Dir test_skipping_module_members>
        finish pytest_collect_directory --> <Dir _build> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/conf.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_skipping_module_members>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/conf.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/index.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_skipping_module_members>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/index.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/make.bat
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_skipping_module_members>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/make.bat
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/src
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/src
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/src
            parent: <Dir test_skipping_module_members>
        finish pytest_collect_directory --> <Dir src> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_skipping_module_members' lenresult=2 outcome='passed'> [hook]
    genitems <Dir _build> [collection]
      pytest_collectstart [hook]
          collector: <Dir _build>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _build>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/doctrees
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/doctrees
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/doctrees
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir doctrees> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir html> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_skipping_module_members/_build' lenresult=2 outcome='passed'> [hook]
    genitems <Dir doctrees> [collection]
      pytest_collectstart [hook]
          collector: <Dir doctrees>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir doctrees>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/doctrees/environment.pickle
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/doctrees/environment.pickle
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/doctrees/environment.pickle
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/doctrees/index.doctree
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir doctrees>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/doctrees/index.doctree
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/doctrees/index.doctree
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_skipping_module_members/_build/doctrees' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_skipping_module_members/_build/doctrees' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir html> [collection]
      pytest_collectstart [hook]
          collector: <Dir html>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir html>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/.buildinfo
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/.buildinfo
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/.buildinfo
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_sources
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_sources
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_sources
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _sources> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static
            parent: <Dir html>
        finish pytest_collect_directory --> <Dir _static> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/genindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/genindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/genindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/index.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/index.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/index.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/mat-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/mat-modindex.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/mat-modindex.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/mat-modindex.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/objects.inv
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/objects.inv
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/objects.inv
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/search.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/search.html
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/search.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/searchindex.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir html>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/searchindex.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/searchindex.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_skipping_module_members/_build/html' lenresult=2 outcome='passed'> [hook]
    genitems <Dir _sources> [collection]
      pytest_collectstart [hook]
          collector: <Dir _sources>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _sources>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_sources/index.rst.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _sources>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_sources/index.rst.txt
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_sources/index.rst.txt
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_skipping_module_members/_build/html/_sources' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_skipping_module_members/_build/html/_sources' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir _static> [collection]
      pytest_collectstart [hook]
          collector: <Dir _static>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _static>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/alabaster.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/alabaster.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/alabaster.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/basic.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/basic.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/basic.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/custom.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/custom.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/custom.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/doctools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/doctools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/doctools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/documentation_options.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/documentation_options.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/documentation_options.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/file.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/file.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/file.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/jquery-3.5.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/jquery-3.5.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/jquery-3.5.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/jquery.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/jquery.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/jquery.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/language_data.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/language_data.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/language_data.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/minus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/minus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/minus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/plus.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/plus.png
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/plus.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/pygments.css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/pygments.css
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/pygments.css
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/searchtools.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/searchtools.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/searchtools.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/sphinx_highlight.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/sphinx_highlight.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/sphinx_highlight.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/underscore-1.13.1.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/underscore-1.13.1.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/underscore-1.13.1.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/underscore.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir _static>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/underscore.js
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/_build/html/_static/underscore.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_skipping_module_members/_build/html/_static' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_skipping_module_members/_build/html/_static' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_skipping_module_members/_build/html' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_skipping_module_members/_build' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir src> [collection]
      pytest_collectstart [hook]
          collector: <Dir src>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir src>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/src/first.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/src/first.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir src>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/src/first.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/src/first.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/src/second.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/src/second.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir src>
            file_path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/src/second.m
            path: /home/remi-gau/github/matlabdomain/tests/roots/test_skipping_module_members/src/second.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/roots/test_skipping_module_members/src' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_skipping_module_members/src' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots/test_skipping_module_members' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/roots' lenresult=11 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_autodoc.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_autodoc.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_autodoc.py>
      find_module called for: test_autodoc [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_autodoc.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_autodoc.py [assertion]
      early skip of rewriting module: helper [assertion]
      early skip of rewriting module: sphinx [assertion]
      early skip of rewriting module: sphinx.util [assertion]
      early skip of rewriting module: sphinx.util._pathlib [assertion]
      early skip of rewriting module: sphinx.deprecation [assertion]
      early skip of rewriting module: sphinx.testing [assertion]
      early skip of rewriting module: sphinx.testing.fixtures [assertion]
      early skip of rewriting module: sphinx.testing.util [assertion]
      early skip of rewriting module: docutils [assertion]
      early skip of rewriting module: docutils.nodes [assertion]
      early skip of rewriting module: docutils.parsers [assertion]
      early skip of rewriting module: docutils.frontend [assertion]
      early skip of rewriting module: optparse [assertion]
      early skip of rewriting module: docutils.io [assertion]
      early skip of rewriting module: docutils.utils [assertion]
      early skip of rewriting module: docutils.parsers.rst [assertion]
      early skip of rewriting module: docutils.statemachine [assertion]
      early skip of rewriting module: docutils.parsers.rst.roles [assertion]
      early skip of rewriting module: docutils.parsers.rst.directives [assertion]
      early skip of rewriting module: docutils.parsers.rst.languages [assertion]
      early skip of rewriting module: docutils.languages [assertion]
      early skip of rewriting module: docutils.parsers.rst.languages.en [assertion]
      early skip of rewriting module: docutils.utils.code_analyzer [assertion]
      early skip of rewriting module: pygments.formatters.html [assertion]
      early skip of rewriting module: ctags [assertion]
      early skip of rewriting module: docutils.parsers.rst.states [assertion]
      early skip of rewriting module: docutils.parsers.rst.tableparser [assertion]
      early skip of rewriting module: docutils.utils.punctuation_chars [assertion]
      early skip of rewriting module: docutils.utils.roman [assertion]
      early skip of rewriting module: docutils.utils.urischemes [assertion]
      early skip of rewriting module: docutils.transforms [assertion]
      early skip of rewriting module: docutils.transforms.universal [assertion]
      early skip of rewriting module: docutils.utils.smartquotes [assertion]
      early skip of rewriting module: sphinx.application [assertion]
      early skip of rewriting module: sphinx.locale [assertion]
      early skip of rewriting module: sphinx._cli [assertion]
      early skip of rewriting module: sphinx._cli.util [assertion]
      early skip of rewriting module: sphinx._cli.util.colour [assertion]
      early skip of rewriting module: sphinx.config [assertion]
      early skip of rewriting module: sphinx.errors [assertion]
      early skip of rewriting module: sphinx.util.logging [assertion]
      early skip of rewriting module: logging.handlers [assertion]
      early skip of rewriting module: queue [assertion]
      early skip of rewriting module: _queue [assertion]
      early skip of rewriting module: sphinx.environment [assertion]
      early skip of rewriting module: sphinx.addnodes [assertion]
      early skip of rewriting module: sphinx.domains [assertion]
      early skip of rewriting module: sphinx.domains._index [assertion]
      early skip of rewriting module: sphinx.domains._domains_container [assertion]
      early skip of rewriting module: sphinx.environment.adapters [assertion]
      early skip of rewriting module: sphinx.environment.adapters.toctree [assertion]
      early skip of rewriting module: sphinx.util.matching [assertion]
      early skip of rewriting module: sphinx.util.osutil [assertion]
      early skip of rewriting module: filecmp [assertion]
      early skip of rewriting module: sphinx.util.nodes [assertion]
      early skip of rewriting module: sphinx.util.parsing [assertion]
      early skip of rewriting module: sphinx.transforms [assertion]
      early skip of rewriting module: docutils.transforms.parts [assertion]
      early skip of rewriting module: docutils.transforms.references [assertion]
      early skip of rewriting module: sphinx.util.docutils [assertion]
      early skip of rewriting module: sphinx.util.i18n [assertion]
      early skip of rewriting module: babel [assertion]
      early skip of rewriting module: babel.core [assertion]
      early skip of rewriting module: babel.localedata [assertion]
      early skip of rewriting module: babel.plural [assertion]
      early skip of rewriting module: babel.dates [assertion]
      early skip of rewriting module: pytz [assertion]
      early skip of rewriting module: zoneinfo [assertion]
      early skip of rewriting module: zoneinfo._tzpath [assertion]
      early skip of rewriting module: zoneinfo._common [assertion]
      early skip of rewriting module: _zoneinfo [assertion]
      early skip of rewriting module: babel.localtime [assertion]
      early skip of rewriting module: babel.localtime._unix [assertion]
      early skip of rewriting module: babel.localtime._helpers [assertion]
      early skip of rewriting module: pytz [assertion]
      early skip of rewriting module: babel.localtime._fallback [assertion]
      early skip of rewriting module: babel.messages [assertion]
      early skip of rewriting module: babel.messages.catalog [assertion]
      early skip of rewriting module: babel.messages.plurals [assertion]
      early skip of rewriting module: babel.util [assertion]
      early skip of rewriting module: babel.messages.mofile [assertion]
      early skip of rewriting module: babel.messages.pofile [assertion]
      early skip of rewriting module: sphinx.util._files [assertion]
      early skip of rewriting module: sphinx.util._serialise [assertion]
      early skip of rewriting module: sphinx.util._timestamps [assertion]
      early skip of rewriting module: sphinx.events [assertion]
      early skip of rewriting module: sphinx.util.inspect [assertion]
      early skip of rewriting module: sphinx.pycode [assertion]
      early skip of rewriting module: sphinx.pycode.parser [assertion]
      early skip of rewriting module: sphinx.pycode.ast [assertion]
      early skip of rewriting module: sphinx.util.typing [assertion]
      early skip of rewriting module: sphinx.highlighting [assertion]
      early skip of rewriting module: pygments.formatters.latex [assertion]
      early skip of rewriting module: pygments.lexers.c_cpp [assertion]
      early skip of rewriting module: pygments.lexers.markup [assertion]
      early skip of rewriting module: pygments.lexers.html [assertion]
      early skip of rewriting module: pygments.lexers.javascript [assertion]
      early skip of rewriting module: pygments.lexers.jvm [assertion]
      early skip of rewriting module: pygments.lexers.css [assertion]
      early skip of rewriting module: pygments.lexers._css_builtins [assertion]
      early skip of rewriting module: pygments.lexers.ruby [assertion]
      early skip of rewriting module: pygments.lexers.lilypond [assertion]
      early skip of rewriting module: pygments.lexers.lisp [assertion]
      early skip of rewriting module: pygments.lexers._scheme_builtins [assertion]
      early skip of rewriting module: pygments.lexers._lilypond_builtins [assertion]
      early skip of rewriting module: pygments.lexers.data [assertion]
      early skip of rewriting module: pygments.lexers.special [assertion]
      early skip of rewriting module: sphinx.pygments_styles [assertion]
      early skip of rewriting module: pygments.style [assertion]
      early skip of rewriting module: pygments.styles.friendly [assertion]
      early skip of rewriting module: sphinx.util.texescape [assertion]
      early skip of rewriting module: sphinx.project [assertion]
      early skip of rewriting module: sphinx.registry [assertion]
      early skip of rewriting module: sphinx.domains.std [assertion]
      early skip of rewriting module: sphinx.directives [assertion]
      early skip of rewriting module: sphinx.util.docfields [assertion]
      early skip of rewriting module: sphinx.roles [assertion]
      early skip of rewriting module: sphinx.extension [assertion]
      early skip of rewriting module: packaging [assertion]
      early skip of rewriting module: packaging.version [assertion]
      early skip of rewriting module: packaging._structures [assertion]
      early skip of rewriting module: sphinx.io [assertion]
      early skip of rewriting module: docutils.core [assertion]
      early skip of rewriting module: docutils.readers [assertion]
      early skip of rewriting module: docutils.writers [assertion]
      early skip of rewriting module: docutils.readers.doctree [assertion]
      early skip of rewriting module: docutils.readers.standalone [assertion]
      early skip of rewriting module: docutils.transforms.frontmatter [assertion]
      early skip of rewriting module: docutils.transforms.misc [assertion]
      early skip of rewriting module: sphinx.transforms.i18n [assertion]
      early skip of rewriting module: sphinx.util.index_entries [assertion]
      early skip of rewriting module: sphinx.transforms.references [assertion]
      early skip of rewriting module: sphinx.versioning [assertion]
      early skip of rewriting module: Levenshtein [assertion]
      early skip of rewriting module: sphinx.parsers [assertion]
      early skip of rewriting module: sphinx.util.rst [assertion]
      early skip of rewriting module: jinja2 [assertion]
      early skip of rewriting module: jinja2.bccache [assertion]
      early skip of rewriting module: jinja2.environment [assertion]
      early skip of rewriting module: markupsafe [assertion]
      early skip of rewriting module: markupsafe._speedups [assertion]
      early skip of rewriting module: jinja2.nodes [assertion]
      early skip of rewriting module: jinja2.utils [assertion]
      early skip of rewriting module: jinja2.compiler [assertion]
      early skip of rewriting module: jinja2.exceptions [assertion]
      early skip of rewriting module: jinja2.idtracking [assertion]
      early skip of rewriting module: jinja2.visitor [assertion]
      early skip of rewriting module: jinja2.optimizer [assertion]
      early skip of rewriting module: jinja2.defaults [assertion]
      early skip of rewriting module: jinja2.filters [assertion]
      early skip of rewriting module: jinja2.async_utils [assertion]
      early skip of rewriting module: jinja2.runtime [assertion]
      find_module called for: jinja2.tests [assertion]
      early skip of rewriting module: jinja2.lexer [assertion]
      early skip of rewriting module: jinja2._identifier [assertion]
      early skip of rewriting module: jinja2.parser [assertion]
      early skip of rewriting module: jinja2.loaders [assertion]
      early skip of rewriting module: sphinx.util.build_phase [assertion]
      early skip of rewriting module: sphinx.util.display [assertion]
      early skip of rewriting module: sphinx.util.tags [assertion]
      early skip of rewriting module: sphinx._cli.util.errors [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: pickle
            obj: <module 'pickle' from '/home/remi-gau/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/pickle.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: sys
            obj: <module 'sys' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: pytest
            obj: <module 'pytest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: helper
            obj: <module 'helper' from '/home/remi-gau/github/matlabdomain/tests/helper.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: make_app
            obj: <pytest_fixture(<function make_app at 0x716ea8cca700>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: test_params
            obj: <pytest_fixture(<function test_params at 0x716ea8cca480>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: rootdir
            obj: <pytest_fixture(<function rootdir at 0x716ea934c4a0>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: test_target
            obj: <function test_target at 0x716ea934cd60>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea99075d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_target>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: test_target_show_default_value
            obj: <function test_target_show_default_value at 0x716ea8ccaac0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea98c0f90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_target_show_default_value>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: test_target_auto_link_basic
            obj: <function test_target_auto_link_basic at 0x716ea8ccab60>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea9510110>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_target_auto_link_basic>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: test_target_auto_link_all
            obj: <function test_target_auto_link_all at 0x716ea8ccac00>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cd6890>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_target_auto_link_all>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: test_classfolder
            obj: <function test_classfolder at 0x716ea8ccaca0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cd6c90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_classfolder>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: test_package
            obj: <function test_package at 0x716ea8ccad40>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cd7250>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_package>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: test_package_show_default_value
            obj: <function test_package_show_default_value at 0x716ea8ccade0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cd7810>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_package_show_default_value>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: test_package_auto_link_all
            obj: <function test_package_auto_link_all at 0x716ea8ccae80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cd7dd0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_package_auto_link_all>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: test_submodule
            obj: <function test_submodule at 0x716ea8ccaf20>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cec3d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_submodule>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: test_submodule_show_default_value
            obj: <function test_submodule_show_default_value at 0x716ea8ccafc0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cec950>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_submodule_show_default_value>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: test_root
            obj: <function test_root at 0x716ea8ccb060>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cecf10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_root>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: test_root_relative_matlab_src_dir
            obj: <function test_root_relative_matlab_src_dir at 0x716ea8ccb100>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8ced4d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_root_relative_matlab_src_dir>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: test_root_show_default_value
            obj: <function test_root_show_default_value at 0x716ea8ccb1a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8ceda90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_root_show_default_value>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: test_root_auto_link_basic
            obj: <function test_root_auto_link_basic at 0x716ea8ccb240>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cd6f10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_root_auto_link_basic>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc.py>
            name: test_root_class_signature
            obj: <function test_root_class_signature at 0x716ea8ccb2e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cd6950>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_root_class_signature>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_autodoc.py' lenresult=15 outcome='passed'> [hook]
    genitems <Function test_target> [collection]
      pytest_itemcollected [hook]
          item: <Function test_target>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_target_show_default_value> [collection]
      pytest_itemcollected [hook]
          item: <Function test_target_show_default_value>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_target_auto_link_basic> [collection]
      pytest_itemcollected [hook]
          item: <Function test_target_auto_link_basic>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_target_auto_link_all> [collection]
      pytest_itemcollected [hook]
          item: <Function test_target_auto_link_all>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_classfolder> [collection]
      pytest_itemcollected [hook]
          item: <Function test_classfolder>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_package> [collection]
      pytest_itemcollected [hook]
          item: <Function test_package>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_package_show_default_value> [collection]
      pytest_itemcollected [hook]
          item: <Function test_package_show_default_value>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_package_auto_link_all> [collection]
      pytest_itemcollected [hook]
          item: <Function test_package_auto_link_all>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_submodule> [collection]
      pytest_itemcollected [hook]
          item: <Function test_submodule>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_submodule_show_default_value> [collection]
      pytest_itemcollected [hook]
          item: <Function test_submodule_show_default_value>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_root> [collection]
      pytest_itemcollected [hook]
          item: <Function test_root>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_root_relative_matlab_src_dir> [collection]
      pytest_itemcollected [hook]
          item: <Function test_root_relative_matlab_src_dir>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_root_show_default_value> [collection]
      pytest_itemcollected [hook]
          item: <Function test_root_show_default_value>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_root_auto_link_basic> [collection]
      pytest_itemcollected [hook]
          item: <Function test_root_auto_link_basic>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_root_class_signature> [collection]
      pytest_itemcollected [hook]
          item: <Function test_root_class_signature>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_autodoc.py' lenresult=15 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_autodoc_properties.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_autodoc_properties.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_autodoc_properties.py>
      find_module called for: test_autodoc_properties [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_autodoc_properties.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_autodoc_properties.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_properties.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_properties.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_properties.py>
            name: pickle
            obj: <module 'pickle' from '/home/remi-gau/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/pickle.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_properties.py>
            name: sys
            obj: <module 'sys' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_properties.py>
            name: helper
            obj: <module 'helper' from '/home/remi-gau/github/matlabdomain/tests/helper.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_properties.py>
            name: pytest
            obj: <module 'pytest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_properties.py>
            name: make_app
            obj: <pytest_fixture(<function make_app at 0x716ea8cca700>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_properties.py>
            name: test_params
            obj: <pytest_fixture(<function test_params at 0x716ea8cca480>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_properties.py>
            name: rootdir
            obj: <pytest_fixture(<function rootdir at 0x716ea8f43ce0>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_properties.py>
            name: testdata
            obj: [(False, False), (False, True), (True, False), (True, True)]
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_properties.py>
            name: test_target
            obj: <function test_target at 0x716ea909b560>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8ceec10>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x716ea99eebd0>
                val: False
                argname: show_default
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x716ea99eebd0>
                val: False
                argname: show_specs
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x716ea99eebd0>
                val: False
                argname: show_default
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x716ea99eebd0>
                val: True
                argname: show_specs
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x716ea99eebd0>
                val: True
                argname: show_default
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x716ea99eebd0>
                val: False
                argname: show_specs
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x716ea99eebd0>
                val: True
                argname: show_default
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x716ea99eebd0>
                val: True
                argname: show_specs
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_target[False-False]>, <Function test_target[False-True]>, <Function test_target[True-False]>, <Function test_target[True-True]>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_autodoc_properties.py' lenresult=4 outcome='passed'> [hook]
    genitems <Function test_target[False-False]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_target[False-False]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_target[False-True]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_target[False-True]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_target[True-False]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_target[True-False]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_target[True-True]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_target[True-True]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_autodoc_properties.py' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_autodoc_short_links.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_autodoc_short_links.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_autodoc_short_links.py>
      find_module called for: test_autodoc_short_links [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_autodoc_short_links.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_autodoc_short_links.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: pickle
            obj: <module 'pickle' from '/home/remi-gau/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/pickle.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: sys
            obj: <module 'sys' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: helper
            obj: <module 'helper' from '/home/remi-gau/github/matlabdomain/tests/helper.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: pytest
            obj: <module 'pytest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: make_app
            obj: <pytest_fixture(<function make_app at 0x716ea8cca700>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: test_params
            obj: <pytest_fixture(<function test_params at 0x716ea8cca480>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: rootdir
            obj: <pytest_fixture(<function rootdir at 0x716ea91e11c0>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: test_target
            obj: <function test_target at 0x716ea90e6fc0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cf41d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_target>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: test_target_show_default_value
            obj: <function test_target_show_default_value at 0x716ea90e63e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cf50d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_target_show_default_value>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: test_target_auto_link_basic
            obj: <function test_target_auto_link_basic at 0x716ea90e6520>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cf5690>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_target_auto_link_basic>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: test_target_auto_link_all
            obj: <function test_target_auto_link_all at 0x716ea8ed13a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cf5e50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_target_auto_link_all>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: test_classfolder
            obj: <function test_classfolder at 0x716ea8ed23e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cf6250>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_classfolder>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: test_package
            obj: <function test_package at 0x716ea8d34900>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cf6810>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_package>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: test_package_show_default_value
            obj: <function test_package_show_default_value at 0x716ea8d37600>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cf6dd0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_package_show_default_value>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: test_package_auto_link_all
            obj: <function test_package_auto_link_all at 0x716ea8d36fc0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cf7590>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_package_auto_link_all>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: test_submodule
            obj: <function test_submodule at 0x716ea8d37560>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cf7950>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_submodule>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: test_submodule_show_default_value
            obj: <function test_submodule_show_default_value at 0x716ea8d61da0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cf7f90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_submodule_show_default_value>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: test_root
            obj: <function test_root at 0x716ea8d61c60>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8d005d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_root>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: test_root_show_default_value
            obj: <function test_root_show_default_value at 0x716ea8d63100>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8d00c50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_root_show_default_value>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_autodoc_short_links.py>
            name: test_root_auto_link_basic
            obj: <function test_root_auto_link_basic at 0x716ea8d61d00>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8d012d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_root_auto_link_basic>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_autodoc_short_links.py' lenresult=13 outcome='passed'> [hook]
    genitems <Function test_target> [collection]
      pytest_itemcollected [hook]
          item: <Function test_target>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_target_show_default_value> [collection]
      pytest_itemcollected [hook]
          item: <Function test_target_show_default_value>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_target_auto_link_basic> [collection]
      pytest_itemcollected [hook]
          item: <Function test_target_auto_link_basic>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_target_auto_link_all> [collection]
      pytest_itemcollected [hook]
          item: <Function test_target_auto_link_all>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_classfolder> [collection]
      pytest_itemcollected [hook]
          item: <Function test_classfolder>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_package> [collection]
      pytest_itemcollected [hook]
          item: <Function test_package>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_package_show_default_value> [collection]
      pytest_itemcollected [hook]
          item: <Function test_package_show_default_value>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_package_auto_link_all> [collection]
      pytest_itemcollected [hook]
          item: <Function test_package_auto_link_all>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_submodule> [collection]
      pytest_itemcollected [hook]
          item: <Function test_submodule>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_submodule_show_default_value> [collection]
      pytest_itemcollected [hook]
          item: <Function test_submodule_show_default_value>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_root> [collection]
      pytest_itemcollected [hook]
          item: <Function test_root>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_root_show_default_value> [collection]
      pytest_itemcollected [hook]
          item: <Function test_root_show_default_value>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_root_auto_link_basic> [collection]
      pytest_itemcollected [hook]
          item: <Function test_root_auto_link_basic>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_autodoc_short_links.py' lenresult=13 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_classfolder.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_classfolder.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_classfolder.py>
      find_module called for: test_classfolder [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_classfolder.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_classfolder.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_classfolder.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_classfolder.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_classfolder.py>
            name: pickle
            obj: <module 'pickle' from '/home/remi-gau/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/pickle.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_classfolder.py>
            name: sys
            obj: <module 'sys' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_classfolder.py>
            name: pytest
            obj: <module 'pytest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_classfolder.py>
            name: helper
            obj: <module 'helper' from '/home/remi-gau/github/matlabdomain/tests/helper.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_classfolder.py>
            name: make_app
            obj: <pytest_fixture(<function make_app at 0x716ea8cca700>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_classfolder.py>
            name: test_params
            obj: <pytest_fixture(<function test_params at 0x716ea8cca480>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_classfolder.py>
            name: rootdir
            obj: <pytest_fixture(<function rootdir at 0x716ea8ccb600>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_classfolder.py>
            name: test_first
            obj: <function test_first at 0x716ea8ccb6a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cf64d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_first>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_classfolder.py>
            name: test_second
            obj: <function test_second at 0x716ea8ccb740>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8cf5010>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_second>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_classfolder.py>
            name: test_third
            obj: <function test_third at 0x716ea8ccb7e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8d02610>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_third>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_classfolder.py' lenresult=3 outcome='passed'> [hook]
    genitems <Function test_first> [collection]
      pytest_itemcollected [hook]
          item: <Function test_first>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_second> [collection]
      pytest_itemcollected [hook]
          item: <Function test_second>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_third> [collection]
      pytest_itemcollected [hook]
          item: <Function test_third>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_classfolder.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_classfolder_class_name.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_classfolder_class_name.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_classfolder_class_name.py>
      find_module called for: test_classfolder_class_name [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_classfolder_class_name.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_classfolder_class_name.py [assertion]
      early skip of rewriting module: sphinxcontrib.mat_types [assertion]
      early skip of rewriting module: sphinxcontrib.mat_tree_sitter_parser [assertion]
      early skip of rewriting module: tree_sitter_matlab [assertion]
      early skip of rewriting module: tree_sitter_matlab._binding [assertion]
      early skip of rewriting module: tree_sitter [assertion]
      early skip of rewriting module: tree_sitter._binding [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_classfolder_class_name.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_classfolder_class_name.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_classfolder_class_name.py>
            name: classfolder_class_name
            obj: <function classfolder_class_name at 0x716ea8b18180>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_classfolder_class_name.py>
            name: test_classfolders
            obj: <function test_classfolders at 0x716ea8ccb380>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8d02bd0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_classfolders>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_classfolder_class_name.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_classfolders> [collection]
      pytest_itemcollected [hook]
          item: <Function test_classfolders>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_classfolder_class_name.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir test_data> [collection]
      pytest_collectstart [hook]
          collector: <Dir test_data>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir test_data>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/+package
            path: /home/remi-gau/github/matlabdomain/tests/test_data/+package
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/test_data/+package
            parent: <Dir test_data>
        finish pytest_collect_directory --> <Dir +package> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolder
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolder
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolder
            parent: <Dir test_data>
        finish pytest_collect_directory --> <Dir @ClassFolder> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolderUsingBuiltins
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolderUsingBuiltins
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolderUsingBuiltins
            parent: <Dir test_data>
        finish pytest_collect_directory --> <Dir @ClassFolderUsingBuiltins> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolderWithoutClassDefinition
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolderWithoutClassDefinition
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolderWithoutClassDefinition
            parent: <Dir test_data>
        finish pytest_collect_directory --> <Dir @ClassFolderWithoutClassDefinition> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/@EmptyClassFolder
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@EmptyClassFolder
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@EmptyClassFolder
            parent: <Dir test_data>
        finish pytest_collect_directory --> <Dir @EmptyClassFolder> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder
            parent: <Dir test_data>
        finish pytest_collect_directory --> <Dir @NestedClassFolder> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/Application.mlapp
            path: /home/remi-gau/github/matlabdomain/tests/test_data/Application.mlapp
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/Application.mlapp
            path: /home/remi-gau/github/matlabdomain/tests/test_data/Application.mlapp
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/Bool.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/Bool.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/Bool.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/Bool.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassAbstract.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassAbstract.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassAbstract.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassAbstract.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassBySource.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassBySource.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassBySource.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassBySource.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassContainingParfor.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassContainingParfor.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassContainingParfor.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassContainingParfor.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassExample.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassExample.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassExample.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassExample.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassInheritHandle.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassInheritHandle.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassInheritHandle.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassInheritHandle.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassLongProperty.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassLongProperty.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassLongProperty.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassLongProperty.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithAttributes.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithAttributes.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithAttributes.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithAttributes.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithBuiltinOverload.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithBuiltinOverload.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithBuiltinOverload.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithBuiltinOverload.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithBuiltinProperties.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithBuiltinProperties.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithBuiltinProperties.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithBuiltinProperties.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithCommentHeader.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithCommentHeader.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithCommentHeader.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithCommentHeader.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithDoubleQuotedString.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithDoubleQuotedString.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithDoubleQuotedString.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithDoubleQuotedString.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithDummyArguments.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithDummyArguments.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithDummyArguments.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithDummyArguments.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEllipsisProperties.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEllipsisProperties.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEllipsisProperties.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEllipsisProperties.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEndOfLineComment.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEndOfLineComment.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEndOfLineComment.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEndOfLineComment.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEnumMethod.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEnumMethod.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEnumMethod.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEnumMethod.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithErrors.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithErrors.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithErrors.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithErrors.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEvent.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEvent.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEvent.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEvent.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEventMethod.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEventMethod.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEventMethod.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithEventMethod.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithFunctionArguments.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithFunctionArguments.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithFunctionArguments.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithFunctionArguments.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithFunctionVariable.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithFunctionVariable.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithFunctionVariable.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithFunctionVariable.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithGetMethod.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithGetMethod.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithGetMethod.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithGetMethod.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithGetterSetter.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithGetterSetter.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithGetterSetter.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithGetterSetter.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithKeywordsAsFieldnames.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithKeywordsAsFieldnames.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithKeywordsAsFieldnames.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithKeywordsAsFieldnames.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithLineContinuation.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithLineContinuation.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithLineContinuation.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithLineContinuation.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithLongPropertyDocstrings.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithLongPropertyDocstrings.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithLongPropertyDocstrings.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithLongPropertyDocstrings.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithLongPropertyTrailingEmptyDocstrings.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithLongPropertyTrailingEmptyDocstrings.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithLongPropertyTrailingEmptyDocstrings.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithLongPropertyTrailingEmptyDocstrings.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithMethodAttributes.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithMethodAttributes.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithMethodAttributes.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithMethodAttributes.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithMethodsWithSpaces.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithMethodsWithSpaces.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithMethodsWithSpaces.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithMethodsWithSpaces.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithNameMismatch.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithNameMismatch.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithNameMismatch.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithNameMismatch.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithPropertyAttributes.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithPropertyAttributes.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithPropertyAttributes.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithPropertyAttributes.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithPropertyCellValues.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithPropertyCellValues.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithPropertyCellValues.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithPropertyCellValues.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithPropertyValidators.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithPropertyValidators.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithPropertyValidators.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithPropertyValidators.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithSeperatedComments.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithSeperatedComments.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithSeperatedComments.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithSeperatedComments.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithStringEllipsis.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithStringEllipsis.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithStringEllipsis.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithStringEllipsis.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithStrings.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithStrings.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithStrings.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithStrings.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithTests.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithTests.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithTests.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithTests.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithTrailingCommentAfterBases.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithTrailingCommentAfterBases.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithTrailingCommentAfterBases.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithTrailingCommentAfterBases.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithTrailingSemicolons.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithTrailingSemicolons.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithTrailingSemicolons.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithTrailingSemicolons.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithUndocumentedMembers.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithUndocumentedMembers.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithUndocumentedMembers.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithUndocumentedMembers.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithUnknownAttributes.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithUnknownAttributes.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithUnknownAttributes.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithUnknownAttributes.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithoutIndent.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithoutIndent.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithoutIndent.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ClassWithoutIndent.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/PropTypeOld.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/PropTypeOld.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/PropTypeOld.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/PropTypeOld.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/ValidateProps.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ValidateProps.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/ValidateProps.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/ValidateProps.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/arguments.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/arguments.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/arguments.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/arguments.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_example.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_example.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_example.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_example.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_inputargs_error.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_inputargs_error.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_inputargs_error.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_inputargs_error.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_no_input_no_output_no_parentheses.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_no_input_no_output_no_parentheses.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_no_input_no_output_no_parentheses.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_no_input_no_output_no_parentheses.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_no_input_no_parentheses_no_docstring.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_no_input_no_parentheses_no_docstring.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_no_input_no_parentheses_no_docstring.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_no_input_no_parentheses_no_docstring.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_comment_header.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_comment_header.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_comment_header.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_comment_header.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_dummy_argument.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_dummy_argument.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_dummy_argument.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_dummy_argument.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_function_variable.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_function_variable.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_function_variable.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_function_variable.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_input_argument_block.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_input_argument_block.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_input_argument_block.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_input_argument_block.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_latin_1.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_latin_1.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_latin_1.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_latin_1.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_name_mismatch.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_name_mismatch.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_name_mismatch.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_name_mismatch.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_nested_function.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_nested_function.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_nested_function.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_nested_function.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_output_argument_block.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_output_argument_block.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_output_argument_block.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_output_argument_block.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_string_ellipsis.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_string_ellipsis.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_string_ellipsis.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_string_ellipsis.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_utf8.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_utf8.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_utf8.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/f_with_utf8.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/readme.txt
            path: /home/remi-gau/github/matlabdomain/tests/test_data/readme.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/readme.txt
            path: /home/remi-gau/github/matlabdomain/tests/test_data/readme.txt
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/script.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/script.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/script.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/script.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/script_with_comment_header.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/script_with_comment_header.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/script_with_comment_header.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/script_with_comment_header.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/script_with_comment_header_2.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/script_with_comment_header_2.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/script_with_comment_header_2.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/script_with_comment_header_2.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/script_with_comment_header_3.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/script_with_comment_header_3.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/script_with_comment_header_3.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/script_with_comment_header_3.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/script_with_comment_header_4.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/script_with_comment_header_4.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_data>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/script_with_comment_header_4.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/script_with_comment_header_4.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule
            parent: <Dir test_data>
        finish pytest_collect_directory --> <Dir submodule> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_data' lenresult=7 outcome='passed'> [hook]
    genitems <Dir +package> [collection]
      pytest_collectstart [hook]
          collector: <Dir +package>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir +package>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/+package/package_func.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/+package/package_func.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir +package>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/+package/package_func.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/+package/package_func.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_data/+package' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_data/+package' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir @ClassFolder> [collection]
      pytest_collectstart [hook]
          collector: <Dir @ClassFolder>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir @ClassFolder>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolder/ClassFolder.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolder/ClassFolder.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir @ClassFolder>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolder/ClassFolder.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolder/ClassFolder.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolder/a_static_func.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolder/a_static_func.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir @ClassFolder>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolder/a_static_func.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolder/a_static_func.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolder/classMethod.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolder/classMethod.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir @ClassFolder>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolder/classMethod.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolder/classMethod.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_data/@ClassFolder' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_data/@ClassFolder' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir @ClassFolderUsingBuiltins> [collection]
      pytest_collectstart [hook]
          collector: <Dir @ClassFolderUsingBuiltins>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir @ClassFolderUsingBuiltins>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolderUsingBuiltins/ClassFolderUsingBuiltins.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolderUsingBuiltins/ClassFolderUsingBuiltins.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir @ClassFolderUsingBuiltins>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolderUsingBuiltins/ClassFolderUsingBuiltins.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolderUsingBuiltins/ClassFolderUsingBuiltins.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_data/@ClassFolderUsingBuiltins' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_data/@ClassFolderUsingBuiltins' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir @ClassFolderWithoutClassDefinition> [collection]
      pytest_collectstart [hook]
          collector: <Dir @ClassFolderWithoutClassDefinition>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir @ClassFolderWithoutClassDefinition>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolderWithoutClassDefinition/no_class.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolderWithoutClassDefinition/no_class.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir @ClassFolderWithoutClassDefinition>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolderWithoutClassDefinition/no_class.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@ClassFolderWithoutClassDefinition/no_class.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_data/@ClassFolderWithoutClassDefinition' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_data/@ClassFolderWithoutClassDefinition' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir @EmptyClassFolder> [collection]
      pytest_collectstart [hook]
          collector: <Dir @EmptyClassFolder>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir @EmptyClassFolder>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/@EmptyClassFolder/readme.txt
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@EmptyClassFolder/readme.txt
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir @EmptyClassFolder>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/@EmptyClassFolder/readme.txt
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@EmptyClassFolder/readme.txt
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_data/@EmptyClassFolder' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_data/@EmptyClassFolder' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir @NestedClassFolder> [collection]
      pytest_collectstart [hook]
          collector: <Dir @NestedClassFolder>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir @NestedClassFolder>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/NestedClassFolder.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/NestedClassFolder.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir @NestedClassFolder>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/NestedClassFolder.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/NestedClassFolder.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/folder1
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/folder1
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/folder1
            parent: <Dir @NestedClassFolder>
        finish pytest_collect_directory --> <Dir folder1> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/private
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/private
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/private
            parent: <Dir @NestedClassFolder>
        finish pytest_collect_directory --> <Dir private> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/public_function.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/public_function.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir @NestedClassFolder>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/public_function.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/public_function.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_data/@NestedClassFolder' lenresult=2 outcome='passed'> [hook]
    genitems <Dir folder1> [collection]
      pytest_collectstart [hook]
          collector: <Dir folder1>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir folder1>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/folder1/func.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/folder1/func.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir folder1>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/folder1/func.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/folder1/func.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_data/@NestedClassFolder/folder1' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_data/@NestedClassFolder/folder1' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir private> [collection]
      pytest_collectstart [hook]
          collector: <Dir private>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir private>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/private/private_function.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/private/private_function.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir private>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/private/private_function.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/@NestedClassFolder/private/private_function.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_data/@NestedClassFolder/private' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_data/@NestedClassFolder/private' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_data/@NestedClassFolder' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir submodule> [collection]
      pytest_collectstart [hook]
          collector: <Dir submodule>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir submodule>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/ClassInheritDifferentModules.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/ClassInheritDifferentModules.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/ClassInheritDifferentModules.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/ClassInheritDifferentModules.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/TestFibonacci.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/TestFibonacci.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/TestFibonacci.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/TestFibonacci.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_comment_after_docstring.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_comment_after_docstring.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_comment_after_docstring.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_comment_after_docstring.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_docstring_no_newline.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_docstring_no_newline.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_docstring_no_newline.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_docstring_no_newline.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_after_equals.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_after_equals.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_after_equals.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_after_equals.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_empty_output.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_empty_output.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_empty_output.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_empty_output.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_in_comment.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_in_comment.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_in_comment.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_in_comment.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_in_input.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_in_input.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_in_input.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_in_input.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_in_output.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_in_output.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_in_output.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_in_output.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_in_output_multiple.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_in_output_multiple.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_in_output_multiple.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_ellipsis_in_output_multiple.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_empty_output.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_empty_output.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_empty_output.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_empty_output.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_docstring.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_docstring.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_docstring.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_docstring.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_input.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_input.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_input.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_input.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_input_parentheses.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_input_parentheses.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_input_parentheses.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_input_parentheses.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_output.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_output.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_output.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_output.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_spaces.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_spaces.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_spaces.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_no_spaces.m
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_with_tabs.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_with_tabs.m
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir submodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_with_tabs.m
            path: /home/remi-gau/github/matlabdomain/tests/test_data/submodule/f_with_tabs.m
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_data/submodule' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_data/submodule' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_data' lenresult=7 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir test_docs> [collection]
      pytest_collectstart [hook]
          collector: <Dir test_docs>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir test_docs>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_docs/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/test_docs/Makefile
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_docs>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_docs/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/test_docs/Makefile
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_docs/_build
            path: /home/remi-gau/github/matlabdomain/tests/test_docs/_build
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/test_docs/_build
            parent: <Dir test_docs>
        finish pytest_collect_directory --> <Dir _build> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_docs/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/test_docs/conf.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_docs>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_docs/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/test_docs/conf.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_docs/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/test_docs/index.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_docs>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_docs/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/test_docs/index.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_docs/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/test_docs/make.bat
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_docs>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_docs/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/test_docs/make.bat
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_docs' lenresult=1 outcome='passed'> [hook]
    genitems <Dir _build> [collection]
      pytest_collectstart [hook]
          collector: <Dir _build>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir _build>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_docs/_build/doctrees
            path: /home/remi-gau/github/matlabdomain/tests/test_docs/_build/doctrees
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/test_docs/_build/doctrees
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir doctrees> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_docs/_build/html
            path: /home/remi-gau/github/matlabdomain/tests/test_docs/_build/html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /home/remi-gau/github/matlabdomain/tests/test_docs/_build/html
            parent: <Dir _build>
        finish pytest_collect_directory --> <Dir html> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_docs/_build' lenresult=2 outcome='passed'> [hook]
    genitems <Dir doctrees> [collection]
      pytest_collectstart [hook]
          collector: <Dir doctrees>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir doctrees>
      finish pytest_make_collect_report --> <CollectReport 'tests/test_docs/_build/doctrees' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_docs/_build/doctrees' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir html> [collection]
      pytest_collectstart [hook]
          collector: <Dir html>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir html>
      finish pytest_make_collect_report --> <CollectReport 'tests/test_docs/_build/html' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_docs/_build/html' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_docs/_build' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_docs' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir test_docs_automodule> [collection]
      pytest_collectstart [hook]
          collector: <Dir test_docs_automodule>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir test_docs_automodule>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule/Makefile
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_docs_automodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule/Makefile
            path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule/Makefile
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule/conf.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_docs_automodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule/conf.py
            path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule/conf.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule/index.rst
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_docs_automodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule/index.rst
            path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule/index.rst
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            collection_path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule/make.bat
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_docs_automodule>
            file_path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule/make.bat
            path: /home/remi-gau/github/matlabdomain/tests/test_docs_automodule/make.bat
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_docs_automodule' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_docs_automodule' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_duplicated_link.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_duplicated_link.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_duplicated_link.py>
      find_module called for: test_duplicated_link [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_duplicated_link.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_duplicated_link.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_duplicated_link.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_duplicated_link.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_duplicated_link.py>
            name: pickle
            obj: <module 'pickle' from '/home/remi-gau/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/pickle.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_duplicated_link.py>
            name: sys
            obj: <module 'sys' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_duplicated_link.py>
            name: docutils
            obj: <module 'docutils' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/docutils/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_duplicated_link.py>
            name: helper
            obj: <module 'helper' from '/home/remi-gau/github/matlabdomain/tests/helper.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_duplicated_link.py>
            name: pytest
            obj: <module 'pytest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_duplicated_link.py>
            name: test_params
            obj: <pytest_fixture(<function test_params at 0x716ea8cca480>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_duplicated_link.py>
            name: make_app
            obj: <pytest_fixture(<function make_app at 0x716ea8cca700>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_duplicated_link.py>
            name: rootdir
            obj: <pytest_fixture(<function rootdir at 0x716ea9041440>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_duplicated_link.py>
            name: test_with_prefix
            obj: <function test_with_prefix at 0x716ea9042e80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8b4ec50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_with_prefix>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_duplicated_link.py>
            name: test_without_prefix
            obj: <function test_without_prefix at 0x716ea8ccb4c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8b4f2d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_without_prefix>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_duplicated_link.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function test_with_prefix> [collection]
      pytest_itemcollected [hook]
          item: <Function test_with_prefix>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_without_prefix> [collection]
      pytest_itemcollected [hook]
          item: <Function test_without_prefix>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_duplicated_link.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_lexer.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_lexer.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_lexer.py>
      find_module called for: test_lexer [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_lexer.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_lexer.py [assertion]
      early skip of rewriting module: sphinxcontrib.mat_lexer [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lexer.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lexer.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lexer.py>
            name: MatlabLexer
            obj: <class 'sphinxcontrib.mat_lexer.MatlabLexer'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lexer.py>
            name: Token
            obj: Token
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lexer.py>
            name: test_strings
            obj: <function test_strings at 0x716ea8b18680>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8b4fe50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_strings>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_lexer.py>
            name: test_function_names
            obj: <function test_function_names at 0x716ea8b180e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8b46b50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_function_names>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_lexer.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function test_strings> [collection]
      pytest_itemcollected [hook]
          item: <Function test_strings>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_function_names> [collection]
      pytest_itemcollected [hook]
          item: <Function test_function_names>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_lexer.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_matlabify.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_matlabify.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_matlabify.py>
      find_module called for: test_matlabify [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_matlabify.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_matlabify.py [assertion]
      early skip of rewriting module: sphinxcontrib.mat_documenters [assertion]
      early skip of rewriting module: sphinx.ext [assertion]
      early skip of rewriting module: sphinx.ext.autodoc [assertion]
      early skip of rewriting module: sphinx.ext.autodoc.importer [assertion]
      early skip of rewriting module: sphinx.ext.autodoc.mock [assertion]
      early skip of rewriting module: sphinx.util.docstrings [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: doc
            obj: <module 'sphinxcontrib.mat_documenters' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/sphinxcontrib/mat_documenters.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: entities_table
            obj: {}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: MatModule
            obj: <class 'sphinxcontrib.mat_types.MatModule'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: MatObject
            obj: <class 'sphinxcontrib.mat_types.MatObject'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: helper
            obj: <module 'helper' from '/home/remi-gau/github/matlabdomain/tests/helper.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: pytest
            obj: <module 'pytest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: test_params
            obj: <pytest_fixture(<function test_params at 0x716ea8cca480>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: make_app
            obj: <pytest_fixture(<function make_app at 0x716ea8cca700>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: rootdir
            obj: /home/remi-gau/github/matlabdomain/tests
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: matlab_src_dir
            obj: /home/remi-gau/github/matlabdomain/tests/test_data
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: app
            obj: <pytest_fixture(<function app at 0x716ea8b34f40>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: mod
            obj: <pytest_fixture(<function mod at 0x716ea8b363e0>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: test_unknown
            obj: <function test_unknown at 0x716ea8b35080>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bbc590>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_unknown>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: test_script
            obj: <function test_script at 0x716ea8bc18a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bbca10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_script>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: test_module
            obj: <function test_module at 0x716ea8bc0720>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bbd010>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_module>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: test_parse_twice
            obj: <function test_parse_twice at 0x716ea8bc1800>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bbd7d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_parse_twice>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: test_classes
            obj: <function test_classes at 0x716ea8bc2160>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bbdbd0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_classes>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: test_abstract_class
            obj: <function test_abstract_class at 0x716ea8bc2200>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bbe190>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_abstract_class>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: test_class_method
            obj: <function test_class_method at 0x716ea8bc22a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bbe750>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_class_method>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: test_submodule_class
            obj: <function test_submodule_class at 0x716ea8bc2340>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bbed50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_submodule_class>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: test_folder_class
            obj: <function test_folder_class at 0x716ea8bc23e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bbf3d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_folder_class>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: test_function
            obj: <function test_function at 0x716ea8bc2480>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bbfa90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_function>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: test_function_getter
            obj: <function test_function_getter at 0x716ea8bc2520>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bc40d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_function_getter>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: test_package_function
            obj: <function test_package_function at 0x716ea8bc25c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bc4750>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_package_function>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_matlabify.py>
            name: test_class_with_get_method
            obj: <function test_class_with_get_method at 0x716ea8bc2660>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bc4d90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_class_with_get_method>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_matlabify.py' lenresult=13 outcome='passed'> [hook]
    genitems <Function test_unknown> [collection]
      pytest_itemcollected [hook]
          item: <Function test_unknown>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_script> [collection]
      pytest_itemcollected [hook]
          item: <Function test_script>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_module> [collection]
      pytest_itemcollected [hook]
          item: <Function test_module>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_parse_twice> [collection]
      pytest_itemcollected [hook]
          item: <Function test_parse_twice>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_classes> [collection]
      pytest_itemcollected [hook]
          item: <Function test_classes>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_abstract_class> [collection]
      pytest_itemcollected [hook]
          item: <Function test_abstract_class>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_class_method> [collection]
      pytest_itemcollected [hook]
          item: <Function test_class_method>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_submodule_class> [collection]
      pytest_itemcollected [hook]
          item: <Function test_submodule_class>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_folder_class> [collection]
      pytest_itemcollected [hook]
          item: <Function test_folder_class>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_function> [collection]
      pytest_itemcollected [hook]
          item: <Function test_function>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_function_getter> [collection]
      pytest_itemcollected [hook]
          item: <Function test_function_getter>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_package_function> [collection]
      pytest_itemcollected [hook]
          item: <Function test_package_function>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_class_with_get_method> [collection]
      pytest_itemcollected [hook]
          item: <Function test_class_with_get_method>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_matlabify.py' lenresult=13 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_module_class_names.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_module_class_names.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_module_class_names.py>
      find_module called for: test_module_class_names [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_module_class_names.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_module_class_names.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_module_class_names.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_module_class_names.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_module_class_names.py>
            name: pickle
            obj: <module 'pickle' from '/home/remi-gau/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/pickle.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_module_class_names.py>
            name: sys
            obj: <module 'sys' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_module_class_names.py>
            name: pytest
            obj: <module 'pytest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_module_class_names.py>
            name: helper
            obj: <module 'helper' from '/home/remi-gau/github/matlabdomain/tests/helper.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_module_class_names.py>
            name: make_app
            obj: <pytest_fixture(<function make_app at 0x716ea8cca700>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_module_class_names.py>
            name: test_params
            obj: <pytest_fixture(<function test_params at 0x716ea8cca480>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_module_class_names.py>
            name: rootdir
            obj: <pytest_fixture(<function rootdir at 0x716ea8b1a5c0>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_module_class_names.py>
            name: test_index
            obj: <function test_index at 0x716ea8b1a480>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bc5f50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_index>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_module_class_names.py>
            name: test_index_auto_link_all
            obj: <function test_index_auto_link_all at 0x716ea8b189a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bc6450>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_index_auto_link_all>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_module_class_names.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function test_index> [collection]
      pytest_itemcollected [hook]
          item: <Function test_index>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_index_auto_link_all> [collection]
      pytest_itemcollected [hook]
          item: <Function test_index_auto_link_all>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_module_class_names.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_no_matlab_src_dir.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_no_matlab_src_dir.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_no_matlab_src_dir.py>
      find_module called for: test_no_matlab_src_dir [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_no_matlab_src_dir.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_no_matlab_src_dir.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_no_matlab_src_dir.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_no_matlab_src_dir.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_no_matlab_src_dir.py>
            name: pickle
            obj: <module 'pickle' from '/home/remi-gau/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/pickle.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_no_matlab_src_dir.py>
            name: sys
            obj: <module 'sys' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_no_matlab_src_dir.py>
            name: helper
            obj: <module 'helper' from '/home/remi-gau/github/matlabdomain/tests/helper.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_no_matlab_src_dir.py>
            name: pytest
            obj: <module 'pytest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_no_matlab_src_dir.py>
            name: make_app
            obj: <pytest_fixture(<function make_app at 0x716ea8cca700>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_no_matlab_src_dir.py>
            name: test_params
            obj: <pytest_fixture(<function test_params at 0x716ea8cca480>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_no_matlab_src_dir.py>
            name: rootdir
            obj: <pytest_fixture(<function rootdir at 0x716ea8ccbce0>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_no_matlab_src_dir.py>
            name: test_make
            obj: <function test_make at 0x716ea8ccbf60>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bc7550>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_make>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_no_matlab_src_dir.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_make> [collection]
      pytest_itemcollected [hook]
          item: <Function test_make>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_no_matlab_src_dir.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_numad.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_numad.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_numad.py>
      find_module called for: test_numad [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_numad.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_numad.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_numad.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_numad.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_numad.py>
            name: pickle
            obj: <module 'pickle' from '/home/remi-gau/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/pickle.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_numad.py>
            name: sys
            obj: <module 'sys' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_numad.py>
            name: helper
            obj: <module 'helper' from '/home/remi-gau/github/matlabdomain/tests/helper.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_numad.py>
            name: pytest
            obj: <module 'pytest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_numad.py>
            name: make_app
            obj: <pytest_fixture(<function make_app at 0x716ea8cca700>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_numad.py>
            name: test_params
            obj: <pytest_fixture(<function test_params at 0x716ea8cca480>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_numad.py>
            name: rootdir
            obj: <pytest_fixture(<function rootdir at 0x716ea8b36c00>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_numad.py>
            name: test_first
            obj: <function test_first at 0x716ea8b37240>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bc7dd0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_first>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_numad.py>
            name: test_second
            obj: <function test_second at 0x716ea8b34e00>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bc4c90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_second>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_numad.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function test_first> [collection]
      pytest_itemcollected [hook]
          item: <Function test_first>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_second> [collection]
      pytest_itemcollected [hook]
          item: <Function test_second>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_numad.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_package_links.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_package_links.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_package_links.py>
      find_module called for: test_package_links [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_package_links.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_package_links.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_links.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_links.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_links.py>
            name: pickle
            obj: <module 'pickle' from '/home/remi-gau/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/pickle.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_links.py>
            name: sys
            obj: <module 'sys' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_links.py>
            name: helper
            obj: <module 'helper' from '/home/remi-gau/github/matlabdomain/tests/helper.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_links.py>
            name: pytest
            obj: <module 'pytest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_links.py>
            name: test_params
            obj: <pytest_fixture(<function test_params at 0x716ea8cca480>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_links.py>
            name: make_app
            obj: <pytest_fixture(<function make_app at 0x716ea8cca700>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_links.py>
            name: rootdir
            obj: <pytest_fixture(<function rootdir at 0x716ea8b35620>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_links.py>
            name: test_with_prefix
            obj: <function test_with_prefix at 0x716ea8b34fe0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bdca10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_with_prefix>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_links.py>
            name: test_without_prefix
            obj: <function test_without_prefix at 0x716ea8b34ea0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bdce50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_without_prefix>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_package_links.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function test_with_prefix> [collection]
      pytest_itemcollected [hook]
          item: <Function test_with_prefix>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_without_prefix> [collection]
      pytest_itemcollected [hook]
          item: <Function test_without_prefix>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_package_links.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_package_prefix.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_package_prefix.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_package_prefix.py>
      find_module called for: test_package_prefix [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_package_prefix.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_package_prefix.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_prefix.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_prefix.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_prefix.py>
            name: pickle
            obj: <module 'pickle' from '/home/remi-gau/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/pickle.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_prefix.py>
            name: sys
            obj: <module 'sys' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_prefix.py>
            name: helper
            obj: <module 'helper' from '/home/remi-gau/github/matlabdomain/tests/helper.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_prefix.py>
            name: pytest
            obj: <module 'pytest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_prefix.py>
            name: addnodes
            obj: <module 'sphinx.addnodes' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/sphinx/addnodes.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_prefix.py>
            name: make_app
            obj: <pytest_fixture(<function make_app at 0x716ea8cca700>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_prefix.py>
            name: test_params
            obj: <pytest_fixture(<function test_params at 0x716ea8cca480>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_prefix.py>
            name: rootdir
            obj: <pytest_fixture(<function rootdir at 0x716ea8bc28e0>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_prefix.py>
            name: test_with_prefix
            obj: <function test_with_prefix at 0x716ea8bc2980>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bdda90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_with_prefix>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_package_prefix.py>
            name: test_without_prefix
            obj: <function test_without_prefix at 0x716ea8bc2a20>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bddcd0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_without_prefix>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_package_prefix.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function test_with_prefix> [collection]
      pytest_itemcollected [hook]
          item: <Function test_with_prefix>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_without_prefix> [collection]
      pytest_itemcollected [hook]
          item: <Function test_without_prefix>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_package_prefix.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_parse_mfile.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_parse_mfile.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_parse_mfile.py>
      find_module called for: test_parse_mfile [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_parse_mfile.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_parse_mfile.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: mat_types
            obj: <module 'sphinxcontrib.mat_types' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/sphinxcontrib/mat_types.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: os
            obj: <module 'os' (frozen)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: pytest
            obj: <module 'pytest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: DIRNAME
            obj: /home/remi-gau/github/matlabdomain/tests
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: TESTDATA_ROOT
            obj: /home/remi-gau/github/matlabdomain/tests/test_data
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: TESTDATA_SUB
            obj: /home/remi-gau/github/matlabdomain/tests/test_data/submodule
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassExample
            obj: <function test_ClassExample at 0x716ea8bc31a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bde210>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassExample>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_comment_after_docstring
            obj: <function test_comment_after_docstring at 0x716ea8bc3240>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8be8810>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_comment_after_docstring>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_docstring_no_newline
            obj: <function test_docstring_no_newline at 0x716ea8bc32e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8be8d90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_docstring_no_newline>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ellipsis_after_equals
            obj: <function test_ellipsis_after_equals at 0x716ea8bc3380>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8be9510>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ellipsis_after_equals>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ellipsis_empty_output
            obj: <function test_ellipsis_empty_output at 0x716ea8bc3420>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8be98d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ellipsis_empty_output>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ellipsis_in_comment
            obj: <function test_ellipsis_in_comment at 0x716ea8bc34c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8be9e50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ellipsis_in_comment>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ellipsis_in_output
            obj: <function test_ellipsis_in_output at 0x716ea8bc3560>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bea3d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ellipsis_in_output>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ellipsis_in_output_multiple
            obj: <function test_ellipsis_in_output_multiple at 0x716ea8bc3600>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bea950>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ellipsis_in_output_multiple>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_no_docstring
            obj: <function test_no_docstring at 0x716ea8bc36a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8beaf50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_no_docstring>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_no_output
            obj: <function test_no_output at 0x716ea8bc3740>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bddb10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_no_output>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_no_input_parentheses
            obj: <function test_no_input_parentheses at 0x716ea8bc37e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8be8810>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_no_input_parentheses>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_no_spaces
            obj: <function test_no_spaces at 0x716ea8bc3880>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8be9b50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_no_spaces>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_with_tabs
            obj: <function test_with_tabs at 0x716ea8bc3920>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8be9d90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_with_tabs>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithEndOfLineComment
            obj: <function test_ClassWithEndOfLineComment at 0x716ea8bc39c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bebb10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithEndOfLineComment>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithEvent
            obj: <function test_ClassWithEvent at 0x716ea8bc3a60>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bebdd0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithEvent>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithFunctionArguments
            obj: <function test_ClassWithFunctionArguments at 0x716ea8bc3b00>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bf40d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithFunctionArguments>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_EnumerationBool
            obj: <function test_EnumerationBool at 0x716ea8bc3ba0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bf4590>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_EnumerationBool>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_no_input_no_output_no_parentheses
            obj: <function test_no_input_no_output_no_parentheses at 0x716ea8bc3c40>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bf4b10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_no_input_no_output_no_parentheses>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_no_input_no_parentheses_no_docstring
            obj: <function test_no_input_no_parentheses_no_docstring at 0x716ea8bc3ce0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bf5090>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_no_input_no_parentheses_no_docstring>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithCommentHeader
            obj: <function test_ClassWithCommentHeader at 0x716ea8bc3d80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bf5610>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithCommentHeader>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_with_comment_header
            obj: <function test_with_comment_header at 0x716ea8bc3e20>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bf5b90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_with_comment_header>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_script_with_comment_header
            obj: <function test_script_with_comment_header at 0x716ea8bc3ec0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bf6110>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_script_with_comment_header>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_script_with_comment_header_2
            obj: <function test_script_with_comment_header_2 at 0x716ea8bc3f60>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bf6690>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_script_with_comment_header_2>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_script_with_comment_header_3
            obj: <function test_script_with_comment_header_3 at 0x716ea8bec040>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bf6c90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_script_with_comment_header_3>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_script_with_comment_header_4
            obj: <function test_script_with_comment_header_4 at 0x716ea8bec0e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bf72d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_script_with_comment_header_4>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_PropTypeOld
            obj: <function test_PropTypeOld at 0x716ea8bec180>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bf7910>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_PropTypeOld>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ValidateProps
            obj: <function test_ValidateProps at 0x716ea8bec220>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bf7f50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ValidateProps>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithMethodAttributes
            obj: <function test_ClassWithMethodAttributes at 0x716ea8bec2c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bfc5d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithMethodAttributes>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithPropertyAttributes
            obj: <function test_ClassWithPropertyAttributes at 0x716ea8bec360>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bfce50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithPropertyAttributes>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithoutIndent
            obj: <function test_ClassWithoutIndent at 0x716ea8bec400>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bfd2d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithoutIndent>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_f_with_utf8
            obj: <function test_f_with_utf8 at 0x716ea8bec4a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bfd890>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_f_with_utf8>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_file_parsing_encoding_can_be_specified
            obj: <function test_file_parsing_encoding_can_be_specified at 0x716ea8bec540>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bfded0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_file_parsing_encoding_can_be_specified>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_file_parsing_with_no_encoding_specified
            obj: <function test_file_parsing_with_no_encoding_specified at 0x716ea8bec5e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bfe510>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_file_parsing_with_no_encoding_specified>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithBuiltinOverload
            obj: <function test_ClassWithBuiltinOverload at 0x716ea8bec680>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bfeb50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithBuiltinOverload>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithBuiltinProperties
            obj: <function test_ClassWithBuiltinProperties at 0x716ea8bec720>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bf7c50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithBuiltinProperties>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_f_with_name_mismatch
            obj: <function test_f_with_name_mismatch at 0x716ea8bec7c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bf7590>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_f_with_name_mismatch>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_f_with_dummy_argument
            obj: <function test_f_with_dummy_argument at 0x716ea8bec860>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bf5890>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_f_with_dummy_argument>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_f_with_string_ellipsis
            obj: <function test_f_with_string_ellipsis at 0x716ea8bec900>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bebd90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_f_with_string_ellipsis>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithFunctionVariable
            obj: <function test_ClassWithFunctionVariable at 0x716ea8bec9a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bfded0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithFunctionVariable>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_f_inputargs_error
            obj: <function test_f_inputargs_error at 0x716ea8beca40>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bfe810>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_f_inputargs_error>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithErrors
            obj: <function test_ClassWithErrors at 0x716ea8becae0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bfd950>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithErrors>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithLineContinuation
            obj: <function test_ClassWithLineContinuation at 0x716ea8becb80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bfccd0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithLineContinuation>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithNameMismatch
            obj: <function test_ClassWithNameMismatch at 0x716ea8becc20>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bff2d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithNameMismatch>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithAttributes
            obj: <function test_ClassWithAttributes at 0x716ea8beccc0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bff810>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithAttributes>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithUnknownAttributes
            obj: <function test_ClassWithUnknownAttributes at 0x716ea8becd60>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bffd90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithUnknownAttributes>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithEnumMethod
            obj: <function test_ClassWithEnumMethod at 0x716ea8bece00>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c08310>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithEnumMethod>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithEventMethod
            obj: <function test_ClassWithEventMethod at 0x716ea8becea0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c08850>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithEventMethod>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_f_with_function_variable
            obj: <function test_f_with_function_variable at 0x716ea8becf40>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c08890>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_f_with_function_variable>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithGetterSetter
            obj: <function test_ClassWithGetterSetter at 0x716ea8becfe0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c09390>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithGetterSetter>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithDoubleQuotedString
            obj: <function test_ClassWithDoubleQuotedString at 0x716ea8bed080>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c09910>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithDoubleQuotedString>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithStrings
            obj: <function test_ClassWithStrings at 0x716ea8bed120>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c09e90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithStrings>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithDummyArguments
            obj: <function test_ClassWithDummyArguments at 0x716ea8bed1c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c0a410>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithDummyArguments>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassFolderClassdef
            obj: <function test_ClassFolderClassdef at 0x716ea8bed260>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c0a990>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassFolderClassdef>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithMethodsWithSpaces
            obj: <function test_ClassWithMethodsWithSpaces at 0x716ea8bed300>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c0af10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithMethodsWithSpaces>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassContainingParfor
            obj: <function test_ClassContainingParfor at 0x716ea8bed3a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c0b490>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassContainingParfor>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithStringEllipsis
            obj: <function test_ClassWithStringEllipsis at 0x716ea8bed440>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c0ba10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithStringEllipsis>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassLongProperty
            obj: <function test_ClassLongProperty at 0x716ea8bed4e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c0bf90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassLongProperty>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithLongPropertyDocstrings
            obj: <function test_ClassWithLongPropertyDocstrings at 0x716ea8bed580>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c10550>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithLongPropertyDocstrings>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithLongPropertyTrailingEmptyDocstrings
            obj: <function test_ClassWithLongPropertyTrailingEmptyDocstrings at 0x716ea8bed620>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c10b10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithLongPropertyTrailingEmptyDocstrings>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithPropertyValidators
            obj: <function test_ClassWithPropertyValidators at 0x716ea8bed6c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c11150>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithPropertyValidators>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithTrailingCommentAfterBases
            obj: <function test_ClassWithTrailingCommentAfterBases at 0x716ea8bed760>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c0af10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithTrailingCommentAfterBases>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithEllipsisProperties
            obj: <function test_ClassWithEllipsisProperties at 0x716ea8bed800>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c0b950>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithEllipsisProperties>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithTrailingSemicolons
            obj: <function test_ClassWithTrailingSemicolons at 0x716ea8bed8a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c0b210>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithTrailingSemicolons>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithSeperatedComments
            obj: <function test_ClassWithSeperatedComments at 0x716ea8bed940>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c0a910>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithSeperatedComments>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithKeywordsAsFieldnames
            obj: <function test_ClassWithKeywordsAsFieldnames at 0x716ea8bed9e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c0a150>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithKeywordsAsFieldnames>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithNamedAsArguments
            obj: <function test_ClassWithNamedAsArguments at 0x716ea8beda80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c092d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithNamedAsArguments>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithPropertyCellValues
            obj: <function test_ClassWithPropertyCellValues at 0x716ea8bedb20>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bff550>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithPropertyCellValues>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_ClassWithTests
            obj: <function test_ClassWithTests at 0x716ea8bedbc0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8bf7610>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ClassWithTests>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_f_with_input_argument_block
            obj: <function test_f_with_input_argument_block at 0x716ea8bedc60>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c102d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_f_with_input_argument_block>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mfile.py>
            name: test_f_with_output_argument_block
            obj: <function test_f_with_output_argument_block at 0x716ea8bedd00>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c11c50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_f_with_output_argument_block>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_parse_mfile.py' lenresult=70 outcome='passed'> [hook]
    genitems <Function test_ClassExample> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassExample>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_comment_after_docstring> [collection]
      pytest_itemcollected [hook]
          item: <Function test_comment_after_docstring>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_docstring_no_newline> [collection]
      pytest_itemcollected [hook]
          item: <Function test_docstring_no_newline>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ellipsis_after_equals> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ellipsis_after_equals>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ellipsis_empty_output> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ellipsis_empty_output>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ellipsis_in_comment> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ellipsis_in_comment>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ellipsis_in_output> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ellipsis_in_output>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ellipsis_in_output_multiple> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ellipsis_in_output_multiple>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_no_docstring> [collection]
      pytest_itemcollected [hook]
          item: <Function test_no_docstring>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_no_output> [collection]
      pytest_itemcollected [hook]
          item: <Function test_no_output>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_no_input_parentheses> [collection]
      pytest_itemcollected [hook]
          item: <Function test_no_input_parentheses>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_no_spaces> [collection]
      pytest_itemcollected [hook]
          item: <Function test_no_spaces>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_with_tabs> [collection]
      pytest_itemcollected [hook]
          item: <Function test_with_tabs>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithEndOfLineComment> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithEndOfLineComment>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithEvent> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithEvent>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithFunctionArguments> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithFunctionArguments>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_EnumerationBool> [collection]
      pytest_itemcollected [hook]
          item: <Function test_EnumerationBool>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_no_input_no_output_no_parentheses> [collection]
      pytest_itemcollected [hook]
          item: <Function test_no_input_no_output_no_parentheses>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_no_input_no_parentheses_no_docstring> [collection]
      pytest_itemcollected [hook]
          item: <Function test_no_input_no_parentheses_no_docstring>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithCommentHeader> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithCommentHeader>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_with_comment_header> [collection]
      pytest_itemcollected [hook]
          item: <Function test_with_comment_header>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_script_with_comment_header> [collection]
      pytest_itemcollected [hook]
          item: <Function test_script_with_comment_header>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_script_with_comment_header_2> [collection]
      pytest_itemcollected [hook]
          item: <Function test_script_with_comment_header_2>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_script_with_comment_header_3> [collection]
      pytest_itemcollected [hook]
          item: <Function test_script_with_comment_header_3>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_script_with_comment_header_4> [collection]
      pytest_itemcollected [hook]
          item: <Function test_script_with_comment_header_4>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_PropTypeOld> [collection]
      pytest_itemcollected [hook]
          item: <Function test_PropTypeOld>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ValidateProps> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ValidateProps>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithMethodAttributes> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithMethodAttributes>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithPropertyAttributes> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithPropertyAttributes>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithoutIndent> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithoutIndent>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_f_with_utf8> [collection]
      pytest_itemcollected [hook]
          item: <Function test_f_with_utf8>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_file_parsing_encoding_can_be_specified> [collection]
      pytest_itemcollected [hook]
          item: <Function test_file_parsing_encoding_can_be_specified>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_file_parsing_with_no_encoding_specified> [collection]
      pytest_itemcollected [hook]
          item: <Function test_file_parsing_with_no_encoding_specified>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithBuiltinOverload> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithBuiltinOverload>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithBuiltinProperties> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithBuiltinProperties>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_f_with_name_mismatch> [collection]
      pytest_itemcollected [hook]
          item: <Function test_f_with_name_mismatch>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_f_with_dummy_argument> [collection]
      pytest_itemcollected [hook]
          item: <Function test_f_with_dummy_argument>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_f_with_string_ellipsis> [collection]
      pytest_itemcollected [hook]
          item: <Function test_f_with_string_ellipsis>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithFunctionVariable> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithFunctionVariable>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_f_inputargs_error> [collection]
      pytest_itemcollected [hook]
          item: <Function test_f_inputargs_error>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithErrors> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithErrors>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithLineContinuation> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithLineContinuation>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithNameMismatch> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithNameMismatch>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithAttributes> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithAttributes>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithUnknownAttributes> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithUnknownAttributes>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithEnumMethod> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithEnumMethod>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithEventMethod> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithEventMethod>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_f_with_function_variable> [collection]
      pytest_itemcollected [hook]
          item: <Function test_f_with_function_variable>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithGetterSetter> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithGetterSetter>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithDoubleQuotedString> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithDoubleQuotedString>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithStrings> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithStrings>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithDummyArguments> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithDummyArguments>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassFolderClassdef> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassFolderClassdef>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithMethodsWithSpaces> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithMethodsWithSpaces>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassContainingParfor> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassContainingParfor>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithStringEllipsis> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithStringEllipsis>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassLongProperty> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassLongProperty>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithLongPropertyDocstrings> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithLongPropertyDocstrings>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithLongPropertyTrailingEmptyDocstrings> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithLongPropertyTrailingEmptyDocstrings>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithPropertyValidators> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithPropertyValidators>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithTrailingCommentAfterBases> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithTrailingCommentAfterBases>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithEllipsisProperties> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithEllipsisProperties>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithTrailingSemicolons> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithTrailingSemicolons>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithSeperatedComments> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithSeperatedComments>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithKeywordsAsFieldnames> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithKeywordsAsFieldnames>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithNamedAsArguments> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithNamedAsArguments>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithPropertyCellValues> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithPropertyCellValues>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_ClassWithTests> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ClassWithTests>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_f_with_input_argument_block> [collection]
      pytest_itemcollected [hook]
          item: <Function test_f_with_input_argument_block>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_f_with_output_argument_block> [collection]
      pytest_itemcollected [hook]
          item: <Function test_f_with_output_argument_block>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_parse_mfile.py' lenresult=70 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_parse_mlappfile.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_parse_mlappfile.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_parse_mlappfile.py>
      find_module called for: test_parse_mlappfile [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_parse_mlappfile.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_parse_mlappfile.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mlappfile.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mlappfile.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mlappfile.py>
            name: mat_types
            obj: <module 'sphinxcontrib.mat_types' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/sphinxcontrib/mat_types.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mlappfile.py>
            name: os
            obj: <module 'os' (frozen)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mlappfile.py>
            name: pytest
            obj: <module 'pytest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mlappfile.py>
            name: DIRNAME
            obj: /home/remi-gau/github/matlabdomain/tests
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mlappfile.py>
            name: TESTDATA_ROOT
            obj: /home/remi-gau/github/matlabdomain/tests/test_data
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mlappfile.py>
            name: TESTDATA_SUB
            obj: /home/remi-gau/github/matlabdomain/tests/test_data/submodule
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_parse_mlappfile.py>
            name: test_Application
            obj: <function test_Application at 0x716ea8bee0c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c12710>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_Application>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_parse_mlappfile.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_Application> [collection]
      pytest_itemcollected [hook]
          item: <Function test_Application>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_parse_mlappfile.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_pymat.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_pymat.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_pymat.py>
      find_module called for: test_pymat [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_pymat.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_pymat.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat.py>
            name: pickle
            obj: <module 'pickle' from '/home/remi-gau/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/pickle.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat.py>
            name: sys
            obj: <module 'sys' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat.py>
            name: helper
            obj: <module 'helper' from '/home/remi-gau/github/matlabdomain/tests/helper.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat.py>
            name: pytest
            obj: <module 'pytest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat.py>
            name: addnodes
            obj: <module 'sphinx.addnodes' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/sphinx/addnodes.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat.py>
            name: make_app
            obj: <pytest_fixture(<function make_app at 0x716ea8cca700>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat.py>
            name: test_params
            obj: <pytest_fixture(<function test_params at 0x716ea8cca480>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat.py>
            name: rootdir
            obj: <pytest_fixture(<function rootdir at 0x716ea8bee200>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat.py>
            name: test_setup
            obj: <function test_setup at 0x716ea8bee660>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8c135d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_setup>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_pymat.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_setup> [collection]
      pytest_itemcollected [hook]
          item: <Function test_setup>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_pymat.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_pymat_common_root.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_pymat_common_root.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_pymat_common_root.py>
      find_module called for: test_pymat_common_root [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_pymat_common_root.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_pymat_common_root.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat_common_root.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat_common_root.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat_common_root.py>
            name: pickle
            obj: <module 'pickle' from '/home/remi-gau/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/pickle.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat_common_root.py>
            name: sys
            obj: <module 'sys' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat_common_root.py>
            name: helper
            obj: <module 'helper' from '/home/remi-gau/github/matlabdomain/tests/helper.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat_common_root.py>
            name: pytest
            obj: <module 'pytest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat_common_root.py>
            name: addnodes
            obj: <module 'sphinx.addnodes' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/sphinx/addnodes.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat_common_root.py>
            name: make_app
            obj: <pytest_fixture(<function make_app at 0x716ea8cca700>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat_common_root.py>
            name: test_params
            obj: <pytest_fixture(<function test_params at 0x716ea8cca480>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat_common_root.py>
            name: rootdir
            obj: <pytest_fixture(<function rootdir at 0x716ea8bee160>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_pymat_common_root.py>
            name: test_setup
            obj: <function test_setup at 0x716ea8bee2a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8a1c0d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_setup>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_pymat_common_root.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_setup> [collection]
      pytest_itemcollected [hook]
          item: <Function test_setup>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_pymat_common_root.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_shortest_name.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_shortest_name.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_shortest_name.py>
      find_module called for: test_shortest_name [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_shortest_name.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_shortest_name.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_shortest_name.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_shortest_name.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_shortest_name.py>
            name: shortest_name
            obj: <function shortest_name at 0x716ea8ccbe20>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_shortest_name.py>
            name: test_no_alternative
            obj: <function test_no_alternative at 0x716ea8bedf80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8a1cd90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_no_alternative>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_shortest_name.py>
            name: test_packages
            obj: <function test_packages at 0x716ea8bee5c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8a1d090>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_packages>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_shortest_name.py>
            name: test_folders
            obj: <function test_folders at 0x716ea8bee520>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8a1d610>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_folders>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_shortest_name.py>
            name: test_weird
            obj: <function test_weird at 0x716ea8bedda0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8a1de10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_weird>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_shortest_name.py>
            name: test_classfolders
            obj: <function test_classfolders at 0x716ea8bee700>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8a1e150>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_classfolders>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_shortest_name.py' lenresult=5 outcome='passed'> [hook]
    genitems <Function test_no_alternative> [collection]
      pytest_itemcollected [hook]
          item: <Function test_no_alternative>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_packages> [collection]
      pytest_itemcollected [hook]
          item: <Function test_packages>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_folders> [collection]
      pytest_itemcollected [hook]
          item: <Function test_folders>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_weird> [collection]
      pytest_itemcollected [hook]
          item: <Function test_weird>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_classfolders> [collection]
      pytest_itemcollected [hook]
          item: <Function test_classfolders>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_shortest_name.py' lenresult=5 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_skipping_module_members.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_skipping_module_members.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_skipping_module_members.py>
      find_module called for: test_skipping_module_members [assertion]
      matched test file '/home/remi-gau/github/matlabdomain/tests/test_skipping_module_members.py' [assertion]
      found cached rewritten pyc for /home/remi-gau/github/matlabdomain/tests/test_skipping_module_members.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_skipping_module_members.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_skipping_module_members.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_skipping_module_members.py>
            name: pickle
            obj: <module 'pickle' from '/home/remi-gau/.local/share/uv/python/cpython-3.11.12-linux-x86_64-gnu/lib/python3.11/pickle.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_skipping_module_members.py>
            name: sys
            obj: <module 'sys' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_skipping_module_members.py>
            name: helper
            obj: <module 'helper' from '/home/remi-gau/github/matlabdomain/tests/helper.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_skipping_module_members.py>
            name: pytest
            obj: <module 'pytest' from '/home/remi-gau/github/matlabdomain/.tox/py311-sphinxlatest/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_skipping_module_members.py>
            name: make_app
            obj: <pytest_fixture(<function make_app at 0x716ea8cca700>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_skipping_module_members.py>
            name: test_params
            obj: <pytest_fixture(<function test_params at 0x716ea8cca480>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_skipping_module_members.py>
            name: rootdir
            obj: <pytest_fixture(<function rootdir at 0x716ea8bee980>)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_skipping_module_members.py>
            name: test_setup
            obj: <function test_setup at 0x716ea8beea20>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x716ea8a1f010>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_setup>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_skipping_module_members.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_setup> [collection]
      pytest_itemcollected [hook]
          item: <Function test_setup>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_skipping_module_members.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests' lenresult=23 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x716ea99eebd0>
          items: [<Function test_target>, <Function test_target_show_default_value>, <Function test_target_auto_link_basic>, <Function test_target_auto_link_all>, <Function test_classfolder>, <Function test_package>, <Function test_package_show_default_value>, <Function test_package_auto_link_all>, <Function test_submodule>, <Function test_submodule_show_default_value>, <Function test_root>, <Function test_root_relative_matlab_src_dir>, <Function test_root_show_default_value>, <Function test_root_auto_link_basic>, <Function test_root_class_signature>, <Function test_target[False-False]>, <Function test_target[False-True]>, <Function test_target[True-False]>, <Function test_target[True-True]>, <Function test_target>, <Function test_target_show_default_value>, <Function test_target_auto_link_basic>, <Function test_target_auto_link_all>, <Function test_classfolder>, <Function test_package>, <Function test_package_show_default_value>, <Function test_package_auto_link_all>, <Function test_submodule>, <Function test_submodule_show_default_value>, <Function test_root>, <Function test_root_show_default_value>, <Function test_root_auto_link_basic>, <Function test_first>, <Function test_second>, <Function test_third>, <Function test_classfolders>, <Function test_with_prefix>, <Function test_without_prefix>, <Function test_strings>, <Function test_function_names>, <Function test_unknown>, <Function test_script>, <Function test_module>, <Function test_parse_twice>, <Function test_classes>, <Function test_abstract_class>, <Function test_class_method>, <Function test_submodule_class>, <Function test_folder_class>, <Function test_function>, <Function test_function_getter>, <Function test_package_function>, <Function test_class_with_get_method>, <Function test_index>, <Function test_index_auto_link_all>, <Function test_make>, <Function test_first>, <Function test_second>, <Function test_with_prefix>, <Function test_without_prefix>, <Function test_with_prefix>, <Function test_without_prefix>, <Function test_ClassExample>, <Function test_comment_after_docstring>, <Function test_docstring_no_newline>, <Function test_ellipsis_after_equals>, <Function test_ellipsis_empty_output>, <Function test_ellipsis_in_comment>, <Function test_ellipsis_in_output>, <Function test_ellipsis_in_output_multiple>, <Function test_no_docstring>, <Function test_no_output>, <Function test_no_input_parentheses>, <Function test_no_spaces>, <Function test_with_tabs>, <Function test_ClassWithEndOfLineComment>, <Function test_ClassWithEvent>, <Function test_ClassWithFunctionArguments>, <Function test_EnumerationBool>, <Function test_no_input_no_output_no_parentheses>, <Function test_no_input_no_parentheses_no_docstring>, <Function test_ClassWithCommentHeader>, <Function test_with_comment_header>, <Function test_script_with_comment_header>, <Function test_script_with_comment_header_2>, <Function test_script_with_comment_header_3>, <Function test_script_with_comment_header_4>, <Function test_PropTypeOld>, <Function test_ValidateProps>, <Function test_ClassWithMethodAttributes>, <Function test_ClassWithPropertyAttributes>, <Function test_ClassWithoutIndent>, <Function test_f_with_utf8>, <Function test_file_parsing_encoding_can_be_specified>, <Function test_file_parsing_with_no_encoding_specified>, <Function test_ClassWithBuiltinOverload>, <Function test_ClassWithBuiltinProperties>, <Function test_f_with_name_mismatch>, <Function test_f_with_dummy_argument>, <Function test_f_with_string_ellipsis>, <Function test_ClassWithFunctionVariable>, <Function test_f_inputargs_error>, <Function test_ClassWithErrors>, <Function test_ClassWithLineContinuation>, <Function test_ClassWithNameMismatch>, <Function test_ClassWithAttributes>, <Function test_ClassWithUnknownAttributes>, <Function test_ClassWithEnumMethod>, <Function test_ClassWithEventMethod>, <Function test_f_with_function_variable>, <Function test_ClassWithGetterSetter>, <Function test_ClassWithDoubleQuotedString>, <Function test_ClassWithStrings>, <Function test_ClassWithDummyArguments>, <Function test_ClassFolderClassdef>, <Function test_ClassWithMethodsWithSpaces>, <Function test_ClassContainingParfor>, <Function test_ClassWithStringEllipsis>, <Function test_ClassLongProperty>, <Function test_ClassWithLongPropertyDocstrings>, <Function test_ClassWithLongPropertyTrailingEmptyDocstrings>, <Function test_ClassWithPropertyValidators>, <Function test_ClassWithTrailingCommentAfterBases>, <Function test_ClassWithEllipsisProperties>, <Function test_ClassWithTrailingSemicolons>, <Function test_ClassWithSeperatedComments>, <Function test_ClassWithKeywordsAsFieldnames>, <Function test_ClassWithNamedAsArguments>, <Function test_ClassWithPropertyCellValues>, <Function test_ClassWithTests>, <Function test_f_with_input_argument_block>, <Function test_f_with_output_argument_block>, <Function test_Application>, <Function test_setup>, <Function test_setup>, <Function test_no_alternative>, <Function test_packages>, <Function test_folders>, <Function test_weird>, <Function test_classfolders>, <Function test_setup>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x716ea99eebd0>
            items: [<Function test_target>, <Function test_target_show_default_value>, <Function test_target_auto_link_basic>, <Function test_target_auto_link_all>, <Function test_classfolder>, <Function test_package>, <Function test_package_show_default_value>, <Function test_package_auto_link_all>, <Function test_submodule>, <Function test_submodule_show_default_value>, <Function test_root>, <Function test_root_relative_matlab_src_dir>, <Function test_root_show_default_value>, <Function test_root_auto_link_basic>, <Function test_root_class_signature>, <Function test_target[False-False]>, <Function test_target[False-True]>, <Function test_target[True-False]>, <Function test_target[True-True]>, <Function test_target>, <Function test_target_show_default_value>, <Function test_target_auto_link_basic>, <Function test_target_auto_link_all>, <Function test_classfolder>, <Function test_package>, <Function test_package_show_default_value>, <Function test_package_auto_link_all>, <Function test_submodule>, <Function test_submodule_show_default_value>, <Function test_root>, <Function test_root_show_default_value>, <Function test_root_auto_link_basic>, <Function test_first>, <Function test_second>, <Function test_third>, <Function test_classfolders>, <Function test_with_prefix>, <Function test_without_prefix>, <Function test_strings>, <Function test_function_names>, <Function test_unknown>, <Function test_script>, <Function test_module>, <Function test_parse_twice>, <Function test_classes>, <Function test_abstract_class>, <Function test_class_method>, <Function test_submodule_class>, <Function test_folder_class>, <Function test_function>, <Function test_function_getter>, <Function test_package_function>, <Function test_class_with_get_method>, <Function test_index>, <Function test_index_auto_link_all>, <Function test_make>, <Function test_first>, <Function test_second>, <Function test_with_prefix>, <Function test_without_prefix>, <Function test_with_prefix>, <Function test_without_prefix>, <Function test_ClassExample>, <Function test_comment_after_docstring>, <Function test_docstring_no_newline>, <Function test_ellipsis_after_equals>, <Function test_ellipsis_empty_output>, <Function test_ellipsis_in_comment>, <Function test_ellipsis_in_output>, <Function test_ellipsis_in_output_multiple>, <Function test_no_docstring>, <Function test_no_output>, <Function test_no_input_parentheses>, <Function test_no_spaces>, <Function test_with_tabs>, <Function test_ClassWithEndOfLineComment>, <Function test_ClassWithEvent>, <Function test_ClassWithFunctionArguments>, <Function test_EnumerationBool>, <Function test_no_input_no_output_no_parentheses>, <Function test_no_input_no_parentheses_no_docstring>, <Function test_ClassWithCommentHeader>, <Function test_with_comment_header>, <Function test_script_with_comment_header>, <Function test_script_with_comment_header_2>, <Function test_script_with_comment_header_3>, <Function test_script_with_comment_header_4>, <Function test_PropTypeOld>, <Function test_ValidateProps>, <Function test_ClassWithMethodAttributes>, <Function test_ClassWithPropertyAttributes>, <Function test_ClassWithoutIndent>, <Function test_f_with_utf8>, <Function test_file_parsing_encoding_can_be_specified>, <Function test_file_parsing_with_no_encoding_specified>, <Function test_ClassWithBuiltinOverload>, <Function test_ClassWithBuiltinProperties>, <Function test_f_with_name_mismatch>, <Function test_f_with_dummy_argument>, <Function test_f_with_string_ellipsis>, <Function test_ClassWithFunctionVariable>, <Function test_f_inputargs_error>, <Function test_ClassWithErrors>, <Function test_ClassWithLineContinuation>, <Function test_ClassWithNameMismatch>, <Function test_ClassWithAttributes>, <Function test_ClassWithUnknownAttributes>, <Function test_ClassWithEnumMethod>, <Function test_ClassWithEventMethod>, <Function test_f_with_function_variable>, <Function test_ClassWithGetterSetter>, <Function test_ClassWithDoubleQuotedString>, <Function test_ClassWithStrings>, <Function test_ClassWithDummyArguments>, <Function test_ClassFolderClassdef>, <Function test_ClassWithMethodsWithSpaces>, <Function test_ClassContainingParfor>, <Function test_ClassWithStringEllipsis>, <Function test_ClassLongProperty>, <Function test_ClassWithLongPropertyDocstrings>, <Function test_ClassWithLongPropertyTrailingEmptyDocstrings>, <Function test_ClassWithPropertyValidators>, <Function test_ClassWithTrailingCommentAfterBases>, <Function test_ClassWithEllipsisProperties>, <Function test_ClassWithTrailingSemicolons>, <Function test_ClassWithSeperatedComments>, <Function test_ClassWithKeywordsAsFieldnames>, <Function test_ClassWithNamedAsArguments>, <Function test_ClassWithPropertyCellValues>, <Function test_ClassWithTests>, <Function test_f_with_input_argument_block>, <Function test_f_with_output_argument_block>, <Function test_Application>, <Function test_setup>, <Function test_setup>, <Function test_no_alternative>, <Function test_packages>, <Function test_folders>, <Function test_weird>, <Function test_classfolders>, <Function test_setup>]
            start_path: /home/remi-gau/github/matlabdomain
            startdir: /home/remi-gau/github/matlabdomain
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=141>
      pytest_runtest_protocol [hook]
          item: <Function test_target>
          nextitem: <Function test_target_show_default_value>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc.py::test_target
            location: ('tests/test_autodoc.py', 22, 'test_target')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_target>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'rootdir' for <Function test_target>>
          finish pytest_fixture_setup --> /home/remi-gau/github/matlabdomain/tests [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_target>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_target>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea8beee80> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_target' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_target' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_target' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_target>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_target>
          early skip of rewriting module: sphinx.builders [assertion]
          early skip of rewriting module: sphinx.environment.adapters.asset [assertion]
          early skip of rewriting module: sphinx.util._importer [assertion]
          early skip of rewriting module: sphinx.util.parallel [assertion]
          early skip of rewriting module: sphinx.builders.changes [assertion]
          early skip of rewriting module: html [assertion]
          early skip of rewriting module: html.entities [assertion]
          early skip of rewriting module: sphinx.theming [assertion]
          early skip of rewriting module: sphinx.util.fileutil [assertion]
          early skip of rewriting module: sphinx.builders.epub3 [assertion]
          early skip of rewriting module: sphinx.builders._epub_base [assertion]
          early skip of rewriting module: sphinx.builders.html [assertion]
          early skip of rewriting module: sphinx.builders.html._assets [assertion]
          early skip of rewriting module: sphinx.builders.html._build_info [assertion]
          early skip of rewriting module: sphinx.environment.adapters.indexentries [assertion]
          early skip of rewriting module: sphinx.search [assertion]
          early skip of rewriting module: sphinx.search.en [assertion]
          early skip of rewriting module: snowballstemmer [assertion]
          early skip of rewriting module: snowballstemmer.arabic_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.basestemmer [assertion]
          early skip of rewriting module: snowballstemmer.among [assertion]
          early skip of rewriting module: snowballstemmer.armenian_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.basque_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.catalan_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.danish_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.dutch_porter_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.dutch_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.english_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.esperanto_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.estonian_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.finnish_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.french_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.german_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.greek_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.hindi_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.hungarian_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.indonesian_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.irish_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.italian_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.lithuanian_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.nepali_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.norwegian_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.porter_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.portuguese_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.romanian_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.russian_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.serbian_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.spanish_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.swedish_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.tamil_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.turkish_stemmer [assertion]
          early skip of rewriting module: snowballstemmer.yiddish_stemmer [assertion]
          early skip of rewriting module: Stemmer [assertion]
          early skip of rewriting module: sphinx.util._uri [assertion]
          early skip of rewriting module: sphinx.util.inventory [assertion]
          early skip of rewriting module: sphinx.writers [assertion]
          early skip of rewriting module: sphinx.writers.html [assertion]
          early skip of rewriting module: docutils.writers.html4css1 [assertion]
          early skip of rewriting module: docutils.writers._html_base [assertion]
          early skip of rewriting module: mimetypes [assertion]
          early skip of rewriting module: _winapi [assertion]
          early skip of rewriting module: winreg [assertion]
          early skip of rewriting module: docutils.parsers.rst.directives.images [assertion]
          early skip of rewriting module: urllib.request [assertion]
          early skip of rewriting module: http [assertion]
          early skip of rewriting module: http.client [assertion]
          early skip of rewriting module: ssl [assertion]
          early skip of rewriting module: _ssl [assertion]
          early skip of rewriting module: urllib.error [assertion]
          early skip of rewriting module: urllib.response [assertion]
          early skip of rewriting module: PIL [assertion]
          early skip of rewriting module: Image [assertion]
          early skip of rewriting module: docutils.transforms.writer_aux [assertion]
          early skip of rewriting module: docutils.utils.math [assertion]
          early skip of rewriting module: docutils.utils.math.latex2mathml [assertion]
          early skip of rewriting module: docutils.utils.math.mathalphabet2unichar [assertion]
          early skip of rewriting module: docutils.utils.math.tex2unichar [assertion]
          early skip of rewriting module: docutils.utils.math.mathml_elements [assertion]
          early skip of rewriting module: docutils.utils.math.math2html [assertion]
          early skip of rewriting module: docutils.utils.math.tex2mathml_extern [assertion]
          early skip of rewriting module: docutils.utils.math.unichar2tex [assertion]
          early skip of rewriting module: sphinx.writers.html5 [assertion]
          early skip of rewriting module: docutils.writers.html5_polyglot [assertion]
          early skip of rewriting module: sphinx.util.images [assertion]
          early skip of rewriting module: imagesize [assertion]
          early skip of rewriting module: imagesize.imagesize [assertion]
          early skip of rewriting module: PIL [assertion]
          early skip of rewriting module: PIL [assertion]
          early skip of rewriting module: sphinx.builders.dirhtml [assertion]
          early skip of rewriting module: sphinx.ext.mathjax [assertion]
          early skip of rewriting module: sphinx.util.math [assertion]
          early skip of rewriting module: sphinx.builders.dummy [assertion]
          early skip of rewriting module: sphinx.builders.gettext [assertion]
          early skip of rewriting module: sphinx.util.template [assertion]
          early skip of rewriting module: jinja2.sandbox [assertion]
          early skip of rewriting module: sphinx.jinja2glue [assertion]
          early skip of rewriting module: sphinx.builders.latex [assertion]
          early skip of rewriting module: sphinx.builders.latex.nodes [assertion]
          early skip of rewriting module: sphinx.builders.latex.constants [assertion]
          early skip of rewriting module: sphinx.builders.latex.theming [assertion]
          early skip of rewriting module: sphinx.builders.latex.util [assertion]
          early skip of rewriting module: docutils.writers.latex2e [assertion]
          early skip of rewriting module: roman [assertion]
          early skip of rewriting module: sphinx.writers.latex [assertion]
          early skip of rewriting module: roman_numerals [assertion]
          early skip of rewriting module: sphinx.builders.latex.transforms [assertion]
          early skip of rewriting module: sphinx.transforms.post_transforms [assertion]
          early skip of rewriting module: sphinx.builders.linkcheck [assertion]
          early skip of rewriting module: html.parser [assertion]
          early skip of rewriting module: _markupbase [assertion]
          early skip of rewriting module: requests [assertion]
          early skip of rewriting module: urllib3 [assertion]
          early skip of rewriting module: urllib3.exceptions [assertion]
          early skip of rewriting module: urllib3._base_connection [assertion]
          early skip of rewriting module: urllib3.util [assertion]
          early skip of rewriting module: urllib3.util.connection [assertion]
          early skip of rewriting module: urllib3.util.timeout [assertion]
          early skip of rewriting module: urllib3.util.request [assertion]
          early skip of rewriting module: urllib3.util.util [assertion]
          early skip of rewriting module: brotlicffi [assertion]
          early skip of rewriting module: brotli [assertion]
          early skip of rewriting module: compression [assertion]
          early skip of rewriting module: zstandard [assertion]
          early skip of rewriting module: urllib3.util.response [assertion]
          early skip of rewriting module: urllib3.util.retry [assertion]
          early skip of rewriting module: urllib3.util.ssl_ [assertion]
          early skip of rewriting module: hmac [assertion]
          early skip of rewriting module: urllib3.util.url [assertion]
          early skip of rewriting module: urllib3.util.ssltransport [assertion]
          early skip of rewriting module: urllib3.util.wait [assertion]
          early skip of rewriting module: urllib3._collections [assertion]
          early skip of rewriting module: urllib3._version [assertion]
          early skip of rewriting module: urllib3.connectionpool [assertion]
          early skip of rewriting module: urllib3._request_methods [assertion]
          early skip of rewriting module: urllib3.filepost [assertion]
          early skip of rewriting module: urllib3.fields [assertion]
          early skip of rewriting module: urllib3.response [assertion]
          early skip of rewriting module: brotlicffi [assertion]
          early skip of rewriting module: brotli [assertion]
          early skip of rewriting module: urllib3.connection [assertion]
          early skip of rewriting module: urllib3.http2 [assertion]
          early skip of rewriting module: urllib3.http2.probe [assertion]
          early skip of rewriting module: urllib3.util.ssl_match_hostname [assertion]
          early skip of rewriting module: compression [assertion]
          early skip of rewriting module: zstandard [assertion]
          early skip of rewriting module: urllib3.util.proxy [assertion]
          early skip of rewriting module: urllib3.poolmanager [assertion]
          early skip of rewriting module: requests.exceptions [assertion]
          early skip of rewriting module: requests.compat [assertion]
          early skip of rewriting module: chardet [assertion]
          early skip of rewriting module: charset_normalizer [assertion]
          early skip of rewriting module: charset_normalizer.api [assertion]
          early skip of rewriting module: charset_normalizer.cd [assertion]
          early skip of rewriting module: charset_normalizer.constant [assertion]
          early skip of rewriting module: charset_normalizer.md [assertion]
          early skip of rewriting module: charset_normalizer.md__mypyc [assertion]
          early skip of rewriting module: charset_normalizer.utils [assertion]
          early skip of rewriting module: _multibytecodec [assertion]
          early skip of rewriting module: charset_normalizer.models [assertion]
          early skip of rewriting module: charset_normalizer.legacy [assertion]
          early skip of rewriting module: charset_normalizer.version [assertion]
          early skip of rewriting module: simplejson [assertion]
          early skip of rewriting module: http.cookiejar [assertion]
          early skip of rewriting module: http.cookies [assertion]
          early skip of rewriting module: chardet [assertion]
          early skip of rewriting module: requests.packages [assertion]
          early skip of rewriting module: idna [assertion]
          early skip of rewriting module: idna.core [assertion]
          early skip of rewriting module: idna.idnadata [assertion]
          early skip of rewriting module: idna.intranges [assertion]
          early skip of rewriting module: idna.package_data [assertion]
          early skip of rewriting module: requests.utils [assertion]
          early skip of rewriting module: requests.certs [assertion]
          early skip of rewriting module: certifi [assertion]
          early skip of rewriting module: certifi.core [assertion]
          early skip of rewriting module: requests.__version__ [assertion]
          early skip of rewriting module: requests._internal_utils [assertion]
          early skip of rewriting module: requests.cookies [assertion]
          early skip of rewriting module: requests.structures [assertion]
          early skip of rewriting module: importlib.readers [assertion]
          early skip of rewriting module: importlib.resources.readers [assertion]
          early skip of rewriting module: importlib.resources._itertools [assertion]
          early skip of rewriting module: requests.api [assertion]
          early skip of rewriting module: requests.sessions [assertion]
          early skip of rewriting module: requests.adapters [assertion]
          early skip of rewriting module: requests.auth [assertion]
          early skip of rewriting module: requests.models [assertion]
          early skip of rewriting module: encodings.idna [assertion]
          early skip of rewriting module: stringprep [assertion]
          early skip of rewriting module: requests.hooks [assertion]
          early skip of rewriting module: requests.status_codes [assertion]
          early skip of rewriting module: urllib3.contrib [assertion]
          early skip of rewriting module: urllib3.contrib.socks [assertion]
          early skip of rewriting module: socks [assertion]
          early skip of rewriting module: sphinx.util.requests [assertion]
          early skip of rewriting module: sphinx.util.http_date [assertion]
          early skip of rewriting module: sphinx.builders.manpage [assertion]
          early skip of rewriting module: sphinx.writers.manpage [assertion]
          early skip of rewriting module: docutils.writers.manpage [assertion]
          early skip of rewriting module: roman [assertion]
          early skip of rewriting module: sphinx.builders.singlehtml [assertion]
          early skip of rewriting module: sphinx.builders.texinfo [assertion]
          early skip of rewriting module: sphinx.writers.texinfo [assertion]
          early skip of rewriting module: sphinx.builders.text [assertion]
          early skip of rewriting module: sphinx.writers.text [assertion]
          early skip of rewriting module: sphinx.builders.xml [assertion]
          early skip of rewriting module: docutils.writers.docutils_xml [assertion]
          early skip of rewriting module: xml.sax [assertion]
          early skip of rewriting module: xml.sax.xmlreader [assertion]
          early skip of rewriting module: xml.sax.handler [assertion]
          early skip of rewriting module: xml.sax._exceptions [assertion]
          early skip of rewriting module: xml.sax.saxutils [assertion]
          early skip of rewriting module: xml.sax.expatreader [assertion]
          early skip of rewriting module: xml.parsers [assertion]
          early skip of rewriting module: xml.parsers.expat [assertion]
          early skip of rewriting module: sphinx.writers.xml [assertion]
          early skip of rewriting module: sphinx.domains.c [assertion]
          early skip of rewriting module: sphinx.domains.c._ast [assertion]
          early skip of rewriting module: sphinx.domains.c._ids [assertion]
          early skip of rewriting module: sphinx.util.cfamily [assertion]
          early skip of rewriting module: sphinx.domains.c._parser [assertion]
          early skip of rewriting module: sphinx.domains.c._symbol [assertion]
          early skip of rewriting module: sphinx.domains.changeset [assertion]
          early skip of rewriting module: sphinx.domains.citation [assertion]
          early skip of rewriting module: sphinx.domains.cpp [assertion]
          early skip of rewriting module: sphinx.domains.cpp._ast [assertion]
          early skip of rewriting module: sphinx.domains.cpp._ids [assertion]
          early skip of rewriting module: sphinx.domains.cpp._parser [assertion]
          early skip of rewriting module: sphinx.domains.cpp._symbol [assertion]
          early skip of rewriting module: sphinx.domains.index [assertion]
          early skip of rewriting module: sphinx.domains.javascript [assertion]
          early skip of rewriting module: sphinx.domains.python [assertion]
          early skip of rewriting module: sphinx.domains.python._annotations [assertion]
          early skip of rewriting module: sphinx.domains.python._object [assertion]
          early skip of rewriting module: sphinx.domains.math [assertion]
          early skip of rewriting module: sphinx.domains.rst [assertion]
          early skip of rewriting module: sphinx.directives.admonitions [assertion]
          early skip of rewriting module: docutils.parsers.rst.directives.admonitions [assertion]
          early skip of rewriting module: sphinx.directives.code [assertion]
          early skip of rewriting module: sphinx.util._lines [assertion]
          early skip of rewriting module: sphinx.directives.other [assertion]
          early skip of rewriting module: docutils.parsers.rst.directives.misc [assertion]
          early skip of rewriting module: docutils.parsers.rst.directives.body [assertion]
          early skip of rewriting module: sphinx.directives.patches [assertion]
          early skip of rewriting module: docutils.parsers.rst.directives.tables [assertion]
          early skip of rewriting module: sphinx.transforms.compact_bullet_list [assertion]
          early skip of rewriting module: sphinx.transforms.post_transforms.code [assertion]
          early skip of rewriting module: sphinx.ext.doctest [assertion]
          early skip of rewriting module: doctest [assertion]
          early skip of rewriting module: packaging.specifiers [assertion]
          early skip of rewriting module: packaging.utils [assertion]
          early skip of rewriting module: packaging.tags [assertion]
          early skip of rewriting module: packaging._manylinux [assertion]
          early skip of rewriting module: packaging._elffile [assertion]
          early skip of rewriting module: packaging._musllinux [assertion]
          early skip of rewriting module: sphinx.transforms.post_transforms.images [assertion]
          early skip of rewriting module: sphinx.environment.collectors [assertion]
          early skip of rewriting module: sphinx.environment.collectors.dependencies [assertion]
          early skip of rewriting module: sphinx.environment.collectors.asset [assertion]
          early skip of rewriting module: sphinx.environment.collectors.metadata [assertion]
          early skip of rewriting module: sphinx.environment.collectors.title [assertion]
          early skip of rewriting module: sphinx.environment.collectors.toctree [assertion]
          early skip of rewriting module: alabaster [assertion]
          early skip of rewriting module: sphinxcontrib.applehelp [assertion]
          early skip of rewriting module: plistlib [assertion]
          early skip of rewriting module: sphinxcontrib.devhelp [assertion]
          early skip of rewriting module: gzip [assertion]
          early skip of rewriting module: sphinxcontrib.htmlhelp [assertion]
          early skip of rewriting module: sphinxcontrib.serializinghtml [assertion]
          early skip of rewriting module: sphinxcontrib.serializinghtml.jsonimpl [assertion]
          early skip of rewriting module: sphinxcontrib.qthelp [assertion]
          early skip of rewriting module: sphinx.ext.autodoc.directive [assertion]
          early skip of rewriting module: sphinx.ext.autodoc.preserve_defaults [assertion]
          early skip of rewriting module: sphinx.ext.autodoc.type_comment [assertion]
          early skip of rewriting module: sphinx.ext.autodoc.typehints [assertion]
          early skip of rewriting module: sphinxcontrib.matlab [assertion]
          early skip of rewriting module: sphinxcontrib.mat_directives [assertion]
          early skip of rewriting module: jinja2.ext [assertion]
          early skip of rewriting module: encodings.utf_8_sig [assertion]
          early skip of rewriting module: docutils.languages.en [assertion]
          early skip of rewriting module: encodings.unicode_escape [assertion]
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_target' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_target' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_target' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_target>
            nextitem: <Function test_target_show_default_value>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_target>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_target>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_target>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_target' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_target' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_target' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc.py::test_target
            location: ('tests/test_autodoc.py', 22, 'test_target')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_target_show_default_value>
          nextitem: <Function test_target_auto_link_basic>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc.py::test_target_show_default_value
            location: ('tests/test_autodoc.py', 46, 'test_target_show_default_value')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_target_show_default_value>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_target_show_default_value>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_target_show_default_value>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea8000220> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target_show_default_value>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_target_show_default_value' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_target_show_default_value' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_target_show_default_value' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_target_show_default_value>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_target_show_default_value>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target_show_default_value>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_target_show_default_value' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_target_show_default_value' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_target_show_default_value' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_target_show_default_value>
            nextitem: <Function test_target_auto_link_basic>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_target_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_target_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_target_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target_show_default_value>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_target_show_default_value' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_target_show_default_value' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_target_show_default_value' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc.py::test_target_show_default_value
            location: ('tests/test_autodoc.py', 46, 'test_target_show_default_value')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_target_auto_link_basic>
          nextitem: <Function test_target_auto_link_all>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc.py::test_target_auto_link_basic
            location: ('tests/test_autodoc.py', 71, 'test_target_auto_link_basic')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_target_auto_link_basic>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_target_auto_link_basic>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_target_auto_link_basic>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7ac1800> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target_auto_link_basic>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_target_auto_link_basic' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_target_auto_link_basic' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_target_auto_link_basic' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_target_auto_link_basic>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_target_auto_link_basic>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target_auto_link_basic>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_target_auto_link_basic' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_target_auto_link_basic' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_target_auto_link_basic' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_target_auto_link_basic>
            nextitem: <Function test_target_auto_link_all>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_target_auto_link_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_target_auto_link_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_target_auto_link_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target_auto_link_basic>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_target_auto_link_basic' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_target_auto_link_basic' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_target_auto_link_basic' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc.py::test_target_auto_link_basic
            location: ('tests/test_autodoc.py', 71, 'test_target_auto_link_basic')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_target_auto_link_all>
          nextitem: <Function test_classfolder>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc.py::test_target_auto_link_all
            location: ('tests/test_autodoc.py', 97, 'test_target_auto_link_all')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_target_auto_link_all>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_target_auto_link_all>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_target_auto_link_all>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7f0dd00> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target_auto_link_all>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_target_auto_link_all' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_target_auto_link_all' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_target_auto_link_all' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_target_auto_link_all>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_target_auto_link_all>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target_auto_link_all>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_target_auto_link_all' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_target_auto_link_all' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_target_auto_link_all' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_target_auto_link_all>
            nextitem: <Function test_classfolder>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_target_auto_link_all>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_target_auto_link_all>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_target_auto_link_all>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target_auto_link_all>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_target_auto_link_all' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_target_auto_link_all' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_target_auto_link_all' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc.py::test_target_auto_link_all
            location: ('tests/test_autodoc.py', 97, 'test_target_auto_link_all')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_classfolder>
          nextitem: <Function test_package>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc.py::test_classfolder
            location: ('tests/test_autodoc.py', 128, 'test_classfolder')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_classfolder>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_classfolder>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_classfolder>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea8482980> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_classfolder>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_classfolder' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_classfolder' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_classfolder' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_classfolder>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_classfolder>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_classfolder>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_classfolder' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_classfolder' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_classfolder' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_classfolder>
            nextitem: <Function test_package>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_classfolder>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_classfolder>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_classfolder>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_classfolder>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_classfolder' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_classfolder' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_classfolder' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc.py::test_classfolder
            location: ('tests/test_autodoc.py', 128, 'test_classfolder')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_package>
          nextitem: <Function test_package_show_default_value>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc.py::test_package
            location: ('tests/test_autodoc.py', 142, 'test_package')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_package>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_package>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_package>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7892a20> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_package' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_package' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_package' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_package>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_package>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_package' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_package' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_package' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_package>
            nextitem: <Function test_package_show_default_value>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_package>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_package>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_package>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_package' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_package' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_package' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc.py::test_package
            location: ('tests/test_autodoc.py', 142, 'test_package')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_package_show_default_value>
          nextitem: <Function test_package_auto_link_all>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc.py::test_package_show_default_value
            location: ('tests/test_autodoc.py', 165, 'test_package_show_default_value')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_package_show_default_value>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_package_show_default_value>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_package_show_default_value>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7891620> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package_show_default_value>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_package_show_default_value' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_package_show_default_value' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_package_show_default_value' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_package_show_default_value>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_package_show_default_value>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package_show_default_value>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_package_show_default_value' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_package_show_default_value' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_package_show_default_value' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_package_show_default_value>
            nextitem: <Function test_package_auto_link_all>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_package_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_package_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_package_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package_show_default_value>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_package_show_default_value' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_package_show_default_value' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_package_show_default_value' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc.py::test_package_show_default_value
            location: ('tests/test_autodoc.py', 165, 'test_package_show_default_value')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_package_auto_link_all>
          nextitem: <Function test_submodule>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc.py::test_package_auto_link_all
            location: ('tests/test_autodoc.py', 180, 'test_package_auto_link_all')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_package_auto_link_all>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_package_auto_link_all>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_package_auto_link_all>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7892340> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package_auto_link_all>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_package_auto_link_all' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_package_auto_link_all' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_package_auto_link_all' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_package_auto_link_all>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_package_auto_link_all>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package_auto_link_all>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_package_auto_link_all' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_package_auto_link_all' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_package_auto_link_all' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_package_auto_link_all>
            nextitem: <Function test_submodule>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_package_auto_link_all>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_package_auto_link_all>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_package_auto_link_all>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package_auto_link_all>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_package_auto_link_all' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_package_auto_link_all' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_package_auto_link_all' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc.py::test_package_auto_link_all
            location: ('tests/test_autodoc.py', 180, 'test_package_auto_link_all')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_submodule>
          nextitem: <Function test_submodule_show_default_value>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc.py::test_submodule
            location: ('tests/test_autodoc.py', 214, 'test_submodule')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_submodule>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_submodule>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_submodule>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea76f0180> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_submodule>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_submodule' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_submodule' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_submodule' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_submodule>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_submodule>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_submodule>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_submodule' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_submodule' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_submodule' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_submodule>
            nextitem: <Function test_submodule_show_default_value>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_submodule>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_submodule>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_submodule>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_submodule>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_submodule' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_submodule' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_submodule' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc.py::test_submodule
            location: ('tests/test_autodoc.py', 214, 'test_submodule')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_submodule_show_default_value>
          nextitem: <Function test_root>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc.py::test_submodule_show_default_value
            location: ('tests/test_autodoc.py', 230, 'test_submodule_show_default_value')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_submodule_show_default_value>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_submodule_show_default_value>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_submodule_show_default_value>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7d122a0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_submodule_show_default_value>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_submodule_show_default_value' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_submodule_show_default_value' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_submodule_show_default_value' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_submodule_show_default_value>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_submodule_show_default_value>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_submodule_show_default_value>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_submodule_show_default_value' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_submodule_show_default_value' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_submodule_show_default_value' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_submodule_show_default_value>
            nextitem: <Function test_root>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_submodule_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_submodule_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_submodule_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_submodule_show_default_value>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_submodule_show_default_value' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_submodule_show_default_value' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_submodule_show_default_value' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc.py::test_submodule_show_default_value
            location: ('tests/test_autodoc.py', 230, 'test_submodule_show_default_value')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_root>
          nextitem: <Function test_root_relative_matlab_src_dir>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc.py::test_root
            location: ('tests/test_autodoc.py', 245, 'test_root')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_root>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_root>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_root>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7933560> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_root' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_root' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_root' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_root>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_root>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_root' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_root' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_root' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_root>
            nextitem: <Function test_root_relative_matlab_src_dir>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_root>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_root>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_root>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_root' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_root' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_root' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc.py::test_root
            location: ('tests/test_autodoc.py', 245, 'test_root')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_root_relative_matlab_src_dir>
          nextitem: <Function test_root_show_default_value>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc.py::test_root_relative_matlab_src_dir
            location: ('tests/test_autodoc.py', 259, 'test_root_relative_matlab_src_dir')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_root_relative_matlab_src_dir>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_root_relative_matlab_src_dir>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_root_relative_matlab_src_dir>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7c018a0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root_relative_matlab_src_dir>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_root_relative_matlab_src_dir' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_root_relative_matlab_src_dir' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_root_relative_matlab_src_dir' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_root_relative_matlab_src_dir>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_root_relative_matlab_src_dir>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root_relative_matlab_src_dir>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_root_relative_matlab_src_dir' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_root_relative_matlab_src_dir' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_root_relative_matlab_src_dir' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_root_relative_matlab_src_dir>
            nextitem: <Function test_root_show_default_value>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_root_relative_matlab_src_dir>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_root_relative_matlab_src_dir>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_root_relative_matlab_src_dir>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root_relative_matlab_src_dir>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_root_relative_matlab_src_dir' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_root_relative_matlab_src_dir' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_root_relative_matlab_src_dir' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc.py::test_root_relative_matlab_src_dir
            location: ('tests/test_autodoc.py', 259, 'test_root_relative_matlab_src_dir')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_root_show_default_value>
          nextitem: <Function test_root_auto_link_basic>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc.py::test_root_show_default_value
            location: ('tests/test_autodoc.py', 274, 'test_root_show_default_value')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_root_show_default_value>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_root_show_default_value>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_root_show_default_value>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7c02de0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root_show_default_value>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_root_show_default_value' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_root_show_default_value' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_root_show_default_value' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_root_show_default_value>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_root_show_default_value>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root_show_default_value>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_root_show_default_value' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_root_show_default_value' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_root_show_default_value' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_root_show_default_value>
            nextitem: <Function test_root_auto_link_basic>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_root_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_root_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_root_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root_show_default_value>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_root_show_default_value' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_root_show_default_value' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_root_show_default_value' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc.py::test_root_show_default_value
            location: ('tests/test_autodoc.py', 274, 'test_root_show_default_value')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_root_auto_link_basic>
          nextitem: <Function test_root_class_signature>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc.py::test_root_auto_link_basic
            location: ('tests/test_autodoc.py', 289, 'test_root_auto_link_basic')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_root_auto_link_basic>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_root_auto_link_basic>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_root_auto_link_basic>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7c020c0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root_auto_link_basic>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_root_auto_link_basic' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_root_auto_link_basic' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_root_auto_link_basic' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_root_auto_link_basic>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_root_auto_link_basic>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root_auto_link_basic>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_root_auto_link_basic' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_root_auto_link_basic' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_root_auto_link_basic' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_root_auto_link_basic>
            nextitem: <Function test_root_class_signature>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_root_auto_link_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_root_auto_link_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_root_auto_link_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root_auto_link_basic>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_root_auto_link_basic' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_root_auto_link_basic' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_root_auto_link_basic' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc.py::test_root_auto_link_basic
            location: ('tests/test_autodoc.py', 289, 'test_root_auto_link_basic')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_root_class_signature>
          nextitem: <Function test_target[False-False]>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc.py::test_root_class_signature
            location: ('tests/test_autodoc.py', 315, 'test_root_class_signature')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_root_class_signature>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_root_class_signature>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_root_class_signature>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea77c6d40> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root_class_signature>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_root_class_signature' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_root_class_signature' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_root_class_signature' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_root_class_signature>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_root_class_signature>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root_class_signature>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_root_class_signature' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_root_class_signature' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_root_class_signature' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_root_class_signature>
            nextitem: <Function test_target[False-False]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_root_class_signature>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'make_app' for <Function test_root_class_signature>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'test_params' for <Function test_root_class_signature>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_autodoc.py'>
              request: <SubRequest 'rootdir' for <Function test_target>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root_class_signature>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc.py::test_root_class_signature' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc.py::test_root_class_signature' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc.py::test_root_class_signature' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc.py::test_root_class_signature
            location: ('tests/test_autodoc.py', 315, 'test_root_class_signature')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_target[False-False]>
          nextitem: <Function test_target[False-True]>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc_properties.py::test_target[False-False]
            location: ('tests/test_autodoc_properties.py', 30, 'test_target[False-False]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_target[False-False]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'rootdir' for <Function test_target[False-False]>>
          finish pytest_fixture_setup --> /home/remi-gau/github/matlabdomain/tests [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'test_params' for <Function test_target[False-False]>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'make_app' for <Function test_target[False-False]>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea9069a80> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='show_default' scope='function' baseid=''>
              request: <SubRequest 'show_default' for <Function test_target[False-False]>>
          finish pytest_fixture_setup --> False [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='show_specs' scope='function' baseid=''>
              request: <SubRequest 'show_specs' for <Function test_target[False-False]>>
          finish pytest_fixture_setup --> False [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target[False-False]>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_properties.py::test_target[False-False]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_properties.py::test_target[False-False]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_properties.py::test_target[False-False]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_target[False-False]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_target[False-False]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target[False-False]>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_properties.py::test_target[False-False]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_properties.py::test_target[False-False]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_properties.py::test_target[False-False]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_target[False-False]>
            nextitem: <Function test_target[False-True]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='show_specs' scope='function' baseid=''>
              request: <SubRequest 'show_specs' for <Function test_target[False-False]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='show_default' scope='function' baseid=''>
              request: <SubRequest 'show_default' for <Function test_target[False-False]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'make_app' for <Function test_target[False-False]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'make_app' for <Function test_target[False-False]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'test_params' for <Function test_target[False-False]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target[False-False]>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_properties.py::test_target[False-False]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_properties.py::test_target[False-False]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_properties.py::test_target[False-False]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc_properties.py::test_target[False-False]
            location: ('tests/test_autodoc_properties.py', 30, 'test_target[False-False]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_target[False-True]>
          nextitem: <Function test_target[True-False]>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc_properties.py::test_target[False-True]
            location: ('tests/test_autodoc_properties.py', 30, 'test_target[False-True]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_target[False-True]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'test_params' for <Function test_target[False-True]>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'make_app' for <Function test_target[False-True]>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7d432e0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='show_default' scope='function' baseid=''>
              request: <SubRequest 'show_default' for <Function test_target[False-True]>>
          finish pytest_fixture_setup --> False [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='show_specs' scope='function' baseid=''>
              request: <SubRequest 'show_specs' for <Function test_target[False-True]>>
          finish pytest_fixture_setup --> True [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target[False-True]>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_properties.py::test_target[False-True]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_properties.py::test_target[False-True]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_properties.py::test_target[False-True]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_target[False-True]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_target[False-True]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target[False-True]>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_properties.py::test_target[False-True]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_properties.py::test_target[False-True]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_properties.py::test_target[False-True]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_target[False-True]>
            nextitem: <Function test_target[True-False]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='show_specs' scope='function' baseid=''>
              request: <SubRequest 'show_specs' for <Function test_target[False-True]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='show_default' scope='function' baseid=''>
              request: <SubRequest 'show_default' for <Function test_target[False-True]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'make_app' for <Function test_target[False-True]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'make_app' for <Function test_target[False-True]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'test_params' for <Function test_target[False-True]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target[False-True]>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_properties.py::test_target[False-True]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_properties.py::test_target[False-True]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_properties.py::test_target[False-True]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc_properties.py::test_target[False-True]
            location: ('tests/test_autodoc_properties.py', 30, 'test_target[False-True]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_target[True-False]>
          nextitem: <Function test_target[True-True]>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc_properties.py::test_target[True-False]
            location: ('tests/test_autodoc_properties.py', 30, 'test_target[True-False]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_target[True-False]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'test_params' for <Function test_target[True-False]>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'make_app' for <Function test_target[True-False]>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7c023e0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='show_default' scope='function' baseid=''>
              request: <SubRequest 'show_default' for <Function test_target[True-False]>>
          finish pytest_fixture_setup --> True [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='show_specs' scope='function' baseid=''>
              request: <SubRequest 'show_specs' for <Function test_target[True-False]>>
          finish pytest_fixture_setup --> False [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target[True-False]>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_properties.py::test_target[True-False]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_properties.py::test_target[True-False]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_properties.py::test_target[True-False]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_target[True-False]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_target[True-False]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target[True-False]>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_properties.py::test_target[True-False]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_properties.py::test_target[True-False]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_properties.py::test_target[True-False]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_target[True-False]>
            nextitem: <Function test_target[True-True]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='show_specs' scope='function' baseid=''>
              request: <SubRequest 'show_specs' for <Function test_target[True-False]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='show_default' scope='function' baseid=''>
              request: <SubRequest 'show_default' for <Function test_target[True-False]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'make_app' for <Function test_target[True-False]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'make_app' for <Function test_target[True-False]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'test_params' for <Function test_target[True-False]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target[True-False]>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_properties.py::test_target[True-False]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_properties.py::test_target[True-False]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_properties.py::test_target[True-False]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc_properties.py::test_target[True-False]
            location: ('tests/test_autodoc_properties.py', 30, 'test_target[True-False]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_target[True-True]>
          nextitem: <Function test_target>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc_properties.py::test_target[True-True]
            location: ('tests/test_autodoc_properties.py', 30, 'test_target[True-True]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_target[True-True]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'test_params' for <Function test_target[True-True]>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'make_app' for <Function test_target[True-True]>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7c01a80> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='show_default' scope='function' baseid=''>
              request: <SubRequest 'show_default' for <Function test_target[True-True]>>
          finish pytest_fixture_setup --> True [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='show_specs' scope='function' baseid=''>
              request: <SubRequest 'show_specs' for <Function test_target[True-True]>>
          finish pytest_fixture_setup --> True [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target[True-True]>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_properties.py::test_target[True-True]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_properties.py::test_target[True-True]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_properties.py::test_target[True-True]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_target[True-True]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_target[True-True]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target[True-True]>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_properties.py::test_target[True-True]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_properties.py::test_target[True-True]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_properties.py::test_target[True-True]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_target[True-True]>
            nextitem: <Function test_target>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='show_specs' scope='function' baseid=''>
              request: <SubRequest 'show_specs' for <Function test_target[True-True]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='show_default' scope='function' baseid=''>
              request: <SubRequest 'show_default' for <Function test_target[True-True]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'make_app' for <Function test_target[True-True]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'make_app' for <Function test_target[True-True]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'test_params' for <Function test_target[True-True]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_autodoc_properties.py'>
              request: <SubRequest 'rootdir' for <Function test_target[False-False]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target[True-True]>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_properties.py::test_target[True-True]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_properties.py::test_target[True-True]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_properties.py::test_target[True-True]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc_properties.py::test_target[True-True]
            location: ('tests/test_autodoc_properties.py', 30, 'test_target[True-True]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_target>
          nextitem: <Function test_target_show_default_value>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc_short_links.py::test_target
            location: ('tests/test_autodoc_short_links.py', 24, 'test_target')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_target>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'rootdir' for <Function test_target>>
          finish pytest_fixture_setup --> /home/remi-gau/github/matlabdomain/tests [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_target>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_target>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7b81800> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_target' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_target' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_target' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_target>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_target>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_target' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_target' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_target' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_target>
            nextitem: <Function test_target_show_default_value>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_target>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_target>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_target>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_target' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_target' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_target' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc_short_links.py::test_target
            location: ('tests/test_autodoc_short_links.py', 24, 'test_target')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_target_show_default_value>
          nextitem: <Function test_target_auto_link_basic>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc_short_links.py::test_target_show_default_value
            location: ('tests/test_autodoc_short_links.py', 49, 'test_target_show_default_value')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_target_show_default_value>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_target_show_default_value>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_target_show_default_value>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7ac2b60> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target_show_default_value>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_target_show_default_value' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_target_show_default_value' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_target_show_default_value' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_target_show_default_value>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_target_show_default_value>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target_show_default_value>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_target_show_default_value' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_target_show_default_value' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_target_show_default_value' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_target_show_default_value>
            nextitem: <Function test_target_auto_link_basic>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_target_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_target_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_target_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target_show_default_value>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_target_show_default_value' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_target_show_default_value' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_target_show_default_value' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc_short_links.py::test_target_show_default_value
            location: ('tests/test_autodoc_short_links.py', 49, 'test_target_show_default_value')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_target_auto_link_basic>
          nextitem: <Function test_target_auto_link_all>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc_short_links.py::test_target_auto_link_basic
            location: ('tests/test_autodoc_short_links.py', 74, 'test_target_auto_link_basic')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_target_auto_link_basic>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_target_auto_link_basic>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_target_auto_link_basic>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7930900> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target_auto_link_basic>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_target_auto_link_basic' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_target_auto_link_basic' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_target_auto_link_basic' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_target_auto_link_basic>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_target_auto_link_basic>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target_auto_link_basic>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_target_auto_link_basic' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_target_auto_link_basic' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_target_auto_link_basic' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_target_auto_link_basic>
            nextitem: <Function test_target_auto_link_all>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_target_auto_link_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_target_auto_link_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_target_auto_link_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target_auto_link_basic>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_target_auto_link_basic' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_target_auto_link_basic' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_target_auto_link_basic' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc_short_links.py::test_target_auto_link_basic
            location: ('tests/test_autodoc_short_links.py', 74, 'test_target_auto_link_basic')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_target_auto_link_all>
          nextitem: <Function test_classfolder>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc_short_links.py::test_target_auto_link_all
            location: ('tests/test_autodoc_short_links.py', 100, 'test_target_auto_link_all')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_target_auto_link_all>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_target_auto_link_all>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_target_auto_link_all>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7d431a0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target_auto_link_all>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_target_auto_link_all' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_target_auto_link_all' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_target_auto_link_all' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_target_auto_link_all>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_target_auto_link_all>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target_auto_link_all>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_target_auto_link_all' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_target_auto_link_all' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_target_auto_link_all' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_target_auto_link_all>
            nextitem: <Function test_classfolder>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_target_auto_link_all>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_target_auto_link_all>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_target_auto_link_all>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_target_auto_link_all>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_target_auto_link_all' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_target_auto_link_all' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_target_auto_link_all' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc_short_links.py::test_target_auto_link_all
            location: ('tests/test_autodoc_short_links.py', 100, 'test_target_auto_link_all')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_classfolder>
          nextitem: <Function test_package>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc_short_links.py::test_classfolder
            location: ('tests/test_autodoc_short_links.py', 131, 'test_classfolder')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_classfolder>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_classfolder>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_classfolder>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea77c5760> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_classfolder>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_classfolder' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_classfolder' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_classfolder' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_classfolder>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_classfolder>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_classfolder>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_classfolder' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_classfolder' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_classfolder' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_classfolder>
            nextitem: <Function test_package>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_classfolder>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_classfolder>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_classfolder>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_classfolder>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_classfolder' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_classfolder' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_classfolder' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc_short_links.py::test_classfolder
            location: ('tests/test_autodoc_short_links.py', 131, 'test_classfolder')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_package>
          nextitem: <Function test_package_show_default_value>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc_short_links.py::test_package
            location: ('tests/test_autodoc_short_links.py', 146, 'test_package')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_package>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_package>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_package>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea85704a0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_package' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_package' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_package' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_package>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_package>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_package' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_package' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_package' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_package>
            nextitem: <Function test_package_show_default_value>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_package>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_package>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_package>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_package' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_package' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_package' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc_short_links.py::test_package
            location: ('tests/test_autodoc_short_links.py', 146, 'test_package')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_package_show_default_value>
          nextitem: <Function test_package_auto_link_all>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc_short_links.py::test_package_show_default_value
            location: ('tests/test_autodoc_short_links.py', 170, 'test_package_show_default_value')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_package_show_default_value>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_package_show_default_value>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_package_show_default_value>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7a1d300> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package_show_default_value>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_package_show_default_value' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_package_show_default_value' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_package_show_default_value' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_package_show_default_value>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_package_show_default_value>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package_show_default_value>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_package_show_default_value' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_package_show_default_value' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_package_show_default_value' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_package_show_default_value>
            nextitem: <Function test_package_auto_link_all>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_package_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_package_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_package_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package_show_default_value>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_package_show_default_value' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_package_show_default_value' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_package_show_default_value' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc_short_links.py::test_package_show_default_value
            location: ('tests/test_autodoc_short_links.py', 170, 'test_package_show_default_value')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_package_auto_link_all>
          nextitem: <Function test_submodule>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc_short_links.py::test_package_auto_link_all
            location: ('tests/test_autodoc_short_links.py', 185, 'test_package_auto_link_all')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_package_auto_link_all>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_package_auto_link_all>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_package_auto_link_all>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7a1d300> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package_auto_link_all>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_package_auto_link_all' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_package_auto_link_all' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_package_auto_link_all' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_package_auto_link_all>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_package_auto_link_all>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package_auto_link_all>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_package_auto_link_all' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_package_auto_link_all' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_package_auto_link_all' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_package_auto_link_all>
            nextitem: <Function test_submodule>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_package_auto_link_all>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_package_auto_link_all>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_package_auto_link_all>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package_auto_link_all>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_package_auto_link_all' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_package_auto_link_all' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_package_auto_link_all' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc_short_links.py::test_package_auto_link_all
            location: ('tests/test_autodoc_short_links.py', 185, 'test_package_auto_link_all')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_submodule>
          nextitem: <Function test_submodule_show_default_value>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc_short_links.py::test_submodule
            location: ('tests/test_autodoc_short_links.py', 219, 'test_submodule')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_submodule>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_submodule>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_submodule>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7a1f920> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_submodule>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_submodule' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_submodule' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_submodule' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_submodule>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_submodule>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_submodule>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_submodule' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_submodule' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_submodule' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_submodule>
            nextitem: <Function test_submodule_show_default_value>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_submodule>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_submodule>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_submodule>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_submodule>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_submodule' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_submodule' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_submodule' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc_short_links.py::test_submodule
            location: ('tests/test_autodoc_short_links.py', 219, 'test_submodule')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_submodule_show_default_value>
          nextitem: <Function test_root>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc_short_links.py::test_submodule_show_default_value
            location: ('tests/test_autodoc_short_links.py', 236, 'test_submodule_show_default_value')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_submodule_show_default_value>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_submodule_show_default_value>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_submodule_show_default_value>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7a1c5e0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_submodule_show_default_value>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_submodule_show_default_value' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_submodule_show_default_value' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_submodule_show_default_value' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_submodule_show_default_value>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_submodule_show_default_value>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_submodule_show_default_value>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_submodule_show_default_value' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_submodule_show_default_value' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_submodule_show_default_value' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_submodule_show_default_value>
            nextitem: <Function test_root>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_submodule_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_submodule_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_submodule_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_submodule_show_default_value>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_submodule_show_default_value' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_submodule_show_default_value' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_submodule_show_default_value' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc_short_links.py::test_submodule_show_default_value
            location: ('tests/test_autodoc_short_links.py', 236, 'test_submodule_show_default_value')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_root>
          nextitem: <Function test_root_show_default_value>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc_short_links.py::test_root
            location: ('tests/test_autodoc_short_links.py', 251, 'test_root')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_root>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_root>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_root>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7d100e0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_root' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_root' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_root' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_root>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_root>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_root' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_root' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_root' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_root>
            nextitem: <Function test_root_show_default_value>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_root>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_root>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_root>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_root' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_root' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_root' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc_short_links.py::test_root
            location: ('tests/test_autodoc_short_links.py', 251, 'test_root')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_root_show_default_value>
          nextitem: <Function test_root_auto_link_basic>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc_short_links.py::test_root_show_default_value
            location: ('tests/test_autodoc_short_links.py', 266, 'test_root_show_default_value')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_root_show_default_value>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_root_show_default_value>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_root_show_default_value>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea76ca8e0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root_show_default_value>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_root_show_default_value' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_root_show_default_value' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_root_show_default_value' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_root_show_default_value>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_root_show_default_value>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root_show_default_value>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_root_show_default_value' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_root_show_default_value' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_root_show_default_value' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_root_show_default_value>
            nextitem: <Function test_root_auto_link_basic>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_root_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_root_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_root_show_default_value>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root_show_default_value>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_root_show_default_value' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_root_show_default_value' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_root_show_default_value' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc_short_links.py::test_root_show_default_value
            location: ('tests/test_autodoc_short_links.py', 266, 'test_root_show_default_value')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_root_auto_link_basic>
          nextitem: <Function test_first>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_autodoc_short_links.py::test_root_auto_link_basic
            location: ('tests/test_autodoc_short_links.py', 281, 'test_root_auto_link_basic')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_root_auto_link_basic>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_root_auto_link_basic>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_root_auto_link_basic>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea76c8220> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root_auto_link_basic>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_root_auto_link_basic' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_root_auto_link_basic' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_root_auto_link_basic' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_root_auto_link_basic>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_root_auto_link_basic>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root_auto_link_basic>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_root_auto_link_basic' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_root_auto_link_basic' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_root_auto_link_basic' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_root_auto_link_basic>
            nextitem: <Function test_first>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_root_auto_link_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'make_app' for <Function test_root_auto_link_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'test_params' for <Function test_root_auto_link_basic>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_autodoc_short_links.py'>
              request: <SubRequest 'rootdir' for <Function test_target>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_root_auto_link_basic>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_autodoc_short_links.py::test_root_auto_link_basic' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_autodoc_short_links.py::test_root_auto_link_basic' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_autodoc_short_links.py::test_root_auto_link_basic' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_autodoc_short_links.py::test_root_auto_link_basic
            location: ('tests/test_autodoc_short_links.py', 281, 'test_root_auto_link_basic')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_first>
          nextitem: <Function test_second>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_classfolder.py::test_first
            location: ('tests/test_classfolder.py', 22, 'test_first')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_first>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_classfolder.py'>
              request: <SubRequest 'rootdir' for <Function test_first>>
          finish pytest_fixture_setup --> /home/remi-gau/github/matlabdomain/tests [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_classfolder.py'>
              request: <SubRequest 'test_params' for <Function test_first>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_classfolder.py'>
              request: <SubRequest 'make_app' for <Function test_first>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea77c6d40> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_first>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_classfolder.py::test_first' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_classfolder.py::test_first' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_classfolder.py::test_first' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_first>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_first>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_first>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_classfolder.py::test_first' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_classfolder.py::test_first' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_classfolder.py::test_first' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_first>
            nextitem: <Function test_second>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_classfolder.py'>
              request: <SubRequest 'make_app' for <Function test_first>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_classfolder.py'>
              request: <SubRequest 'make_app' for <Function test_first>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_classfolder.py'>
              request: <SubRequest 'test_params' for <Function test_first>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_first>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_classfolder.py::test_first' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_classfolder.py::test_first' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_classfolder.py::test_first' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_classfolder.py::test_first
            location: ('tests/test_classfolder.py', 22, 'test_first')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_second>
          nextitem: <Function test_third>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_classfolder.py::test_second
            location: ('tests/test_classfolder.py', 35, 'test_second')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_second>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_classfolder.py'>
              request: <SubRequest 'test_params' for <Function test_second>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_classfolder.py'>
              request: <SubRequest 'make_app' for <Function test_second>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea76c8720> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_second>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_classfolder.py::test_second' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_classfolder.py::test_second' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_classfolder.py::test_second' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_second>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_second>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_second>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_classfolder.py::test_second' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_classfolder.py::test_second' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_classfolder.py::test_second' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_second>
            nextitem: <Function test_third>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_classfolder.py'>
              request: <SubRequest 'make_app' for <Function test_second>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_classfolder.py'>
              request: <SubRequest 'make_app' for <Function test_second>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_classfolder.py'>
              request: <SubRequest 'test_params' for <Function test_second>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_second>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_classfolder.py::test_second' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_classfolder.py::test_second' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_classfolder.py::test_second' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_classfolder.py::test_second
            location: ('tests/test_classfolder.py', 35, 'test_second')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_third>
          nextitem: <Function test_classfolders>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_classfolder.py::test_third
            location: ('tests/test_classfolder.py', 48, 'test_third')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_third>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_classfolder.py'>
              request: <SubRequest 'test_params' for <Function test_third>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_classfolder.py'>
              request: <SubRequest 'make_app' for <Function test_third>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea77c72e0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_third>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_classfolder.py::test_third' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_classfolder.py::test_third' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_classfolder.py::test_third' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_third>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_third>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_third>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_classfolder.py::test_third' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_classfolder.py::test_third' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_classfolder.py::test_third' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_third>
            nextitem: <Function test_classfolders>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_classfolder.py'>
              request: <SubRequest 'make_app' for <Function test_third>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_classfolder.py'>
              request: <SubRequest 'make_app' for <Function test_third>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_classfolder.py'>
              request: <SubRequest 'test_params' for <Function test_third>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_classfolder.py'>
              request: <SubRequest 'rootdir' for <Function test_first>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_third>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_classfolder.py::test_third' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_classfolder.py::test_third' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_classfolder.py::test_third' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_classfolder.py::test_third
            location: ('tests/test_classfolder.py', 48, 'test_third')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_classfolders>
          nextitem: <Function test_with_prefix>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_classfolder_class_name.py::test_classfolders
            location: ('tests/test_classfolder_class_name.py', 3, 'test_classfolders')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_classfolders>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_classfolders>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_classfolder_class_name.py::test_classfolders' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_classfolder_class_name.py::test_classfolders' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_classfolder_class_name.py::test_classfolders' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_classfolders>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_classfolders>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_classfolders>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_classfolder_class_name.py::test_classfolders' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_classfolder_class_name.py::test_classfolders' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_classfolder_class_name.py::test_classfolders' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_classfolders>
            nextitem: <Function test_with_prefix>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_classfolders>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_classfolder_class_name.py::test_classfolders' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_classfolder_class_name.py::test_classfolders' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_classfolder_class_name.py::test_classfolders' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_classfolder_class_name.py::test_classfolders
            location: ('tests/test_classfolder_class_name.py', 3, 'test_classfolders')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_with_prefix>
          nextitem: <Function test_without_prefix>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_duplicated_link.py::test_with_prefix
            location: ('tests/test_duplicated_link.py', 25, 'test_with_prefix')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_with_prefix>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_duplicated_link.py'>
              request: <SubRequest 'rootdir' for <Function test_with_prefix>>
          finish pytest_fixture_setup --> /home/remi-gau/github/matlabdomain/tests [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_duplicated_link.py'>
              request: <SubRequest 'test_params' for <Function test_with_prefix>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_duplicated_link.py'>
              request: <SubRequest 'make_app' for <Function test_with_prefix>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7ac2160> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_with_prefix>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_duplicated_link.py::test_with_prefix' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_duplicated_link.py::test_with_prefix' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_duplicated_link.py::test_with_prefix' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_with_prefix>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_with_prefix>
          early skip of rewriting module: sphinx.ext.autosummary [assertion]
          early skip of rewriting module: sphinx.ext.autosummary.generate [assertion]
          early skip of rewriting module: pkgutil [assertion]
          early skip of rewriting module: pydoc [assertion]
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_with_prefix>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_duplicated_link.py::test_with_prefix' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_duplicated_link.py::test_with_prefix' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_duplicated_link.py::test_with_prefix' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_with_prefix>
            nextitem: <Function test_without_prefix>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_duplicated_link.py'>
              request: <SubRequest 'make_app' for <Function test_with_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_duplicated_link.py'>
              request: <SubRequest 'make_app' for <Function test_with_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_duplicated_link.py'>
              request: <SubRequest 'test_params' for <Function test_with_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_with_prefix>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_duplicated_link.py::test_with_prefix' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_duplicated_link.py::test_with_prefix' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_duplicated_link.py::test_with_prefix' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_duplicated_link.py::test_with_prefix
            location: ('tests/test_duplicated_link.py', 25, 'test_with_prefix')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_without_prefix>
          nextitem: <Function test_strings>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_duplicated_link.py::test_without_prefix
            location: ('tests/test_duplicated_link.py', 44, 'test_without_prefix')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_without_prefix>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_duplicated_link.py'>
              request: <SubRequest 'test_params' for <Function test_without_prefix>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_duplicated_link.py'>
              request: <SubRequest 'make_app' for <Function test_without_prefix>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea75ab2e0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_without_prefix>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_duplicated_link.py::test_without_prefix' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_duplicated_link.py::test_without_prefix' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_duplicated_link.py::test_without_prefix' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_without_prefix>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_without_prefix>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_without_prefix>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_duplicated_link.py::test_without_prefix' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_duplicated_link.py::test_without_prefix' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_duplicated_link.py::test_without_prefix' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_without_prefix>
            nextitem: <Function test_strings>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_duplicated_link.py'>
              request: <SubRequest 'make_app' for <Function test_without_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_duplicated_link.py'>
              request: <SubRequest 'make_app' for <Function test_without_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_duplicated_link.py'>
              request: <SubRequest 'test_params' for <Function test_without_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_duplicated_link.py'>
              request: <SubRequest 'rootdir' for <Function test_with_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_without_prefix>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_duplicated_link.py::test_without_prefix' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_duplicated_link.py::test_without_prefix' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_duplicated_link.py::test_without_prefix' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_duplicated_link.py::test_without_prefix
            location: ('tests/test_duplicated_link.py', 44, 'test_without_prefix')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_strings>
          nextitem: <Function test_function_names>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_lexer.py::test_strings
            location: ('tests/test_lexer.py', 3, 'test_strings')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_strings>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_strings>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_lexer.py::test_strings' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_lexer.py::test_strings' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_lexer.py::test_strings' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_strings>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_strings>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_strings>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_lexer.py::test_strings' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_lexer.py::test_strings' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_lexer.py::test_strings' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_strings>
            nextitem: <Function test_function_names>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_strings>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_lexer.py::test_strings' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_lexer.py::test_strings' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_lexer.py::test_strings' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_lexer.py::test_strings
            location: ('tests/test_lexer.py', 3, 'test_strings')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_function_names>
          nextitem: <Function test_unknown>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_lexer.py::test_function_names
            location: ('tests/test_lexer.py', 19, 'test_function_names')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_function_names>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_function_names>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_lexer.py::test_function_names' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_lexer.py::test_function_names' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_lexer.py::test_function_names' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_function_names>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_function_names>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_function_names>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_lexer.py::test_function_names' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_lexer.py::test_function_names' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_lexer.py::test_function_names' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_function_names>
            nextitem: <Function test_unknown>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_function_names>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_lexer.py::test_function_names' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_lexer.py::test_function_names' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_lexer.py::test_function_names' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_lexer.py::test_function_names
            location: ('tests/test_lexer.py', 19, 'test_function_names')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_unknown>
          nextitem: <Function test_script>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_matlabify.py::test_unknown
            location: ('tests/test_matlabify.py', 33, 'test_unknown')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_unknown>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unknown>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_unknown' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_unknown' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_unknown' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_unknown>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_unknown>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unknown>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_unknown' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_unknown' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_unknown' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_unknown>
            nextitem: <Function test_script>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unknown>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_unknown' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_unknown' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_unknown' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_matlabify.py::test_unknown
            location: ('tests/test_matlabify.py', 33, 'test_unknown')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_script>
          nextitem: <Function test_module>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_matlabify.py::test_script
            location: ('tests/test_matlabify.py', 37, 'test_script')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_script>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_script>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_script>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7933920> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_script>>
          early skip of rewriting module: encodings.cp437 [assertion]
          finish pytest_fixture_setup --> <SphinxTestApp buildername='html'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_script>>
          finish pytest_fixture_setup --> <MatModule: "test_data"> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='caplog' scope='function' baseid=''>
              request: <SubRequest 'caplog' for <Function test_script>>
          finish pytest_fixture_setup --> <_pytest.logging.LogCaptureFixture object at 0x716ea791e410> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_script>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_script' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_script' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_script' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_script>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_script>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_script>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_script' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_script' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_script' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_script>
            nextitem: <Function test_module>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='caplog' scope='function' baseid=''>
              request: <SubRequest 'caplog' for <Function test_script>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_script>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_script>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_script>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_script>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_script>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_script>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_script>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_script>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_script' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_script' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_script' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_matlabify.py::test_script
            location: ('tests/test_matlabify.py', 37, 'test_script')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_module>
          nextitem: <Function test_parse_twice>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_matlabify.py::test_module
            location: ('tests/test_matlabify.py', 42, 'test_module')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_module>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_module>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_module>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7933100> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_module>>
          finish pytest_fixture_setup --> <SphinxTestApp buildername='html'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_module>>
          finish pytest_fixture_setup --> <MatModule: "test_data"> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_module>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_module' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_module' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_module' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_module>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_module>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_module>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_module' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_module' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_module' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_module>
            nextitem: <Function test_parse_twice>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_module>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_module>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_module>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_module>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_module>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_module>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_module>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_module>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_module' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_module' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_module' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_matlabify.py::test_module
            location: ('tests/test_matlabify.py', 42, 'test_module')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_parse_twice>
          nextitem: <Function test_classes>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_matlabify.py::test_parse_twice
            location: ('tests/test_matlabify.py', 129, 'test_parse_twice')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_parse_twice>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_parse_twice>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_parse_twice>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7930b80> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_parse_twice>>
          finish pytest_fixture_setup --> <SphinxTestApp buildername='html'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_parse_twice>>
          finish pytest_fixture_setup --> <MatModule: "test_data"> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_parse_twice>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_parse_twice' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_parse_twice' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_parse_twice' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_parse_twice>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_parse_twice>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_parse_twice>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_parse_twice' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_parse_twice' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_parse_twice' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_parse_twice>
            nextitem: <Function test_classes>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_parse_twice>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_parse_twice>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_parse_twice>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_parse_twice>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_parse_twice>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_parse_twice>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_parse_twice>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_parse_twice>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_parse_twice' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_parse_twice' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_parse_twice' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_matlabify.py::test_parse_twice
            location: ('tests/test_matlabify.py', 129, 'test_parse_twice')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_classes>
          nextitem: <Function test_abstract_class>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_matlabify.py::test_classes
            location: ('tests/test_matlabify.py', 134, 'test_classes')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_classes>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_classes>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_classes>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7933380> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_classes>>
          finish pytest_fixture_setup --> <SphinxTestApp buildername='html'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_classes>>
          finish pytest_fixture_setup --> <MatModule: "test_data"> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_classes>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_classes' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_classes' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_classes' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_classes>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_classes>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_classes>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_classes' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_classes' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_classes' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_classes>
            nextitem: <Function test_abstract_class>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_classes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_classes>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_classes' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_classes' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_classes' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_matlabify.py::test_classes
            location: ('tests/test_matlabify.py', 134, 'test_classes')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_abstract_class>
          nextitem: <Function test_class_method>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_matlabify.py::test_abstract_class
            location: ('tests/test_matlabify.py', 157, 'test_abstract_class')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_abstract_class>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_abstract_class>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_abstract_class>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7996840> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_abstract_class>>
          finish pytest_fixture_setup --> <SphinxTestApp buildername='html'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_abstract_class>>
          finish pytest_fixture_setup --> <MatModule: "test_data"> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_abstract_class>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_abstract_class' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_abstract_class' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_abstract_class' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_abstract_class>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_abstract_class>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_abstract_class>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_abstract_class' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_abstract_class' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_abstract_class' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_abstract_class>
            nextitem: <Function test_class_method>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_abstract_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_abstract_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_abstract_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_abstract_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_abstract_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_abstract_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_abstract_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_abstract_class>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_abstract_class' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_abstract_class' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_abstract_class' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_matlabify.py::test_abstract_class
            location: ('tests/test_matlabify.py', 157, 'test_abstract_class')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_class_method>
          nextitem: <Function test_submodule_class>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_matlabify.py::test_class_method
            location: ('tests/test_matlabify.py', 204, 'test_class_method')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_class_method>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_class_method>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_class_method>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea78936a0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_class_method>>
          finish pytest_fixture_setup --> <SphinxTestApp buildername='html'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_class_method>>
          finish pytest_fixture_setup --> <MatModule: "test_data"> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_class_method>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_class_method' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_class_method' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_class_method' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_class_method>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_class_method>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_class_method>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_class_method' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_class_method' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_class_method' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_class_method>
            nextitem: <Function test_submodule_class>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_class_method>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_class_method>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_class_method>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_class_method>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_class_method>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_class_method>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_class_method>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_class_method>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_class_method' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_class_method' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_class_method' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_matlabify.py::test_class_method
            location: ('tests/test_matlabify.py', 204, 'test_class_method')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_submodule_class>
          nextitem: <Function test_folder_class>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_matlabify.py::test_submodule_class
            location: ('tests/test_matlabify.py', 229, 'test_submodule_class')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_submodule_class>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_submodule_class>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_submodule_class>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7d13100> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_submodule_class>>
          finish pytest_fixture_setup --> <SphinxTestApp buildername='html'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_submodule_class>>
          finish pytest_fixture_setup --> <MatModule: "test_data"> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_submodule_class>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_submodule_class' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_submodule_class' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_submodule_class' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_submodule_class>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_submodule_class>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_submodule_class>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_submodule_class' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_submodule_class' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_submodule_class' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_submodule_class>
            nextitem: <Function test_folder_class>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_submodule_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_submodule_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_submodule_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_submodule_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_submodule_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_submodule_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_submodule_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_submodule_class>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_submodule_class' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_submodule_class' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_submodule_class' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_matlabify.py::test_submodule_class
            location: ('tests/test_matlabify.py', 229, 'test_submodule_class')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_folder_class>
          nextitem: <Function test_function>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_matlabify.py::test_folder_class
            location: ('tests/test_matlabify.py', 247, 'test_folder_class')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_folder_class>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_folder_class>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_folder_class>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7d11120> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_folder_class>>
          finish pytest_fixture_setup --> <SphinxTestApp buildername='html'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_folder_class>>
          finish pytest_fixture_setup --> <MatModule: "test_data"> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_folder_class>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_folder_class' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_folder_class' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_folder_class' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_folder_class>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_folder_class>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_folder_class>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_folder_class' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_folder_class' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_folder_class' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_folder_class>
            nextitem: <Function test_function>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_folder_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_folder_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_folder_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_folder_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_folder_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_folder_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_folder_class>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_folder_class>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_folder_class' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_folder_class' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_folder_class' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_matlabify.py::test_folder_class
            location: ('tests/test_matlabify.py', 247, 'test_folder_class')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_function>
          nextitem: <Function test_function_getter>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_matlabify.py::test_function
            location: ('tests/test_matlabify.py', 286, 'test_function')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_function>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_function>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_function>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea79972e0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_function>>
          finish pytest_fixture_setup --> <SphinxTestApp buildername='html'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_function>>
          finish pytest_fixture_setup --> <MatModule: "test_data"> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_function>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_function' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_function' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_function' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_function>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_function>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_function>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_function' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_function' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_function' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_function>
            nextitem: <Function test_function_getter>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_function>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_function>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_function>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_function>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_function>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_function>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_function>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_function>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_function' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_function' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_function' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_matlabify.py::test_function
            location: ('tests/test_matlabify.py', 286, 'test_function')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_function_getter>
          nextitem: <Function test_package_function>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_matlabify.py::test_function_getter
            location: ('tests/test_matlabify.py', 299, 'test_function_getter')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_function_getter>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_function_getter>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_function_getter>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7994360> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_function_getter>>
          finish pytest_fixture_setup --> <SphinxTestApp buildername='html'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_function_getter>>
          finish pytest_fixture_setup --> <MatModule: "test_data"> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_function_getter>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_function_getter' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_function_getter' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_function_getter' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_function_getter>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_function_getter>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_function_getter>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_function_getter' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_function_getter' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_function_getter' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_function_getter>
            nextitem: <Function test_package_function>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_function_getter>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_function_getter>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_function_getter>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_function_getter>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_function_getter>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_function_getter>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_function_getter>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_function_getter>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_function_getter' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_function_getter' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_function_getter' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_matlabify.py::test_function_getter
            location: ('tests/test_matlabify.py', 299, 'test_function_getter')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_package_function>
          nextitem: <Function test_class_with_get_method>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_matlabify.py::test_package_function
            location: ('tests/test_matlabify.py', 311, 'test_package_function')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_package_function>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_package_function>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_package_function>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7d13100> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_package_function>>
          finish pytest_fixture_setup --> <SphinxTestApp buildername='html'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_package_function>>
          finish pytest_fixture_setup --> <MatModule: "test_data"> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package_function>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_package_function' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_package_function' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_package_function' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_package_function>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_package_function>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package_function>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_package_function' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_package_function' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_package_function' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_package_function>
            nextitem: <Function test_class_with_get_method>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_package_function>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_package_function>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_package_function>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_package_function>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_package_function>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_package_function>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_package_function>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_package_function>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_package_function' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_package_function' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_package_function' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_matlabify.py::test_package_function
            location: ('tests/test_matlabify.py', 311, 'test_package_function')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_class_with_get_method>
          nextitem: <Function test_index>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_matlabify.py::test_class_with_get_method
            location: ('tests/test_matlabify.py', 324, 'test_class_with_get_method')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_class_with_get_method>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_class_with_get_method>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_class_with_get_method>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7ca8220> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_class_with_get_method>>
          finish pytest_fixture_setup --> <SphinxTestApp buildername='html'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_class_with_get_method>>
          finish pytest_fixture_setup --> <MatModule: "test_data"> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_class_with_get_method>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_class_with_get_method' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_class_with_get_method' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_class_with_get_method' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_class_with_get_method>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_class_with_get_method>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_class_with_get_method>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_class_with_get_method' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_class_with_get_method' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_class_with_get_method' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_class_with_get_method>
            nextitem: <Function test_index>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_class_with_get_method>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mod' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'mod' for <Function test_class_with_get_method>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_class_with_get_method>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'app' for <Function test_class_with_get_method>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_class_with_get_method>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'make_app' for <Function test_class_with_get_method>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_matlabify.py'>
              request: <SubRequest 'test_params' for <Function test_class_with_get_method>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_class_with_get_method>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_matlabify.py::test_class_with_get_method' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_matlabify.py::test_class_with_get_method' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_matlabify.py::test_class_with_get_method' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_matlabify.py::test_class_with_get_method
            location: ('tests/test_matlabify.py', 324, 'test_class_with_get_method')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_index>
          nextitem: <Function test_index_auto_link_all>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_module_class_names.py::test_index
            location: ('tests/test_module_class_names.py', 22, 'test_index')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_index>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_module_class_names.py'>
              request: <SubRequest 'rootdir' for <Function test_index>>
          finish pytest_fixture_setup --> /home/remi-gau/github/matlabdomain/tests [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_module_class_names.py'>
              request: <SubRequest 'test_params' for <Function test_index>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_module_class_names.py'>
              request: <SubRequest 'make_app' for <Function test_index>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7a1d9e0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_index>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_module_class_names.py::test_index' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_module_class_names.py::test_index' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_module_class_names.py::test_index' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_index>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_index>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_index>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_module_class_names.py::test_index' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_module_class_names.py::test_index' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_module_class_names.py::test_index' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_index>
            nextitem: <Function test_index_auto_link_all>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_module_class_names.py'>
              request: <SubRequest 'make_app' for <Function test_index>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_module_class_names.py'>
              request: <SubRequest 'make_app' for <Function test_index>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_module_class_names.py'>
              request: <SubRequest 'test_params' for <Function test_index>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_index>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_module_class_names.py::test_index' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_module_class_names.py::test_index' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_module_class_names.py::test_index' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_module_class_names.py::test_index
            location: ('tests/test_module_class_names.py', 22, 'test_index')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_index_auto_link_all>
          nextitem: <Function test_make>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_module_class_names.py::test_index_auto_link_all
            location: ('tests/test_module_class_names.py', 36, 'test_index_auto_link_all')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_index_auto_link_all>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_module_class_names.py'>
              request: <SubRequest 'test_params' for <Function test_index_auto_link_all>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_module_class_names.py'>
              request: <SubRequest 'make_app' for <Function test_index_auto_link_all>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea77c6340> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_index_auto_link_all>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_module_class_names.py::test_index_auto_link_all' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_module_class_names.py::test_index_auto_link_all' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_module_class_names.py::test_index_auto_link_all' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_index_auto_link_all>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_index_auto_link_all>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_index_auto_link_all>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_module_class_names.py::test_index_auto_link_all' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_module_class_names.py::test_index_auto_link_all' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_module_class_names.py::test_index_auto_link_all' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_index_auto_link_all>
            nextitem: <Function test_make>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_module_class_names.py'>
              request: <SubRequest 'make_app' for <Function test_index_auto_link_all>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_module_class_names.py'>
              request: <SubRequest 'make_app' for <Function test_index_auto_link_all>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_module_class_names.py'>
              request: <SubRequest 'test_params' for <Function test_index_auto_link_all>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_module_class_names.py'>
              request: <SubRequest 'rootdir' for <Function test_index>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_index_auto_link_all>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_module_class_names.py::test_index_auto_link_all' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_module_class_names.py::test_index_auto_link_all' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_module_class_names.py::test_index_auto_link_all' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_module_class_names.py::test_index_auto_link_all
            location: ('tests/test_module_class_names.py', 36, 'test_index_auto_link_all')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_make>
          nextitem: <Function test_first>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_no_matlab_src_dir.py::test_make
            location: ('tests/test_no_matlab_src_dir.py', 24, 'test_make')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_make>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_no_matlab_src_dir.py'>
              request: <SubRequest 'rootdir' for <Function test_make>>
          finish pytest_fixture_setup --> /home/remi-gau/github/matlabdomain/tests [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_no_matlab_src_dir.py'>
              request: <SubRequest 'test_params' for <Function test_make>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_no_matlab_src_dir.py'>
              request: <SubRequest 'make_app' for <Function test_make>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7dc8b80> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_no_matlab_src_dir.py::test_make' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_no_matlab_src_dir.py::test_make' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_no_matlab_src_dir.py::test_make' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_make>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_make>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_no_matlab_src_dir.py::test_make' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_no_matlab_src_dir.py::test_make' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_no_matlab_src_dir.py::test_make' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_make>
            nextitem: <Function test_first>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_no_matlab_src_dir.py'>
              request: <SubRequest 'make_app' for <Function test_make>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_no_matlab_src_dir.py'>
              request: <SubRequest 'make_app' for <Function test_make>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_no_matlab_src_dir.py'>
              request: <SubRequest 'test_params' for <Function test_make>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_no_matlab_src_dir.py'>
              request: <SubRequest 'rootdir' for <Function test_make>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_make>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_no_matlab_src_dir.py::test_make' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_no_matlab_src_dir.py::test_make' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_no_matlab_src_dir.py::test_make' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_no_matlab_src_dir.py::test_make
            location: ('tests/test_no_matlab_src_dir.py', 24, 'test_make')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_first>
          nextitem: <Function test_second>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_numad.py::test_first
            location: ('tests/test_numad.py', 24, 'test_first')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_first>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_numad.py'>
              request: <SubRequest 'rootdir' for <Function test_first>>
          finish pytest_fixture_setup --> /home/remi-gau/github/matlabdomain/tests [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_numad.py'>
              request: <SubRequest 'test_params' for <Function test_first>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_numad.py'>
              request: <SubRequest 'make_app' for <Function test_first>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7890220> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_first>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_numad.py::test_first' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_numad.py::test_first' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_numad.py::test_first' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_first>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_first>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_first>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_numad.py::test_first' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_numad.py::test_first' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_numad.py::test_first' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_first>
            nextitem: <Function test_second>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_numad.py'>
              request: <SubRequest 'make_app' for <Function test_first>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_numad.py'>
              request: <SubRequest 'make_app' for <Function test_first>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_numad.py'>
              request: <SubRequest 'test_params' for <Function test_first>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_first>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_numad.py::test_first' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_numad.py::test_first' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_numad.py::test_first' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_numad.py::test_first
            location: ('tests/test_numad.py', 24, 'test_first')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_second>
          nextitem: <Function test_with_prefix>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_numad.py::test_second
            location: ('tests/test_numad.py', 37, 'test_second')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_second>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_numad.py'>
              request: <SubRequest 'test_params' for <Function test_second>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_numad.py'>
              request: <SubRequest 'make_app' for <Function test_second>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7cab2e0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_second>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_numad.py::test_second' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_numad.py::test_second' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_numad.py::test_second' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_second>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_second>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_second>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_numad.py::test_second' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_numad.py::test_second' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_numad.py::test_second' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_second>
            nextitem: <Function test_with_prefix>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_numad.py'>
              request: <SubRequest 'make_app' for <Function test_second>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_numad.py'>
              request: <SubRequest 'make_app' for <Function test_second>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_numad.py'>
              request: <SubRequest 'test_params' for <Function test_second>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_numad.py'>
              request: <SubRequest 'rootdir' for <Function test_first>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_second>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_numad.py::test_second' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_numad.py::test_second' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_numad.py::test_second' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_numad.py::test_second
            location: ('tests/test_numad.py', 37, 'test_second')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_with_prefix>
          nextitem: <Function test_without_prefix>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_package_links.py::test_with_prefix
            location: ('tests/test_package_links.py', 24, 'test_with_prefix')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_with_prefix>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_package_links.py'>
              request: <SubRequest 'rootdir' for <Function test_with_prefix>>
          finish pytest_fixture_setup --> /home/remi-gau/github/matlabdomain/tests [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_package_links.py'>
              request: <SubRequest 'test_params' for <Function test_with_prefix>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_package_links.py'>
              request: <SubRequest 'make_app' for <Function test_with_prefix>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea76c8680> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_with_prefix>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_package_links.py::test_with_prefix' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_package_links.py::test_with_prefix' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_package_links.py::test_with_prefix' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_with_prefix>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_with_prefix>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_with_prefix>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_package_links.py::test_with_prefix' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_package_links.py::test_with_prefix' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_package_links.py::test_with_prefix' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_with_prefix>
            nextitem: <Function test_without_prefix>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_package_links.py'>
              request: <SubRequest 'make_app' for <Function test_with_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_package_links.py'>
              request: <SubRequest 'make_app' for <Function test_with_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_package_links.py'>
              request: <SubRequest 'test_params' for <Function test_with_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_with_prefix>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_package_links.py::test_with_prefix' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_package_links.py::test_with_prefix' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_package_links.py::test_with_prefix' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_package_links.py::test_with_prefix
            location: ('tests/test_package_links.py', 24, 'test_with_prefix')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_without_prefix>
          nextitem: <Function test_with_prefix>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_package_links.py::test_without_prefix
            location: ('tests/test_package_links.py', 40, 'test_without_prefix')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_without_prefix>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_package_links.py'>
              request: <SubRequest 'test_params' for <Function test_without_prefix>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_package_links.py'>
              request: <SubRequest 'make_app' for <Function test_without_prefix>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea74ff1a0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_without_prefix>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_package_links.py::test_without_prefix' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_package_links.py::test_without_prefix' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_package_links.py::test_without_prefix' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_without_prefix>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_without_prefix>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_without_prefix>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_package_links.py::test_without_prefix' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_package_links.py::test_without_prefix' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_package_links.py::test_without_prefix' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_without_prefix>
            nextitem: <Function test_with_prefix>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_package_links.py'>
              request: <SubRequest 'make_app' for <Function test_without_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_package_links.py'>
              request: <SubRequest 'make_app' for <Function test_without_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_package_links.py'>
              request: <SubRequest 'test_params' for <Function test_without_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_package_links.py'>
              request: <SubRequest 'rootdir' for <Function test_with_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_without_prefix>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_package_links.py::test_without_prefix' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_package_links.py::test_without_prefix' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_package_links.py::test_without_prefix' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_package_links.py::test_without_prefix
            location: ('tests/test_package_links.py', 40, 'test_without_prefix')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_with_prefix>
          nextitem: <Function test_without_prefix>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_package_prefix.py::test_with_prefix
            location: ('tests/test_package_prefix.py', 25, 'test_with_prefix')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_with_prefix>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_package_prefix.py'>
              request: <SubRequest 'rootdir' for <Function test_with_prefix>>
          finish pytest_fixture_setup --> /home/remi-gau/github/matlabdomain/tests [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_package_prefix.py'>
              request: <SubRequest 'test_params' for <Function test_with_prefix>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_package_prefix.py'>
              request: <SubRequest 'make_app' for <Function test_with_prefix>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7ac1120> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_with_prefix>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_package_prefix.py::test_with_prefix' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_package_prefix.py::test_with_prefix' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_package_prefix.py::test_with_prefix' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_with_prefix>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_with_prefix>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_with_prefix>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_package_prefix.py::test_with_prefix' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_package_prefix.py::test_with_prefix' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_package_prefix.py::test_with_prefix' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_with_prefix>
            nextitem: <Function test_without_prefix>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_package_prefix.py'>
              request: <SubRequest 'make_app' for <Function test_with_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_package_prefix.py'>
              request: <SubRequest 'make_app' for <Function test_with_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_package_prefix.py'>
              request: <SubRequest 'test_params' for <Function test_with_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_with_prefix>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_package_prefix.py::test_with_prefix' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_package_prefix.py::test_with_prefix' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_package_prefix.py::test_with_prefix' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_package_prefix.py::test_with_prefix
            location: ('tests/test_package_prefix.py', 25, 'test_with_prefix')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_without_prefix>
          nextitem: <Function test_ClassExample>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_package_prefix.py::test_without_prefix
            location: ('tests/test_package_prefix.py', 37, 'test_without_prefix')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_without_prefix>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_package_prefix.py'>
              request: <SubRequest 'test_params' for <Function test_without_prefix>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_package_prefix.py'>
              request: <SubRequest 'make_app' for <Function test_without_prefix>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7dca0c0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_without_prefix>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_package_prefix.py::test_without_prefix' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_package_prefix.py::test_without_prefix' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_package_prefix.py::test_without_prefix' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_without_prefix>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_without_prefix>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_without_prefix>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_package_prefix.py::test_without_prefix' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_package_prefix.py::test_without_prefix' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_package_prefix.py::test_without_prefix' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_without_prefix>
            nextitem: <Function test_ClassExample>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_package_prefix.py'>
              request: <SubRequest 'make_app' for <Function test_without_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_package_prefix.py'>
              request: <SubRequest 'make_app' for <Function test_without_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_package_prefix.py'>
              request: <SubRequest 'test_params' for <Function test_without_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_package_prefix.py'>
              request: <SubRequest 'rootdir' for <Function test_with_prefix>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_without_prefix>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_package_prefix.py::test_without_prefix' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_package_prefix.py::test_without_prefix' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_package_prefix.py::test_without_prefix' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_package_prefix.py::test_without_prefix
            location: ('tests/test_package_prefix.py', 37, 'test_without_prefix')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassExample>
          nextitem: <Function test_comment_after_docstring>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassExample
            location: ('tests/test_parse_mfile.py', 20, 'test_ClassExample')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassExample>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassExample>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassExample' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassExample' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassExample' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassExample>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassExample>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassExample>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassExample' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassExample' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassExample' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassExample>
            nextitem: <Function test_comment_after_docstring>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassExample>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassExample' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassExample' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassExample' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassExample
            location: ('tests/test_parse_mfile.py', 20, 'test_ClassExample')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_comment_after_docstring>
          nextitem: <Function test_docstring_no_newline>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_comment_after_docstring
            location: ('tests/test_parse_mfile.py', 38, 'test_comment_after_docstring')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_comment_after_docstring>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_comment_after_docstring>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_comment_after_docstring' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_comment_after_docstring' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_comment_after_docstring' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_comment_after_docstring>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_comment_after_docstring>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_comment_after_docstring>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_comment_after_docstring' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_comment_after_docstring' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_comment_after_docstring' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_comment_after_docstring>
            nextitem: <Function test_docstring_no_newline>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_comment_after_docstring>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_comment_after_docstring' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_comment_after_docstring' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_comment_after_docstring' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_comment_after_docstring
            location: ('tests/test_parse_mfile.py', 38, 'test_comment_after_docstring')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_docstring_no_newline>
          nextitem: <Function test_ellipsis_after_equals>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_docstring_no_newline
            location: ('tests/test_parse_mfile.py', 47, 'test_docstring_no_newline')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_docstring_no_newline>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_docstring_no_newline>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_docstring_no_newline' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_docstring_no_newline' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_docstring_no_newline' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_docstring_no_newline>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_docstring_no_newline>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_docstring_no_newline>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_docstring_no_newline' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_docstring_no_newline' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_docstring_no_newline' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_docstring_no_newline>
            nextitem: <Function test_ellipsis_after_equals>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_docstring_no_newline>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_docstring_no_newline' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_docstring_no_newline' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_docstring_no_newline' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_docstring_no_newline
            location: ('tests/test_parse_mfile.py', 47, 'test_docstring_no_newline')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ellipsis_after_equals>
          nextitem: <Function test_ellipsis_empty_output>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ellipsis_after_equals
            location: ('tests/test_parse_mfile.py', 56, 'test_ellipsis_after_equals')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ellipsis_after_equals>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ellipsis_after_equals>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ellipsis_after_equals' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_after_equals' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_after_equals' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ellipsis_after_equals>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ellipsis_after_equals>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ellipsis_after_equals>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ellipsis_after_equals' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_after_equals' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_after_equals' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ellipsis_after_equals>
            nextitem: <Function test_ellipsis_empty_output>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ellipsis_after_equals>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ellipsis_after_equals' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_after_equals' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_after_equals' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ellipsis_after_equals
            location: ('tests/test_parse_mfile.py', 56, 'test_ellipsis_after_equals')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ellipsis_empty_output>
          nextitem: <Function test_ellipsis_in_comment>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ellipsis_empty_output
            location: ('tests/test_parse_mfile.py', 65, 'test_ellipsis_empty_output')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ellipsis_empty_output>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ellipsis_empty_output>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ellipsis_empty_output' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_empty_output' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_empty_output' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ellipsis_empty_output>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ellipsis_empty_output>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ellipsis_empty_output>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ellipsis_empty_output' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_empty_output' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_empty_output' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ellipsis_empty_output>
            nextitem: <Function test_ellipsis_in_comment>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ellipsis_empty_output>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ellipsis_empty_output' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_empty_output' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_empty_output' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ellipsis_empty_output
            location: ('tests/test_parse_mfile.py', 65, 'test_ellipsis_empty_output')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ellipsis_in_comment>
          nextitem: <Function test_ellipsis_in_output>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ellipsis_in_comment
            location: ('tests/test_parse_mfile.py', 74, 'test_ellipsis_in_comment')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ellipsis_in_comment>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ellipsis_in_comment>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_comment' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_comment' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_comment' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ellipsis_in_comment>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ellipsis_in_comment>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ellipsis_in_comment>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_comment' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_comment' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_comment' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ellipsis_in_comment>
            nextitem: <Function test_ellipsis_in_output>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ellipsis_in_comment>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_comment' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_comment' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_comment' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ellipsis_in_comment
            location: ('tests/test_parse_mfile.py', 74, 'test_ellipsis_in_comment')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ellipsis_in_output>
          nextitem: <Function test_ellipsis_in_output_multiple>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ellipsis_in_output
            location: ('tests/test_parse_mfile.py', 83, 'test_ellipsis_in_output')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ellipsis_in_output>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ellipsis_in_output>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_output' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_output' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_output' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ellipsis_in_output>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ellipsis_in_output>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ellipsis_in_output>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_output' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_output' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_output' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ellipsis_in_output>
            nextitem: <Function test_ellipsis_in_output_multiple>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ellipsis_in_output>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_output' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_output' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_output' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ellipsis_in_output
            location: ('tests/test_parse_mfile.py', 83, 'test_ellipsis_in_output')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ellipsis_in_output_multiple>
          nextitem: <Function test_no_docstring>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ellipsis_in_output_multiple
            location: ('tests/test_parse_mfile.py', 92, 'test_ellipsis_in_output_multiple')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ellipsis_in_output_multiple>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ellipsis_in_output_multiple>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_output_multiple' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_output_multiple' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_output_multiple' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ellipsis_in_output_multiple>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ellipsis_in_output_multiple>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ellipsis_in_output_multiple>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_output_multiple' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_output_multiple' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_output_multiple' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ellipsis_in_output_multiple>
            nextitem: <Function test_no_docstring>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ellipsis_in_output_multiple>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_output_multiple' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_output_multiple' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ellipsis_in_output_multiple' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ellipsis_in_output_multiple
            location: ('tests/test_parse_mfile.py', 92, 'test_ellipsis_in_output_multiple')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_no_docstring>
          nextitem: <Function test_no_output>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_no_docstring
            location: ('tests/test_parse_mfile.py', 101, 'test_no_docstring')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_no_docstring>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_docstring>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_no_docstring' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_no_docstring' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_no_docstring' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_no_docstring>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_no_docstring>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_docstring>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_no_docstring' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_no_docstring' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_no_docstring' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_no_docstring>
            nextitem: <Function test_no_output>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_docstring>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_no_docstring' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_no_docstring' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_no_docstring' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_no_docstring
            location: ('tests/test_parse_mfile.py', 101, 'test_no_docstring')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_no_output>
          nextitem: <Function test_no_input_parentheses>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_no_output
            location: ('tests/test_parse_mfile.py', 110, 'test_no_output')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_no_output>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_output>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_no_output' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_no_output' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_no_output' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_no_output>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_no_output>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_output>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_no_output' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_no_output' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_no_output' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_no_output>
            nextitem: <Function test_no_input_parentheses>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_output>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_no_output' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_no_output' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_no_output' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_no_output
            location: ('tests/test_parse_mfile.py', 110, 'test_no_output')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_no_input_parentheses>
          nextitem: <Function test_no_spaces>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_no_input_parentheses
            location: ('tests/test_parse_mfile.py', 119, 'test_no_input_parentheses')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_no_input_parentheses>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_input_parentheses>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_no_input_parentheses' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_no_input_parentheses' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_no_input_parentheses' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_no_input_parentheses>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_no_input_parentheses>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_input_parentheses>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_no_input_parentheses' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_no_input_parentheses' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_no_input_parentheses' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_no_input_parentheses>
            nextitem: <Function test_no_spaces>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_input_parentheses>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_no_input_parentheses' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_no_input_parentheses' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_no_input_parentheses' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_no_input_parentheses
            location: ('tests/test_parse_mfile.py', 119, 'test_no_input_parentheses')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_no_spaces>
          nextitem: <Function test_with_tabs>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_no_spaces
            location: ('tests/test_parse_mfile.py', 128, 'test_no_spaces')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_no_spaces>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_spaces>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_no_spaces' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_no_spaces' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_no_spaces' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_no_spaces>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_no_spaces>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_spaces>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_no_spaces' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_no_spaces' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_no_spaces' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_no_spaces>
            nextitem: <Function test_with_tabs>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_spaces>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_no_spaces' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_no_spaces' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_no_spaces' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_no_spaces
            location: ('tests/test_parse_mfile.py', 128, 'test_no_spaces')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_with_tabs>
          nextitem: <Function test_ClassWithEndOfLineComment>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_with_tabs
            location: ('tests/test_parse_mfile.py', 137, 'test_with_tabs')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_with_tabs>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_with_tabs>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_with_tabs' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_with_tabs' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_with_tabs' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_with_tabs>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_with_tabs>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_with_tabs>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_with_tabs' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_with_tabs' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_with_tabs' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_with_tabs>
            nextitem: <Function test_ClassWithEndOfLineComment>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_with_tabs>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_with_tabs' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_with_tabs' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_with_tabs' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_with_tabs
            location: ('tests/test_parse_mfile.py', 137, 'test_with_tabs')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithEndOfLineComment>
          nextitem: <Function test_ClassWithEvent>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithEndOfLineComment
            location: ('tests/test_parse_mfile.py', 146, 'test_ClassWithEndOfLineComment')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithEndOfLineComment>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithEndOfLineComment>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithEndOfLineComment' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEndOfLineComment' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEndOfLineComment' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithEndOfLineComment>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithEndOfLineComment>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithEndOfLineComment>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithEndOfLineComment' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEndOfLineComment' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEndOfLineComment' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithEndOfLineComment>
            nextitem: <Function test_ClassWithEvent>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithEndOfLineComment>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithEndOfLineComment' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEndOfLineComment' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEndOfLineComment' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithEndOfLineComment
            location: ('tests/test_parse_mfile.py', 146, 'test_ClassWithEndOfLineComment')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithEvent>
          nextitem: <Function test_ClassWithFunctionArguments>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithEvent
            location: ('tests/test_parse_mfile.py', 163, 'test_ClassWithEvent')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithEvent>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithEvent>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithEvent' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEvent' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEvent' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithEvent>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithEvent>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithEvent>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithEvent' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEvent' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEvent' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithEvent>
            nextitem: <Function test_ClassWithFunctionArguments>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithEvent>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithEvent' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEvent' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEvent' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithEvent
            location: ('tests/test_parse_mfile.py', 163, 'test_ClassWithEvent')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithFunctionArguments>
          nextitem: <Function test_EnumerationBool>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithFunctionArguments
            location: ('tests/test_parse_mfile.py', 171, 'test_ClassWithFunctionArguments')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithFunctionArguments>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithFunctionArguments>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithFunctionArguments' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithFunctionArguments' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithFunctionArguments' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithFunctionArguments>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithFunctionArguments>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithFunctionArguments>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithFunctionArguments' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithFunctionArguments' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithFunctionArguments' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithFunctionArguments>
            nextitem: <Function test_EnumerationBool>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithFunctionArguments>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithFunctionArguments' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithFunctionArguments' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithFunctionArguments' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithFunctionArguments
            location: ('tests/test_parse_mfile.py', 171, 'test_ClassWithFunctionArguments')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_EnumerationBool>
          nextitem: <Function test_no_input_no_output_no_parentheses>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_EnumerationBool
            location: ('tests/test_parse_mfile.py', 192, 'test_EnumerationBool')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_EnumerationBool>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_EnumerationBool>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_EnumerationBool' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_EnumerationBool' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_EnumerationBool' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_EnumerationBool>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_EnumerationBool>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_EnumerationBool>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_EnumerationBool' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_EnumerationBool' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_EnumerationBool' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_EnumerationBool>
            nextitem: <Function test_no_input_no_output_no_parentheses>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_EnumerationBool>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_EnumerationBool' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_EnumerationBool' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_EnumerationBool' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_EnumerationBool
            location: ('tests/test_parse_mfile.py', 192, 'test_EnumerationBool')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_no_input_no_output_no_parentheses>
          nextitem: <Function test_no_input_no_parentheses_no_docstring>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_no_input_no_output_no_parentheses
            location: ('tests/test_parse_mfile.py', 200, 'test_no_input_no_output_no_parentheses')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_no_input_no_output_no_parentheses>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_input_no_output_no_parentheses>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_no_input_no_output_no_parentheses' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_no_input_no_output_no_parentheses' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_no_input_no_output_no_parentheses' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_no_input_no_output_no_parentheses>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_no_input_no_output_no_parentheses>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_input_no_output_no_parentheses>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_no_input_no_output_no_parentheses' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_no_input_no_output_no_parentheses' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_no_input_no_output_no_parentheses' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_no_input_no_output_no_parentheses>
            nextitem: <Function test_no_input_no_parentheses_no_docstring>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_input_no_output_no_parentheses>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_no_input_no_output_no_parentheses' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_no_input_no_output_no_parentheses' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_no_input_no_output_no_parentheses' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_no_input_no_output_no_parentheses
            location: ('tests/test_parse_mfile.py', 200, 'test_no_input_no_output_no_parentheses')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_no_input_no_parentheses_no_docstring>
          nextitem: <Function test_ClassWithCommentHeader>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_no_input_no_parentheses_no_docstring
            location: ('tests/test_parse_mfile.py', 212, 'test_no_input_no_parentheses_no_docstring')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_no_input_no_parentheses_no_docstring>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_input_no_parentheses_no_docstring>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_no_input_no_parentheses_no_docstring' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_no_input_no_parentheses_no_docstring' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_no_input_no_parentheses_no_docstring' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_no_input_no_parentheses_no_docstring>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_no_input_no_parentheses_no_docstring>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_input_no_parentheses_no_docstring>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_no_input_no_parentheses_no_docstring' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_no_input_no_parentheses_no_docstring' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_no_input_no_parentheses_no_docstring' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_no_input_no_parentheses_no_docstring>
            nextitem: <Function test_ClassWithCommentHeader>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_input_no_parentheses_no_docstring>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_no_input_no_parentheses_no_docstring' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_no_input_no_parentheses_no_docstring' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_no_input_no_parentheses_no_docstring' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_no_input_no_parentheses_no_docstring
            location: ('tests/test_parse_mfile.py', 212, 'test_no_input_no_parentheses_no_docstring')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithCommentHeader>
          nextitem: <Function test_with_comment_header>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithCommentHeader
            location: ('tests/test_parse_mfile.py', 224, 'test_ClassWithCommentHeader')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithCommentHeader>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithCommentHeader>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithCommentHeader' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithCommentHeader' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithCommentHeader' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithCommentHeader>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithCommentHeader>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithCommentHeader>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithCommentHeader' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithCommentHeader' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithCommentHeader' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithCommentHeader>
            nextitem: <Function test_with_comment_header>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithCommentHeader>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithCommentHeader' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithCommentHeader' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithCommentHeader' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithCommentHeader
            location: ('tests/test_parse_mfile.py', 224, 'test_ClassWithCommentHeader')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_with_comment_header>
          nextitem: <Function test_script_with_comment_header>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_with_comment_header
            location: ('tests/test_parse_mfile.py', 235, 'test_with_comment_header')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_with_comment_header>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_with_comment_header>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_with_comment_header' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_with_comment_header' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_with_comment_header' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_with_comment_header>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_with_comment_header>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_with_comment_header>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_with_comment_header' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_with_comment_header' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_with_comment_header' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_with_comment_header>
            nextitem: <Function test_script_with_comment_header>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_with_comment_header>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_with_comment_header' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_with_comment_header' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_with_comment_header' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_with_comment_header
            location: ('tests/test_parse_mfile.py', 235, 'test_with_comment_header')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_script_with_comment_header>
          nextitem: <Function test_script_with_comment_header_2>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_script_with_comment_header
            location: ('tests/test_parse_mfile.py', 242, 'test_script_with_comment_header')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_script_with_comment_header>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_script_with_comment_header>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_script_with_comment_header>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_script_with_comment_header>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_script_with_comment_header>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_script_with_comment_header>
            nextitem: <Function test_script_with_comment_header_2>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_script_with_comment_header>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_script_with_comment_header
            location: ('tests/test_parse_mfile.py', 242, 'test_script_with_comment_header')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_script_with_comment_header_2>
          nextitem: <Function test_script_with_comment_header_3>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_script_with_comment_header_2
            location: ('tests/test_parse_mfile.py', 262, 'test_script_with_comment_header_2')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_script_with_comment_header_2>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_script_with_comment_header_2>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_2' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_2' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_2' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_script_with_comment_header_2>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_script_with_comment_header_2>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_script_with_comment_header_2>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_2' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_2' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_2' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_script_with_comment_header_2>
            nextitem: <Function test_script_with_comment_header_3>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_script_with_comment_header_2>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_2' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_2' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_2' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_script_with_comment_header_2
            location: ('tests/test_parse_mfile.py', 262, 'test_script_with_comment_header_2')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_script_with_comment_header_3>
          nextitem: <Function test_script_with_comment_header_4>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_script_with_comment_header_3
            location: ('tests/test_parse_mfile.py', 282, 'test_script_with_comment_header_3')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_script_with_comment_header_3>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_script_with_comment_header_3>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_3' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_3' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_3' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_script_with_comment_header_3>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_script_with_comment_header_3>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_script_with_comment_header_3>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_3' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_3' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_3' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_script_with_comment_header_3>
            nextitem: <Function test_script_with_comment_header_4>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_script_with_comment_header_3>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_3' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_3' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_3' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_script_with_comment_header_3
            location: ('tests/test_parse_mfile.py', 282, 'test_script_with_comment_header_3')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_script_with_comment_header_4>
          nextitem: <Function test_PropTypeOld>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_script_with_comment_header_4
            location: ('tests/test_parse_mfile.py', 295, 'test_script_with_comment_header_4')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_script_with_comment_header_4>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_script_with_comment_header_4>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_4' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_4' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_4' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_script_with_comment_header_4>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_script_with_comment_header_4>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_script_with_comment_header_4>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_4' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_4' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_4' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_script_with_comment_header_4>
            nextitem: <Function test_PropTypeOld>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_script_with_comment_header_4>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_4' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_4' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_script_with_comment_header_4' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_script_with_comment_header_4
            location: ('tests/test_parse_mfile.py', 295, 'test_script_with_comment_header_4')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_PropTypeOld>
          nextitem: <Function test_ValidateProps>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_PropTypeOld
            location: ('tests/test_parse_mfile.py', 308, 'test_PropTypeOld')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_PropTypeOld>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_PropTypeOld>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_PropTypeOld' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_PropTypeOld' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_PropTypeOld' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_PropTypeOld>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_PropTypeOld>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_PropTypeOld>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_PropTypeOld' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_PropTypeOld' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_PropTypeOld' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_PropTypeOld>
            nextitem: <Function test_ValidateProps>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_PropTypeOld>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_PropTypeOld' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_PropTypeOld' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_PropTypeOld' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_PropTypeOld
            location: ('tests/test_parse_mfile.py', 308, 'test_PropTypeOld')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ValidateProps>
          nextitem: <Function test_ClassWithMethodAttributes>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ValidateProps
            location: ('tests/test_parse_mfile.py', 349, 'test_ValidateProps')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ValidateProps>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ValidateProps>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ValidateProps' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ValidateProps' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ValidateProps' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ValidateProps>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ValidateProps>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ValidateProps>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ValidateProps' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ValidateProps' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ValidateProps' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ValidateProps>
            nextitem: <Function test_ClassWithMethodAttributes>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ValidateProps>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ValidateProps' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ValidateProps' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ValidateProps' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ValidateProps
            location: ('tests/test_parse_mfile.py', 349, 'test_ValidateProps')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithMethodAttributes>
          nextitem: <Function test_ClassWithPropertyAttributes>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithMethodAttributes
            location: ('tests/test_parse_mfile.py', 356, 'test_ClassWithMethodAttributes')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithMethodAttributes>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithMethodAttributes>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithMethodAttributes' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithMethodAttributes' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithMethodAttributes' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithMethodAttributes>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithMethodAttributes>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithMethodAttributes>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithMethodAttributes' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithMethodAttributes' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithMethodAttributes' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithMethodAttributes>
            nextitem: <Function test_ClassWithPropertyAttributes>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithMethodAttributes>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithMethodAttributes' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithMethodAttributes' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithMethodAttributes' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithMethodAttributes
            location: ('tests/test_parse_mfile.py', 356, 'test_ClassWithMethodAttributes')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithPropertyAttributes>
          nextitem: <Function test_ClassWithoutIndent>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithPropertyAttributes
            location: ('tests/test_parse_mfile.py', 376, 'test_ClassWithPropertyAttributes')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithPropertyAttributes>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithPropertyAttributes>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyAttributes' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyAttributes' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyAttributes' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithPropertyAttributes>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithPropertyAttributes>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithPropertyAttributes>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyAttributes' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyAttributes' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyAttributes' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithPropertyAttributes>
            nextitem: <Function test_ClassWithoutIndent>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithPropertyAttributes>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyAttributes' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyAttributes' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyAttributes' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithPropertyAttributes
            location: ('tests/test_parse_mfile.py', 376, 'test_ClassWithPropertyAttributes')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithoutIndent>
          nextitem: <Function test_f_with_utf8>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithoutIndent
            location: ('tests/test_parse_mfile.py', 408, 'test_ClassWithoutIndent')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithoutIndent>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithoutIndent>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithoutIndent' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithoutIndent' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithoutIndent' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithoutIndent>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithoutIndent>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithoutIndent>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithoutIndent' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithoutIndent' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithoutIndent' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithoutIndent>
            nextitem: <Function test_f_with_utf8>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithoutIndent>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithoutIndent' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithoutIndent' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithoutIndent' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithoutIndent
            location: ('tests/test_parse_mfile.py', 408, 'test_ClassWithoutIndent')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_f_with_utf8>
          nextitem: <Function test_file_parsing_encoding_can_be_specified>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_f_with_utf8
            location: ('tests/test_parse_mfile.py', 415, 'test_f_with_utf8')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_f_with_utf8>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_utf8>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_utf8' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_utf8' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_utf8' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_f_with_utf8>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_f_with_utf8>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_utf8>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_utf8' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_utf8' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_utf8' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_f_with_utf8>
            nextitem: <Function test_file_parsing_encoding_can_be_specified>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_utf8>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_utf8' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_utf8' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_utf8' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_f_with_utf8
            location: ('tests/test_parse_mfile.py', 415, 'test_f_with_utf8')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_file_parsing_encoding_can_be_specified>
          nextitem: <Function test_file_parsing_with_no_encoding_specified>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_file_parsing_encoding_can_be_specified
            location: ('tests/test_parse_mfile.py', 422, 'test_file_parsing_encoding_can_be_specified')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_file_parsing_encoding_can_be_specified>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_file_parsing_encoding_can_be_specified>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_file_parsing_encoding_can_be_specified' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_file_parsing_encoding_can_be_specified' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_file_parsing_encoding_can_be_specified' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_file_parsing_encoding_can_be_specified>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_file_parsing_encoding_can_be_specified>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_file_parsing_encoding_can_be_specified>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_file_parsing_encoding_can_be_specified' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_file_parsing_encoding_can_be_specified' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_file_parsing_encoding_can_be_specified' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_file_parsing_encoding_can_be_specified>
            nextitem: <Function test_file_parsing_with_no_encoding_specified>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_file_parsing_encoding_can_be_specified>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_file_parsing_encoding_can_be_specified' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_file_parsing_encoding_can_be_specified' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_file_parsing_encoding_can_be_specified' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_file_parsing_encoding_can_be_specified
            location: ('tests/test_parse_mfile.py', 422, 'test_file_parsing_encoding_can_be_specified')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_file_parsing_with_no_encoding_specified>
          nextitem: <Function test_ClassWithBuiltinOverload>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_file_parsing_with_no_encoding_specified
            location: ('tests/test_parse_mfile.py', 431, 'test_file_parsing_with_no_encoding_specified')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_file_parsing_with_no_encoding_specified>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_file_parsing_with_no_encoding_specified>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_file_parsing_with_no_encoding_specified' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_file_parsing_with_no_encoding_specified' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_file_parsing_with_no_encoding_specified' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_file_parsing_with_no_encoding_specified>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_file_parsing_with_no_encoding_specified>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_file_parsing_with_no_encoding_specified>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_file_parsing_with_no_encoding_specified' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_file_parsing_with_no_encoding_specified' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_file_parsing_with_no_encoding_specified' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_file_parsing_with_no_encoding_specified>
            nextitem: <Function test_ClassWithBuiltinOverload>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_file_parsing_with_no_encoding_specified>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_file_parsing_with_no_encoding_specified' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_file_parsing_with_no_encoding_specified' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_file_parsing_with_no_encoding_specified' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_file_parsing_with_no_encoding_specified
            location: ('tests/test_parse_mfile.py', 431, 'test_file_parsing_with_no_encoding_specified')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithBuiltinOverload>
          nextitem: <Function test_ClassWithBuiltinProperties>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithBuiltinOverload
            location: ('tests/test_parse_mfile.py', 438, 'test_ClassWithBuiltinOverload')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithBuiltinOverload>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithBuiltinOverload>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithBuiltinOverload' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithBuiltinOverload' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithBuiltinOverload' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithBuiltinOverload>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithBuiltinOverload>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithBuiltinOverload>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithBuiltinOverload' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithBuiltinOverload' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithBuiltinOverload' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithBuiltinOverload>
            nextitem: <Function test_ClassWithBuiltinProperties>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithBuiltinOverload>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithBuiltinOverload' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithBuiltinOverload' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithBuiltinOverload' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithBuiltinOverload
            location: ('tests/test_parse_mfile.py', 438, 'test_ClassWithBuiltinOverload')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithBuiltinProperties>
          nextitem: <Function test_f_with_name_mismatch>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithBuiltinProperties
            location: ('tests/test_parse_mfile.py', 447, 'test_ClassWithBuiltinProperties')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithBuiltinProperties>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithBuiltinProperties>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithBuiltinProperties' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithBuiltinProperties' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithBuiltinProperties' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithBuiltinProperties>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithBuiltinProperties>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithBuiltinProperties>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithBuiltinProperties' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithBuiltinProperties' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithBuiltinProperties' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithBuiltinProperties>
            nextitem: <Function test_f_with_name_mismatch>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithBuiltinProperties>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithBuiltinProperties' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithBuiltinProperties' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithBuiltinProperties' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithBuiltinProperties
            location: ('tests/test_parse_mfile.py', 447, 'test_ClassWithBuiltinProperties')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_f_with_name_mismatch>
          nextitem: <Function test_f_with_dummy_argument>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_f_with_name_mismatch
            location: ('tests/test_parse_mfile.py', 464, 'test_f_with_name_mismatch')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_f_with_name_mismatch>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='caplog' scope='function' baseid=''>
              request: <SubRequest 'caplog' for <Function test_f_with_name_mismatch>>
          finish pytest_fixture_setup --> <_pytest.logging.LogCaptureFixture object at 0x716ea7a16290> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_name_mismatch>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_name_mismatch' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_name_mismatch' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_name_mismatch' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_f_with_name_mismatch>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_f_with_name_mismatch>
            pytest_assertrepr_compare [hook]
                config: <_pytest.config.Config object at 0x716ea99eebd0>
                op: ==
                left: []
                right: [('sphinx.matlab-domain', 30, '[sphinxcontrib-matlabdomain] Unexpected function name: "f_name_with_mismatch". Expected "f_with_name_mismatch"in module "test_data".')]
            finish pytest_assertrepr_compare --> [['[] == [(\'sphinx.matlab-domain\', 30, \'[sphinxcontrib-matlabdomain] Unexpected function name: "f_name_with_mismatch". Expected "f_with_name_mismatch"in module "test_data".\')]', '', 'Right contains one more item: \x1b[0m(\x1b[33m\'\x1b[39;49;00m\x1b[33msphinx.matlab-domain\x1b[39;49;00m\x1b[33m\'\x1b[39;49;00m, \x1b[94m30\x1b[39;49;00m, \x1b[33m\'\x1b[39;49;00m\x1b[33m[sphinxcontrib-matlabdomain] Unexpected function name: \x1b[39;49;00m\x1b[33m"\x1b[39;49;00m\x1b[33mf_name_with_mismatch\x1b[39;49;00m\x1b[33m"\x1b[39;49;00m\x1b[33m. Expected \x1b[39;49;00m\x1b[33m"\x1b[39;49;00m\x1b[33mf_with_name_mismatch\x1b[39;49;00m\x1b[33m"\x1b[39;49;00m\x1b[33min module \x1b[39;49;00m\x1b[33m"\x1b[39;49;00m\x1b[33mtest_data\x1b[39;49;00m\x1b[33m"\x1b[39;49;00m\x1b[33m.\x1b[39;49;00m\x1b[33m\'\x1b[39;49;00m)\x1b[90m\x1b[39;49;00m', '', 'Full diff:', '\x1b[0m\x1b[92m+ []\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m- [\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m-     (\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', "\x1b[91m-         'sphinx.matlab-domain',\x1b[39;49;00m\x1b[90m\x1b[39;49;00m", '\x1b[91m-         30,\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', "\x1b[91m-         '[sphinxcontrib-matlabdomain] Unexpected function name: '\x1b[39;49;00m\x1b[90m\x1b[39;49;00m", '\x1b[91m-         \'"f_name_with_mismatch". Expected "f_with_name_mismatch"in module \'\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m-         \'"test_data".\',\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m-     ),\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m- ]\x1b[39;49;00m\x1b[90m\x1b[39;49;00m']] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_name_mismatch>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert [] == [(\'sphinx.matlab-domain\', 30, \'[sphinxcontrib-matlabdomain] Unexpected function name: ...[39;49;00m\n  \x1b[91m-     ),\x1b[39;49;00m\x1b[90m\x1b[39;49;00m\n  \x1b[91m- ]\x1b[39;49;00m\x1b[90m\x1b[39;49;00m') tblen=32>>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_name_mismatch' when='call' outcome='skipped'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_name_mismatch' when='call' outcome='skipped'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_name_mismatch' when='call' outcome='skipped'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('xfailed', 'x', 'XFAIL') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_f_with_name_mismatch>
            nextitem: <Function test_f_with_dummy_argument>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='caplog' scope='function' baseid=''>
              request: <SubRequest 'caplog' for <Function test_f_with_name_mismatch>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_name_mismatch>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_name_mismatch' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_name_mismatch' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_name_mismatch' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_f_with_name_mismatch
            location: ('tests/test_parse_mfile.py', 464, 'test_f_with_name_mismatch')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_f_with_dummy_argument>
          nextitem: <Function test_f_with_string_ellipsis>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_f_with_dummy_argument
            location: ('tests/test_parse_mfile.py', 482, 'test_f_with_dummy_argument')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_f_with_dummy_argument>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_dummy_argument>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_dummy_argument' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_dummy_argument' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_dummy_argument' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_f_with_dummy_argument>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_f_with_dummy_argument>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_dummy_argument>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_dummy_argument' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_dummy_argument' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_dummy_argument' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_f_with_dummy_argument>
            nextitem: <Function test_f_with_string_ellipsis>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_dummy_argument>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_dummy_argument' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_dummy_argument' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_dummy_argument' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_f_with_dummy_argument
            location: ('tests/test_parse_mfile.py', 482, 'test_f_with_dummy_argument')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_f_with_string_ellipsis>
          nextitem: <Function test_ClassWithFunctionVariable>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_f_with_string_ellipsis
            location: ('tests/test_parse_mfile.py', 491, 'test_f_with_string_ellipsis')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_f_with_string_ellipsis>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_string_ellipsis>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_string_ellipsis' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_string_ellipsis' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_string_ellipsis' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_f_with_string_ellipsis>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_f_with_string_ellipsis>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_string_ellipsis>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_string_ellipsis' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_string_ellipsis' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_string_ellipsis' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_f_with_string_ellipsis>
            nextitem: <Function test_ClassWithFunctionVariable>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_string_ellipsis>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_string_ellipsis' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_string_ellipsis' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_string_ellipsis' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_f_with_string_ellipsis
            location: ('tests/test_parse_mfile.py', 491, 'test_f_with_string_ellipsis')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithFunctionVariable>
          nextitem: <Function test_f_inputargs_error>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithFunctionVariable
            location: ('tests/test_parse_mfile.py', 498, 'test_ClassWithFunctionVariable')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithFunctionVariable>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithFunctionVariable>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithFunctionVariable' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithFunctionVariable' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithFunctionVariable' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithFunctionVariable>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithFunctionVariable>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithFunctionVariable>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithFunctionVariable' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithFunctionVariable' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithFunctionVariable' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithFunctionVariable>
            nextitem: <Function test_f_inputargs_error>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithFunctionVariable>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithFunctionVariable' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithFunctionVariable' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithFunctionVariable' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithFunctionVariable
            location: ('tests/test_parse_mfile.py', 498, 'test_ClassWithFunctionVariable')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_f_inputargs_error>
          nextitem: <Function test_ClassWithErrors>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_f_inputargs_error
            location: ('tests/test_parse_mfile.py', 509, 'test_f_inputargs_error')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_f_inputargs_error>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_inputargs_error>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_inputargs_error' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_inputargs_error' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_inputargs_error' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_f_inputargs_error>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_f_inputargs_error>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_inputargs_error>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_inputargs_error' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_inputargs_error' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_inputargs_error' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_f_inputargs_error>
            nextitem: <Function test_ClassWithErrors>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_inputargs_error>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_inputargs_error' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_inputargs_error' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_inputargs_error' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_f_inputargs_error
            location: ('tests/test_parse_mfile.py', 509, 'test_f_inputargs_error')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithErrors>
          nextitem: <Function test_ClassWithLineContinuation>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithErrors
            location: ('tests/test_parse_mfile.py', 515, 'test_ClassWithErrors')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithErrors>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='caplog' scope='function' baseid=''>
              request: <SubRequest 'caplog' for <Function test_ClassWithErrors>>
          finish pytest_fixture_setup --> <_pytest.logging.LogCaptureFixture object at 0x716ea7378d50> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithErrors>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithErrors' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithErrors' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithErrors' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithErrors>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithErrors>
            pytest_assertrepr_compare [hook]
                config: <_pytest.config.Config object at 0x716ea99eebd0>
                op: ==
                left: []
                right: [('sphinx.matlab-domain', 30, '[sphinxcontrib-matlabdomain] Parsing failed in test_data.ClassWithErrors. Check if valid MATLAB code.')]
            finish pytest_assertrepr_compare --> [["[] == [('sphinx.matlab-domain', 30, '[sphinxcontrib-matlabdomain] Parsing failed in test_data.ClassWithErrors. Check if valid MATLAB code.')]", '', "Right contains one more item: \x1b[0m(\x1b[33m'\x1b[39;49;00m\x1b[33msphinx.matlab-domain\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m, \x1b[94m30\x1b[39;49;00m, \x1b[33m'\x1b[39;49;00m\x1b[33m[sphinxcontrib-matlabdomain] Parsing failed in test_data.ClassWithErrors. Check if valid MATLAB code.\x1b[39;49;00m\x1b[33m'\x1b[39;49;00m)\x1b[90m\x1b[39;49;00m", '', 'Full diff:', '\x1b[0m\x1b[92m+ []\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m- [\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m-     (\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', "\x1b[91m-         'sphinx.matlab-domain',\x1b[39;49;00m\x1b[90m\x1b[39;49;00m", '\x1b[91m-         30,\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', "\x1b[91m-         '[sphinxcontrib-matlabdomain] Parsing failed in '\x1b[39;49;00m\x1b[90m\x1b[39;49;00m", "\x1b[91m-         'test_data.ClassWithErrors. Check if valid MATLAB code.',\x1b[39;49;00m\x1b[90m\x1b[39;49;00m", '\x1b[91m-     ),\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m- ]\x1b[39;49;00m\x1b[90m\x1b[39;49;00m']] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithErrors>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError("assert [] == [('sphinx.matlab-domain', 30, '[sphinxcontrib-matlabdomain] Parsing failed in test_data.C...[39;49;00m\n  \x1b[91m-     ),\x1b[39;49;00m\x1b[90m\x1b[39;49;00m\n  \x1b[91m- ]\x1b[39;49;00m\x1b[90m\x1b[39;49;00m") tblen=32>>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithErrors' when='call' outcome='skipped'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithErrors' when='call' outcome='skipped'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithErrors' when='call' outcome='skipped'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('xfailed', 'x', 'XFAIL') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithErrors>
            nextitem: <Function test_ClassWithLineContinuation>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='caplog' scope='function' baseid=''>
              request: <SubRequest 'caplog' for <Function test_ClassWithErrors>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithErrors>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithErrors' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithErrors' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithErrors' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithErrors
            location: ('tests/test_parse_mfile.py', 515, 'test_ClassWithErrors')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithLineContinuation>
          nextitem: <Function test_ClassWithNameMismatch>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithLineContinuation
            location: ('tests/test_parse_mfile.py', 532, 'test_ClassWithLineContinuation')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithLineContinuation>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithLineContinuation>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithLineContinuation' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithLineContinuation' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithLineContinuation' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithLineContinuation>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithLineContinuation>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithLineContinuation>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithLineContinuation' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithLineContinuation' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithLineContinuation' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithLineContinuation>
            nextitem: <Function test_ClassWithNameMismatch>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithLineContinuation>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithLineContinuation' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithLineContinuation' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithLineContinuation' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithLineContinuation
            location: ('tests/test_parse_mfile.py', 532, 'test_ClassWithLineContinuation')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithNameMismatch>
          nextitem: <Function test_ClassWithAttributes>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithNameMismatch
            location: ('tests/test_parse_mfile.py', 542, 'test_ClassWithNameMismatch')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithNameMismatch>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='caplog' scope='function' baseid=''>
              request: <SubRequest 'caplog' for <Function test_ClassWithNameMismatch>>
          finish pytest_fixture_setup --> <_pytest.logging.LogCaptureFixture object at 0x716ea8bc6d10> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithNameMismatch>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithNameMismatch' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithNameMismatch' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithNameMismatch' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithNameMismatch>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithNameMismatch>
            pytest_assertrepr_compare [hook]
                config: <_pytest.config.Config object at 0x716ea99eebd0>
                op: ==
                left: []
                right: [('sphinx.matlab-domain', 30, '[sphinxcontrib-matlabdomain] Unexpected class name: "ClassWithMismatch". Expected "ClassWithNameMismatch" in "test_data.ClassWithNameMismatch".')]
            finish pytest_assertrepr_compare --> [['[] == [(\'sphinx.matlab-domain\', 30, \'[sphinxcontrib-matlabdomain] Unexpected class name: "ClassWithMismatch". Expected "ClassWithNameMismatch" in "test_data.ClassWithNameMismatch".\')]', '', 'Right contains one more item: \x1b[0m(\x1b[33m\'\x1b[39;49;00m\x1b[33msphinx.matlab-domain\x1b[39;49;00m\x1b[33m\'\x1b[39;49;00m, \x1b[94m30\x1b[39;49;00m, \x1b[33m\'\x1b[39;49;00m\x1b[33m[sphinxcontrib-matlabdomain] Unexpected class name: \x1b[39;49;00m\x1b[33m"\x1b[39;49;00m\x1b[33mClassWithMismatch\x1b[39;49;00m\x1b[33m"\x1b[39;49;00m\x1b[33m. Expected \x1b[39;49;00m\x1b[33m"\x1b[39;49;00m\x1b[33mClassWithNameMismatch\x1b[39;49;00m\x1b[33m"\x1b[39;49;00m\x1b[33m in \x1b[39;49;00m\x1b[33m"\x1b[39;49;00m\x1b[33mtest_data.ClassWithNameMismatch\x1b[39;49;00m\x1b[33m"\x1b[39;49;00m\x1b[33m.\x1b[39;49;00m\x1b[33m\'\x1b[39;49;00m)\x1b[90m\x1b[39;49;00m', '', 'Full diff:', '\x1b[0m\x1b[92m+ []\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m- [\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m-     (\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', "\x1b[91m-         'sphinx.matlab-domain',\x1b[39;49;00m\x1b[90m\x1b[39;49;00m", '\x1b[91m-         30,\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', "\x1b[91m-         '[sphinxcontrib-matlabdomain] Unexpected class name: '\x1b[39;49;00m\x1b[90m\x1b[39;49;00m", '\x1b[91m-         \'"ClassWithMismatch". Expected "ClassWithNameMismatch" in \'\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m-         \'"test_data.ClassWithNameMismatch".\',\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m-     ),\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m- ]\x1b[39;49;00m\x1b[90m\x1b[39;49;00m']] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithNameMismatch>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert [] == [(\'sphinx.matlab-domain\', 30, \'[sphinxcontrib-matlabdomain] Unexpected class name: "Cl...[39;49;00m\n  \x1b[91m-     ),\x1b[39;49;00m\x1b[90m\x1b[39;49;00m\n  \x1b[91m- ]\x1b[39;49;00m\x1b[90m\x1b[39;49;00m') tblen=32>>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithNameMismatch' when='call' outcome='skipped'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithNameMismatch' when='call' outcome='skipped'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithNameMismatch' when='call' outcome='skipped'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('xfailed', 'x', 'XFAIL') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithNameMismatch>
            nextitem: <Function test_ClassWithAttributes>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='caplog' scope='function' baseid=''>
              request: <SubRequest 'caplog' for <Function test_ClassWithNameMismatch>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithNameMismatch>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithNameMismatch' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithNameMismatch' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithNameMismatch' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithNameMismatch
            location: ('tests/test_parse_mfile.py', 542, 'test_ClassWithNameMismatch')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithAttributes>
          nextitem: <Function test_ClassWithUnknownAttributes>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithAttributes
            location: ('tests/test_parse_mfile.py', 561, 'test_ClassWithAttributes')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithAttributes>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithAttributes>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithAttributes' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithAttributes' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithAttributes' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithAttributes>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithAttributes>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithAttributes>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithAttributes' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithAttributes' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithAttributes' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithAttributes>
            nextitem: <Function test_ClassWithUnknownAttributes>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithAttributes>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithAttributes' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithAttributes' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithAttributes' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithAttributes
            location: ('tests/test_parse_mfile.py', 561, 'test_ClassWithAttributes')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithUnknownAttributes>
          nextitem: <Function test_ClassWithEnumMethod>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithUnknownAttributes
            location: ('tests/test_parse_mfile.py', 570, 'test_ClassWithUnknownAttributes')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithUnknownAttributes>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='caplog' scope='function' baseid=''>
              request: <SubRequest 'caplog' for <Function test_ClassWithUnknownAttributes>>
          finish pytest_fixture_setup --> <_pytest.logging.LogCaptureFixture object at 0x716ea7355010> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithUnknownAttributes>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithUnknownAttributes' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithUnknownAttributes' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithUnknownAttributes' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithUnknownAttributes>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithUnknownAttributes>
            pytest_assertrepr_compare [hook]
                config: <_pytest.config.Config object at 0x716ea99eebd0>
                op: ==
                left: []
                right: [('sphinx.matlab-domain', 30, '[sphinxcontrib-matlabdomain] Unexpected class attribute: "Unknown". In "test_data.ClassWithUnknownAttributes".')]
            finish pytest_assertrepr_compare --> [['[] == [(\'sphinx.matlab-domain\', 30, \'[sphinxcontrib-matlabdomain] Unexpected class attribute: "Unknown". In "test_data.ClassWithUnknownAttributes".\')]', '', 'Right contains one more item: \x1b[0m(\x1b[33m\'\x1b[39;49;00m\x1b[33msphinx.matlab-domain\x1b[39;49;00m\x1b[33m\'\x1b[39;49;00m, \x1b[94m30\x1b[39;49;00m, \x1b[33m\'\x1b[39;49;00m\x1b[33m[sphinxcontrib-matlabdomain] Unexpected class attribute: \x1b[39;49;00m\x1b[33m"\x1b[39;49;00m\x1b[33mUnknown\x1b[39;49;00m\x1b[33m"\x1b[39;49;00m\x1b[33m. In \x1b[39;49;00m\x1b[33m"\x1b[39;49;00m\x1b[33mtest_data.ClassWithUnknownAttributes\x1b[39;49;00m\x1b[33m"\x1b[39;49;00m\x1b[33m.\x1b[39;49;00m\x1b[33m\'\x1b[39;49;00m)\x1b[90m\x1b[39;49;00m', '', 'Full diff:', '\x1b[0m\x1b[92m+ []\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m- [\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m-     (\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', "\x1b[91m-         'sphinx.matlab-domain',\x1b[39;49;00m\x1b[90m\x1b[39;49;00m", '\x1b[91m-         30,\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m-         \'[sphinxcontrib-matlabdomain] Unexpected class attribute: "Unknown". \'\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m-         \'In "test_data.ClassWithUnknownAttributes".\',\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m-     ),\x1b[39;49;00m\x1b[90m\x1b[39;49;00m', '\x1b[91m- ]\x1b[39;49;00m\x1b[90m\x1b[39;49;00m']] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithUnknownAttributes>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert [] == [(\'sphinx.matlab-domain\', 30, \'[sphinxcontrib-matlabdomain] Unexpected class attribute...[39;49;00m\n  \x1b[91m-     ),\x1b[39;49;00m\x1b[90m\x1b[39;49;00m\n  \x1b[91m- ]\x1b[39;49;00m\x1b[90m\x1b[39;49;00m') tblen=32>>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithUnknownAttributes' when='call' outcome='skipped'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithUnknownAttributes' when='call' outcome='skipped'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithUnknownAttributes' when='call' outcome='skipped'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('xfailed', 'x', 'XFAIL') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithUnknownAttributes>
            nextitem: <Function test_ClassWithEnumMethod>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='caplog' scope='function' baseid=''>
              request: <SubRequest 'caplog' for <Function test_ClassWithUnknownAttributes>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithUnknownAttributes>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithUnknownAttributes' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithUnknownAttributes' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithUnknownAttributes' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithUnknownAttributes
            location: ('tests/test_parse_mfile.py', 570, 'test_ClassWithUnknownAttributes')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithEnumMethod>
          nextitem: <Function test_ClassWithEventMethod>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithEnumMethod
            location: ('tests/test_parse_mfile.py', 592, 'test_ClassWithEnumMethod')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithEnumMethod>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithEnumMethod>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithEnumMethod' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEnumMethod' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEnumMethod' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithEnumMethod>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithEnumMethod>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithEnumMethod>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithEnumMethod' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEnumMethod' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEnumMethod' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithEnumMethod>
            nextitem: <Function test_ClassWithEventMethod>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithEnumMethod>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithEnumMethod' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEnumMethod' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEnumMethod' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithEnumMethod
            location: ('tests/test_parse_mfile.py', 592, 'test_ClassWithEnumMethod')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithEventMethod>
          nextitem: <Function test_f_with_function_variable>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithEventMethod
            location: ('tests/test_parse_mfile.py', 599, 'test_ClassWithEventMethod')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithEventMethod>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithEventMethod>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithEventMethod' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEventMethod' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEventMethod' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithEventMethod>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithEventMethod>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithEventMethod>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithEventMethod' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEventMethod' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEventMethod' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithEventMethod>
            nextitem: <Function test_f_with_function_variable>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithEventMethod>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithEventMethod' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEventMethod' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEventMethod' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithEventMethod
            location: ('tests/test_parse_mfile.py', 599, 'test_ClassWithEventMethod')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_f_with_function_variable>
          nextitem: <Function test_ClassWithGetterSetter>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_f_with_function_variable
            location: ('tests/test_parse_mfile.py', 606, 'test_f_with_function_variable')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_f_with_function_variable>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_function_variable>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_function_variable' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_function_variable' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_function_variable' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_f_with_function_variable>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_f_with_function_variable>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_function_variable>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_function_variable' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_function_variable' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_function_variable' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_f_with_function_variable>
            nextitem: <Function test_ClassWithGetterSetter>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_function_variable>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_function_variable' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_function_variable' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_function_variable' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_f_with_function_variable
            location: ('tests/test_parse_mfile.py', 606, 'test_f_with_function_variable')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithGetterSetter>
          nextitem: <Function test_ClassWithDoubleQuotedString>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithGetterSetter
            location: ('tests/test_parse_mfile.py', 616, 'test_ClassWithGetterSetter')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithGetterSetter>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithGetterSetter>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithGetterSetter' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithGetterSetter' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithGetterSetter' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithGetterSetter>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithGetterSetter>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithGetterSetter>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithGetterSetter' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithGetterSetter' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithGetterSetter' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithGetterSetter>
            nextitem: <Function test_ClassWithDoubleQuotedString>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithGetterSetter>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithGetterSetter' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithGetterSetter' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithGetterSetter' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithGetterSetter
            location: ('tests/test_parse_mfile.py', 616, 'test_ClassWithGetterSetter')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithDoubleQuotedString>
          nextitem: <Function test_ClassWithStrings>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithDoubleQuotedString
            location: ('tests/test_parse_mfile.py', 634, 'test_ClassWithDoubleQuotedString')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithDoubleQuotedString>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithDoubleQuotedString>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithDoubleQuotedString' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithDoubleQuotedString' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithDoubleQuotedString' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithDoubleQuotedString>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithDoubleQuotedString>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithDoubleQuotedString>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithDoubleQuotedString' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithDoubleQuotedString' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithDoubleQuotedString' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithDoubleQuotedString>
            nextitem: <Function test_ClassWithStrings>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithDoubleQuotedString>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithDoubleQuotedString' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithDoubleQuotedString' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithDoubleQuotedString' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithDoubleQuotedString
            location: ('tests/test_parse_mfile.py', 634, 'test_ClassWithDoubleQuotedString')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithStrings>
          nextitem: <Function test_ClassWithDummyArguments>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithStrings
            location: ('tests/test_parse_mfile.py', 654, 'test_ClassWithStrings')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithStrings>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithStrings>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithStrings' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithStrings' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithStrings' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithStrings>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithStrings>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithStrings>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithStrings' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithStrings' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithStrings' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithStrings>
            nextitem: <Function test_ClassWithDummyArguments>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithStrings>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithStrings' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithStrings' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithStrings' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithStrings
            location: ('tests/test_parse_mfile.py', 654, 'test_ClassWithStrings')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithDummyArguments>
          nextitem: <Function test_ClassFolderClassdef>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithDummyArguments
            location: ('tests/test_parse_mfile.py', 662, 'test_ClassWithDummyArguments')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithDummyArguments>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithDummyArguments>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithDummyArguments' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithDummyArguments' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithDummyArguments' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithDummyArguments>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithDummyArguments>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithDummyArguments>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithDummyArguments' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithDummyArguments' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithDummyArguments' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithDummyArguments>
            nextitem: <Function test_ClassFolderClassdef>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithDummyArguments>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithDummyArguments' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithDummyArguments' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithDummyArguments' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithDummyArguments
            location: ('tests/test_parse_mfile.py', 662, 'test_ClassWithDummyArguments')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassFolderClassdef>
          nextitem: <Function test_ClassWithMethodsWithSpaces>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassFolderClassdef
            location: ('tests/test_parse_mfile.py', 674, 'test_ClassFolderClassdef')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassFolderClassdef>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassFolderClassdef>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassFolderClassdef' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassFolderClassdef' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassFolderClassdef' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassFolderClassdef>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassFolderClassdef>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassFolderClassdef>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassFolderClassdef' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassFolderClassdef' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassFolderClassdef' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassFolderClassdef>
            nextitem: <Function test_ClassWithMethodsWithSpaces>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassFolderClassdef>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassFolderClassdef' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassFolderClassdef' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassFolderClassdef' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassFolderClassdef
            location: ('tests/test_parse_mfile.py', 674, 'test_ClassFolderClassdef')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithMethodsWithSpaces>
          nextitem: <Function test_ClassContainingParfor>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithMethodsWithSpaces
            location: ('tests/test_parse_mfile.py', 686, 'test_ClassWithMethodsWithSpaces')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithMethodsWithSpaces>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithMethodsWithSpaces>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithMethodsWithSpaces' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithMethodsWithSpaces' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithMethodsWithSpaces' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithMethodsWithSpaces>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithMethodsWithSpaces>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithMethodsWithSpaces>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithMethodsWithSpaces' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithMethodsWithSpaces' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithMethodsWithSpaces' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithMethodsWithSpaces>
            nextitem: <Function test_ClassContainingParfor>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithMethodsWithSpaces>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithMethodsWithSpaces' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithMethodsWithSpaces' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithMethodsWithSpaces' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithMethodsWithSpaces
            location: ('tests/test_parse_mfile.py', 686, 'test_ClassWithMethodsWithSpaces')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassContainingParfor>
          nextitem: <Function test_ClassWithStringEllipsis>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassContainingParfor
            location: ('tests/test_parse_mfile.py', 700, 'test_ClassContainingParfor')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassContainingParfor>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassContainingParfor>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassContainingParfor' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassContainingParfor' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassContainingParfor' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassContainingParfor>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassContainingParfor>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassContainingParfor>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassContainingParfor' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassContainingParfor' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassContainingParfor' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassContainingParfor>
            nextitem: <Function test_ClassWithStringEllipsis>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassContainingParfor>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassContainingParfor' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassContainingParfor' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassContainingParfor' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassContainingParfor
            location: ('tests/test_parse_mfile.py', 700, 'test_ClassContainingParfor')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithStringEllipsis>
          nextitem: <Function test_ClassLongProperty>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithStringEllipsis
            location: ('tests/test_parse_mfile.py', 709, 'test_ClassWithStringEllipsis')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithStringEllipsis>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithStringEllipsis>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithStringEllipsis' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithStringEllipsis' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithStringEllipsis' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithStringEllipsis>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithStringEllipsis>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithStringEllipsis>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithStringEllipsis' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithStringEllipsis' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithStringEllipsis' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithStringEllipsis>
            nextitem: <Function test_ClassLongProperty>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithStringEllipsis>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithStringEllipsis' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithStringEllipsis' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithStringEllipsis' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithStringEllipsis
            location: ('tests/test_parse_mfile.py', 709, 'test_ClassWithStringEllipsis')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassLongProperty>
          nextitem: <Function test_ClassWithLongPropertyDocstrings>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassLongProperty
            location: ('tests/test_parse_mfile.py', 718, 'test_ClassLongProperty')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassLongProperty>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassLongProperty>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassLongProperty' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassLongProperty' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassLongProperty' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassLongProperty>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassLongProperty>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassLongProperty>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassLongProperty' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassLongProperty' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassLongProperty' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassLongProperty>
            nextitem: <Function test_ClassWithLongPropertyDocstrings>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassLongProperty>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassLongProperty' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassLongProperty' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassLongProperty' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassLongProperty
            location: ('tests/test_parse_mfile.py', 718, 'test_ClassLongProperty')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithLongPropertyDocstrings>
          nextitem: <Function test_ClassWithLongPropertyTrailingEmptyDocstrings>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithLongPropertyDocstrings
            location: ('tests/test_parse_mfile.py', 734, 'test_ClassWithLongPropertyDocstrings')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithLongPropertyDocstrings>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithLongPropertyDocstrings>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithLongPropertyDocstrings' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithLongPropertyDocstrings' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithLongPropertyDocstrings' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithLongPropertyDocstrings>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithLongPropertyDocstrings>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithLongPropertyDocstrings>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithLongPropertyDocstrings' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithLongPropertyDocstrings' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithLongPropertyDocstrings' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithLongPropertyDocstrings>
            nextitem: <Function test_ClassWithLongPropertyTrailingEmptyDocstrings>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithLongPropertyDocstrings>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithLongPropertyDocstrings' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithLongPropertyDocstrings' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithLongPropertyDocstrings' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithLongPropertyDocstrings
            location: ('tests/test_parse_mfile.py', 734, 'test_ClassWithLongPropertyDocstrings')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithLongPropertyTrailingEmptyDocstrings>
          nextitem: <Function test_ClassWithPropertyValidators>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithLongPropertyTrailingEmptyDocstrings
            location: ('tests/test_parse_mfile.py', 747, 'test_ClassWithLongPropertyTrailingEmptyDocstrings')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithLongPropertyTrailingEmptyDocstrings>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithLongPropertyTrailingEmptyDocstrings>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithLongPropertyTrailingEmptyDocstrings' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithLongPropertyTrailingEmptyDocstrings' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithLongPropertyTrailingEmptyDocstrings' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithLongPropertyTrailingEmptyDocstrings>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithLongPropertyTrailingEmptyDocstrings>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithLongPropertyTrailingEmptyDocstrings>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithLongPropertyTrailingEmptyDocstrings' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithLongPropertyTrailingEmptyDocstrings' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithLongPropertyTrailingEmptyDocstrings' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithLongPropertyTrailingEmptyDocstrings>
            nextitem: <Function test_ClassWithPropertyValidators>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithLongPropertyTrailingEmptyDocstrings>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithLongPropertyTrailingEmptyDocstrings' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithLongPropertyTrailingEmptyDocstrings' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithLongPropertyTrailingEmptyDocstrings' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithLongPropertyTrailingEmptyDocstrings
            location: ('tests/test_parse_mfile.py', 747, 'test_ClassWithLongPropertyTrailingEmptyDocstrings')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithPropertyValidators>
          nextitem: <Function test_ClassWithTrailingCommentAfterBases>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithPropertyValidators
            location: ('tests/test_parse_mfile.py', 762, 'test_ClassWithPropertyValidators')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithPropertyValidators>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithPropertyValidators>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyValidators' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyValidators' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyValidators' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithPropertyValidators>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithPropertyValidators>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithPropertyValidators>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyValidators' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyValidators' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyValidators' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithPropertyValidators>
            nextitem: <Function test_ClassWithTrailingCommentAfterBases>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithPropertyValidators>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyValidators' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyValidators' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyValidators' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithPropertyValidators
            location: ('tests/test_parse_mfile.py', 762, 'test_ClassWithPropertyValidators')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithTrailingCommentAfterBases>
          nextitem: <Function test_ClassWithEllipsisProperties>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithTrailingCommentAfterBases
            location: ('tests/test_parse_mfile.py', 774, 'test_ClassWithTrailingCommentAfterBases')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithTrailingCommentAfterBases>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithTrailingCommentAfterBases>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithTrailingCommentAfterBases' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithTrailingCommentAfterBases' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithTrailingCommentAfterBases' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithTrailingCommentAfterBases>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithTrailingCommentAfterBases>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithTrailingCommentAfterBases>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithTrailingCommentAfterBases' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithTrailingCommentAfterBases' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithTrailingCommentAfterBases' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithTrailingCommentAfterBases>
            nextitem: <Function test_ClassWithEllipsisProperties>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithTrailingCommentAfterBases>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithTrailingCommentAfterBases' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithTrailingCommentAfterBases' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithTrailingCommentAfterBases' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithTrailingCommentAfterBases
            location: ('tests/test_parse_mfile.py', 774, 'test_ClassWithTrailingCommentAfterBases')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithEllipsisProperties>
          nextitem: <Function test_ClassWithTrailingSemicolons>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithEllipsisProperties
            location: ('tests/test_parse_mfile.py', 795, 'test_ClassWithEllipsisProperties')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithEllipsisProperties>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithEllipsisProperties>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithEllipsisProperties' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEllipsisProperties' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEllipsisProperties' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithEllipsisProperties>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithEllipsisProperties>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithEllipsisProperties>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithEllipsisProperties' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEllipsisProperties' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEllipsisProperties' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithEllipsisProperties>
            nextitem: <Function test_ClassWithTrailingSemicolons>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithEllipsisProperties>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithEllipsisProperties' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEllipsisProperties' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithEllipsisProperties' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithEllipsisProperties
            location: ('tests/test_parse_mfile.py', 795, 'test_ClassWithEllipsisProperties')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithTrailingSemicolons>
          nextitem: <Function test_ClassWithSeperatedComments>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithTrailingSemicolons
            location: ('tests/test_parse_mfile.py', 838, 'test_ClassWithTrailingSemicolons')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithTrailingSemicolons>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithTrailingSemicolons>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithTrailingSemicolons' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithTrailingSemicolons' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithTrailingSemicolons' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithTrailingSemicolons>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithTrailingSemicolons>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithTrailingSemicolons>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithTrailingSemicolons' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithTrailingSemicolons' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithTrailingSemicolons' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithTrailingSemicolons>
            nextitem: <Function test_ClassWithSeperatedComments>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithTrailingSemicolons>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithTrailingSemicolons' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithTrailingSemicolons' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithTrailingSemicolons' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithTrailingSemicolons
            location: ('tests/test_parse_mfile.py', 838, 'test_ClassWithTrailingSemicolons')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithSeperatedComments>
          nextitem: <Function test_ClassWithKeywordsAsFieldnames>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithSeperatedComments
            location: ('tests/test_parse_mfile.py', 866, 'test_ClassWithSeperatedComments')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithSeperatedComments>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithSeperatedComments>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithSeperatedComments' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithSeperatedComments' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithSeperatedComments' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithSeperatedComments>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithSeperatedComments>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithSeperatedComments>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithSeperatedComments' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithSeperatedComments' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithSeperatedComments' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithSeperatedComments>
            nextitem: <Function test_ClassWithKeywordsAsFieldnames>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithSeperatedComments>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithSeperatedComments' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithSeperatedComments' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithSeperatedComments' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithSeperatedComments
            location: ('tests/test_parse_mfile.py', 866, 'test_ClassWithSeperatedComments')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithKeywordsAsFieldnames>
          nextitem: <Function test_ClassWithNamedAsArguments>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithKeywordsAsFieldnames
            location: ('tests/test_parse_mfile.py', 878, 'test_ClassWithKeywordsAsFieldnames')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithKeywordsAsFieldnames>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithKeywordsAsFieldnames>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithKeywordsAsFieldnames' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithKeywordsAsFieldnames' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithKeywordsAsFieldnames' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithKeywordsAsFieldnames>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithKeywordsAsFieldnames>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithKeywordsAsFieldnames>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithKeywordsAsFieldnames' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithKeywordsAsFieldnames' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithKeywordsAsFieldnames' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithKeywordsAsFieldnames>
            nextitem: <Function test_ClassWithNamedAsArguments>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithKeywordsAsFieldnames>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithKeywordsAsFieldnames' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithKeywordsAsFieldnames' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithKeywordsAsFieldnames' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithKeywordsAsFieldnames
            location: ('tests/test_parse_mfile.py', 878, 'test_ClassWithKeywordsAsFieldnames')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithNamedAsArguments>
          nextitem: <Function test_ClassWithPropertyCellValues>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithNamedAsArguments
            location: ('tests/test_parse_mfile.py', 893, 'test_ClassWithNamedAsArguments')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithNamedAsArguments>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithNamedAsArguments>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithNamedAsArguments' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithNamedAsArguments' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithNamedAsArguments' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithNamedAsArguments>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithNamedAsArguments>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithNamedAsArguments>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithNamedAsArguments' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithNamedAsArguments' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithNamedAsArguments' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithNamedAsArguments>
            nextitem: <Function test_ClassWithPropertyCellValues>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithNamedAsArguments>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithNamedAsArguments' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithNamedAsArguments' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithNamedAsArguments' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithNamedAsArguments
            location: ('tests/test_parse_mfile.py', 893, 'test_ClassWithNamedAsArguments')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithPropertyCellValues>
          nextitem: <Function test_ClassWithTests>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithPropertyCellValues
            location: ('tests/test_parse_mfile.py', 905, 'test_ClassWithPropertyCellValues')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithPropertyCellValues>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithPropertyCellValues>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyCellValues' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyCellValues' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyCellValues' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithPropertyCellValues>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithPropertyCellValues>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithPropertyCellValues>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyCellValues' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyCellValues' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyCellValues' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithPropertyCellValues>
            nextitem: <Function test_ClassWithTests>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithPropertyCellValues>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyCellValues' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyCellValues' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithPropertyCellValues' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithPropertyCellValues
            location: ('tests/test_parse_mfile.py', 905, 'test_ClassWithPropertyCellValues')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_ClassWithTests>
          nextitem: <Function test_f_with_input_argument_block>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithTests
            location: ('tests/test_parse_mfile.py', 916, 'test_ClassWithTests')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ClassWithTests>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithTests>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithTests' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithTests' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithTests' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ClassWithTests>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ClassWithTests>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithTests>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithTests' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithTests' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithTests' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ClassWithTests>
            nextitem: <Function test_f_with_input_argument_block>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ClassWithTests>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_ClassWithTests' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithTests' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithTests' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_ClassWithTests
            location: ('tests/test_parse_mfile.py', 916, 'test_ClassWithTests')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_f_with_input_argument_block>
          nextitem: <Function test_f_with_output_argument_block>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_f_with_input_argument_block
            location: ('tests/test_parse_mfile.py', 926, 'test_f_with_input_argument_block')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_f_with_input_argument_block>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_input_argument_block>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_input_argument_block' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_input_argument_block' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_input_argument_block' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_f_with_input_argument_block>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_f_with_input_argument_block>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_input_argument_block>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_input_argument_block' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_input_argument_block' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_input_argument_block' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_f_with_input_argument_block>
            nextitem: <Function test_f_with_output_argument_block>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_input_argument_block>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_input_argument_block' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_input_argument_block' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_input_argument_block' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_f_with_input_argument_block
            location: ('tests/test_parse_mfile.py', 926, 'test_f_with_input_argument_block')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_f_with_output_argument_block>
          nextitem: <Function test_Application>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mfile.py::test_f_with_output_argument_block
            location: ('tests/test_parse_mfile.py', 946, 'test_f_with_output_argument_block')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_f_with_output_argument_block>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_output_argument_block>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_output_argument_block' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_output_argument_block' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_output_argument_block' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_f_with_output_argument_block>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_f_with_output_argument_block>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_output_argument_block>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_output_argument_block' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_output_argument_block' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_output_argument_block' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_f_with_output_argument_block>
            nextitem: <Function test_Application>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_f_with_output_argument_block>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mfile.py::test_f_with_output_argument_block' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_output_argument_block' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mfile.py::test_f_with_output_argument_block' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mfile.py::test_f_with_output_argument_block
            location: ('tests/test_parse_mfile.py', 946, 'test_f_with_output_argument_block')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_Application>
          nextitem: <Function test_setup>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_parse_mlappfile.py::test_Application
            location: ('tests/test_parse_mlappfile.py', 12, 'test_Application')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_Application>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_Application>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mlappfile.py::test_Application' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mlappfile.py::test_Application' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mlappfile.py::test_Application' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_Application>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_Application>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_Application>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mlappfile.py::test_Application' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mlappfile.py::test_Application' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mlappfile.py::test_Application' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_Application>
            nextitem: <Function test_setup>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_Application>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_parse_mlappfile.py::test_Application' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_parse_mlappfile.py::test_Application' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_parse_mlappfile.py::test_Application' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_parse_mlappfile.py::test_Application
            location: ('tests/test_parse_mlappfile.py', 12, 'test_Application')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_setup>
          nextitem: <Function test_setup>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_pymat.py::test_setup
            location: ('tests/test_pymat.py', 25, 'test_setup')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_setup>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_pymat.py'>
              request: <SubRequest 'rootdir' for <Function test_setup>>
          finish pytest_fixture_setup --> /home/remi-gau/github/matlabdomain/tests [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_pymat.py'>
              request: <SubRequest 'test_params' for <Function test_setup>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_pymat.py'>
              request: <SubRequest 'make_app' for <Function test_setup>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea79f5e40> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_setup>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_pymat.py::test_setup' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_pymat.py::test_setup' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_pymat.py::test_setup' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_setup>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_setup>
          early skip of rewriting module: func [assertion]
          early skip of rewriting module: func [assertion]
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_setup>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_pymat.py::test_setup' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_pymat.py::test_setup' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_pymat.py::test_setup' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_setup>
            nextitem: <Function test_setup>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_pymat.py'>
              request: <SubRequest 'make_app' for <Function test_setup>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_pymat.py'>
              request: <SubRequest 'make_app' for <Function test_setup>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_pymat.py'>
              request: <SubRequest 'test_params' for <Function test_setup>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_pymat.py'>
              request: <SubRequest 'rootdir' for <Function test_setup>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_setup>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_pymat.py::test_setup' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_pymat.py::test_setup' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_pymat.py::test_setup' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_pymat.py::test_setup
            location: ('tests/test_pymat.py', 25, 'test_setup')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_setup>
          nextitem: <Function test_no_alternative>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_pymat_common_root.py::test_setup
            location: ('tests/test_pymat_common_root.py', 25, 'test_setup')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_setup>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_pymat_common_root.py'>
              request: <SubRequest 'rootdir' for <Function test_setup>>
          finish pytest_fixture_setup --> /home/remi-gau/github/matlabdomain/tests [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_pymat_common_root.py'>
              request: <SubRequest 'test_params' for <Function test_setup>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_pymat_common_root.py'>
              request: <SubRequest 'make_app' for <Function test_setup>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea7e1a5c0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_setup>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_pymat_common_root.py::test_setup' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_pymat_common_root.py::test_setup' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_pymat_common_root.py::test_setup' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_setup>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_setup>
          early skip of rewriting module: base [assertion]
          early skip of rewriting module: base.PythonClass [assertion]
          early skip of rewriting module: base.PythonClass [assertion]
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_setup>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_pymat_common_root.py::test_setup' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_pymat_common_root.py::test_setup' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_pymat_common_root.py::test_setup' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_setup>
            nextitem: <Function test_no_alternative>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_pymat_common_root.py'>
              request: <SubRequest 'make_app' for <Function test_setup>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_pymat_common_root.py'>
              request: <SubRequest 'make_app' for <Function test_setup>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_pymat_common_root.py'>
              request: <SubRequest 'test_params' for <Function test_setup>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_pymat_common_root.py'>
              request: <SubRequest 'rootdir' for <Function test_setup>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_setup>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_pymat_common_root.py::test_setup' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_pymat_common_root.py::test_setup' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_pymat_common_root.py::test_setup' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_pymat_common_root.py::test_setup
            location: ('tests/test_pymat_common_root.py', 25, 'test_setup')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_no_alternative>
          nextitem: <Function test_packages>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_shortest_name.py::test_no_alternative
            location: ('tests/test_shortest_name.py', 3, 'test_no_alternative')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_no_alternative>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_alternative>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_shortest_name.py::test_no_alternative' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_shortest_name.py::test_no_alternative' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_shortest_name.py::test_no_alternative' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_no_alternative>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_no_alternative>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_alternative>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_shortest_name.py::test_no_alternative' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_shortest_name.py::test_no_alternative' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_shortest_name.py::test_no_alternative' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_no_alternative>
            nextitem: <Function test_packages>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_no_alternative>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_shortest_name.py::test_no_alternative' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_shortest_name.py::test_no_alternative' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_shortest_name.py::test_no_alternative' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_shortest_name.py::test_no_alternative
            location: ('tests/test_shortest_name.py', 3, 'test_no_alternative')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_packages>
          nextitem: <Function test_folders>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_shortest_name.py::test_packages
            location: ('tests/test_shortest_name.py', 11, 'test_packages')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_packages>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_packages>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_shortest_name.py::test_packages' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_shortest_name.py::test_packages' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_shortest_name.py::test_packages' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_packages>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_packages>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_packages>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_shortest_name.py::test_packages' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_shortest_name.py::test_packages' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_shortest_name.py::test_packages' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_packages>
            nextitem: <Function test_folders>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_packages>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_shortest_name.py::test_packages' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_shortest_name.py::test_packages' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_shortest_name.py::test_packages' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_shortest_name.py::test_packages
            location: ('tests/test_shortest_name.py', 11, 'test_packages')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_folders>
          nextitem: <Function test_weird>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_shortest_name.py::test_folders
            location: ('tests/test_shortest_name.py', 25, 'test_folders')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_folders>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_folders>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_shortest_name.py::test_folders' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_shortest_name.py::test_folders' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_shortest_name.py::test_folders' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_folders>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_folders>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_folders>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_shortest_name.py::test_folders' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_shortest_name.py::test_folders' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_shortest_name.py::test_folders' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_folders>
            nextitem: <Function test_weird>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_folders>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_shortest_name.py::test_folders' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_shortest_name.py::test_folders' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_shortest_name.py::test_folders' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_shortest_name.py::test_folders
            location: ('tests/test_shortest_name.py', 25, 'test_folders')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_weird>
          nextitem: <Function test_classfolders>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_shortest_name.py::test_weird
            location: ('tests/test_shortest_name.py', 33, 'test_weird')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_weird>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_weird>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_shortest_name.py::test_weird' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_shortest_name.py::test_weird' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_shortest_name.py::test_weird' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_weird>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_weird>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_weird>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_shortest_name.py::test_weird' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_shortest_name.py::test_weird' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_shortest_name.py::test_weird' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_weird>
            nextitem: <Function test_classfolders>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_weird>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_shortest_name.py::test_weird' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_shortest_name.py::test_weird' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_shortest_name.py::test_weird' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_shortest_name.py::test_weird
            location: ('tests/test_shortest_name.py', 33, 'test_weird')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_classfolders>
          nextitem: <Function test_setup>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_shortest_name.py::test_classfolders
            location: ('tests/test_shortest_name.py', 38, 'test_classfolders')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_classfolders>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_classfolders>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_shortest_name.py::test_classfolders' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_shortest_name.py::test_classfolders' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_shortest_name.py::test_classfolders' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_classfolders>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_classfolders>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_classfolders>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_shortest_name.py::test_classfolders' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_shortest_name.py::test_classfolders' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_shortest_name.py::test_classfolders' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_classfolders>
            nextitem: <Function test_setup>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_classfolders>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_shortest_name.py::test_classfolders' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_shortest_name.py::test_classfolders' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_shortest_name.py::test_classfolders' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_shortest_name.py::test_classfolders
            location: ('tests/test_shortest_name.py', 38, 'test_classfolders')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_setup>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: tests/test_skipping_module_members.py::test_setup
            location: ('tests/test_skipping_module_members.py', 24, 'test_setup')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_setup>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_skipping_module_members.py'>
              request: <SubRequest 'rootdir' for <Function test_setup>>
          finish pytest_fixture_setup --> /home/remi-gau/github/matlabdomain/tests [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_skipping_module_members.py'>
              request: <SubRequest 'test_params' for <Function test_setup>>
          finish pytest_fixture_setup --> [hook]
              shared_result: None
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_skipping_module_members.py'>
              request: <SubRequest 'make_app' for <Function test_setup>>
          finish pytest_fixture_setup --> <function make_app.<locals>.make at 0x716ea79976a0> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_setup>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_skipping_module_members.py::test_setup' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_skipping_module_members.py::test_setup' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_skipping_module_members.py::test_setup' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_setup>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_setup>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_setup>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_skipping_module_members.py::test_setup' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_skipping_module_members.py::test_setup' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_skipping_module_members.py::test_setup' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_setup>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_skipping_module_members.py'>
              request: <SubRequest 'make_app' for <Function test_setup>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='make_app' scope='function' baseid='tests/test_skipping_module_members.py'>
              request: <SubRequest 'make_app' for <Function test_setup>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_params' scope='function' baseid='tests/test_skipping_module_members.py'>
              request: <SubRequest 'test_params' for <Function test_setup>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='rootdir' scope='module' baseid='tests/test_skipping_module_members.py'>
              request: <SubRequest 'rootdir' for <Function test_setup>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_setup>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_skipping_module_members.py::test_setup' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_skipping_module_members.py::test_setup' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_skipping_module_members.py::test_setup' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x716ea99eebd0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_skipping_module_members.py::test_setup
            location: ('tests/test_skipping_module_members.py', 24, 'test_setup')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session  exitstatus=0 testsfailed=0 testscollected=141>
        exitstatus: 0
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x716ea94ca0d0>
          exitstatus: 0
          config: <_pytest.config.Config object at 0x716ea99eebd0>
        pytest_report_teststatus [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_f_with_name_mismatch' when='call' outcome='skipped'>
            config: <_pytest.config.Config object at 0x716ea99eebd0>
        finish pytest_report_teststatus --> ('xfailed', 'x', 'XFAIL') [hook]
        pytest_report_teststatus [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithErrors' when='call' outcome='skipped'>
            config: <_pytest.config.Config object at 0x716ea99eebd0>
        finish pytest_report_teststatus --> ('xfailed', 'x', 'XFAIL') [hook]
        pytest_report_teststatus [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithNameMismatch' when='call' outcome='skipped'>
            config: <_pytest.config.Config object at 0x716ea99eebd0>
        finish pytest_report_teststatus --> ('xfailed', 'x', 'XFAIL') [hook]
        pytest_report_teststatus [hook]
            report: <TestReport 'tests/test_parse_mfile.py::test_ClassWithUnknownAttributes' when='call' outcome='skipped'>
            config: <_pytest.config.Config object at 0x716ea99eebd0>
        finish pytest_report_teststatus --> ('xfailed', 'x', 'XFAIL') [hook]
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x716ea99eebd0>
    finish pytest_unconfigure --> [] [hook]
